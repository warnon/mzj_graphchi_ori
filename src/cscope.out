cscope 15 $HOME/graphchi-cpp-master/src -q 0000003253 0000536934
	@api/chifilenames.hpp

33 #i‚de‡
GRAPHCHI_FILENAMES_DEF


34 
	#GRAPHCHI_FILENAMES_DEF


	)

36 
	~<f°ªam
>

37 
	~<f˙é.h
>

38 
	~<°rög
>

39 
	~<s°ªam
>

40 
	~<°dlib.h
>

41 
	~<î∫o.h
>

42 
	~<uni°d.h
>

43 
	~<ve˘‹
>

44 
	~<sys/°©.h
>

46 
	~"gøphchi_ty≥s.hµ
"

47 
	~"loggî/loggî.hµ
"

49 #ifde‡
DYNAMICEDATA


50 
	~"sh¨ds/dy«micd©a/dy«micblock.hµ
"

53 
«me•a˚
 
	ggøphchi
 {

55 #ifde‡
__GNUC__


56 
	#VARIABLE_IS_NOT_USED
 
	`__©åibuã__
 ((
unu£d
))

	)

58 
	#VARIABLE_IS_NOT_USED


	)

60 
VARIABLE_IS_NOT_USED
 
gë_›ti⁄_öt
(c⁄° *
›ti⁄_«me
, 
deÁu…_vÆue
);

65 
	gãm∂©e
 <
ty≥«me
 
	gVîãxD©aTy≥
>

66 
	g°d
::
°rög
 
fûíame_vîãx_d©a
(
°d
::°rög 
ba£fûíame
) {

67 
°d
::
°rög°ªam
 
ss
;

68 
	gss
 << 
	gba£fûíame
;

69 
	gss
 << "." << (
	gVîãxD©aTy≥
) << "B.vout";

70  
	gss
.
°r
();

73 
	g°d
::
°rög
 
fûíame_degªe_d©a
(
°d
::°rög 
ba£fûíame
) {

74  
ba£fûíame
 + "_degs.bin";

77 
	g°d
::
°rög
 
fûíame_öãrvÆs
(
°d
::°rög 
ba£fûíame
, 
nsh¨ds
) {

78 
	g°d
::
°rög°ªam
 
ss
;

79 
	gss
 << 
	gba£fûíame
;

80 
	gss
 << "." << 
	gnsh¨ds
 << ".intervals";

81  
	gss
.
°r
();

85 
	g°d
::
°rög
 
VARIABLE_IS_NOT_USED
 
gë_∑π_°r
(
p
, 
nsh¨ds
) {

86 
	g∑π°r
[32];

87 
•rötf
(
∑π°r
, ".%d_%d", 
p
, 
nsh¨ds
);

88  
	g°d
::
°rög
(
∑π°r
);

91 
	gãm∂©e
 <
ty≥«me
 
	gEdgeD©aTy≥
>

92 
	g°d
::
°rög
 
fûíame_sh¨d_ed©a
(
°d
::°rög 
ba£fûíame
, 
p
, 
nsh¨ds
) {

93 
	g°d
::
°rög°ªam
 
ss
;

94 
	gss
 << 
	gba£fûíame
;

95 #ifde‡
DYNAMICEDATA


96 
	gss
 << ".dynamic.";

98 
	gss
 << ".edata.";

100 #i‚de‡
GRAPHCHI_DISABLE_COMPRESSION


101 
	gss
 << ".Z.";

103 
	gss
 << "e" << (
	gEdgeD©aTy≥
) << "B.";

104 
	gss
 << 
	gp
 << "_" << 
	gnsh¨ds
;

106  
	gss
.
°r
();

112 
	g°d
::
°rög
 
dú«me_sh¨d_ed©a_block
(
°d
::°rög 
ed©a_sh¨d«me
, 
size_t
 
blocksize
) {

113 
	g°d
::
°rög°ªam
 
ss
;

114 
	gss
 << 
	ged©a_sh¨d«me
;

115 
	gss
 << "_blockdú_" << 
	gblocksize
;

116  
	gss
.
°r
();

119 
	gãm∂©e
 <
ty≥«me
 
	gEdgeD©aTy≥
>

120 
size_t
 
gë_sh¨d_ed©a_fûesize
(
°d
::
°rög
 
ed©a_sh¨d«me
) {

121 
size_t
 
fsize
;

122 
	g°d
::
°rög
 
‚ame
 = 
ed©a_sh¨d«me
 + ".size";

123 
	g°d
::
if°ªam
 
ifs
(
‚ame
.
c_°r
());

124 i‡(!
	gifs
.
good
()) {

125 
log°ªam
(
LOG_FATAL
Ë<< "CouldÇŸÜﬂd " << 
	g‚ame
 << ". Pª¥o˚ssög f‹gŸãn?" << 
	g°d
::
ídl
;

126 
as£π
(
ifs
.
good
());

128 
	gifs
 >> 
	gfsize
;

129 
	gifs
.
˛o£
();

130  
	gfsize
;

134 
	g°d
::
°rög
 
fûíame_sh¨d_ed©a_block
(
°d
::°rög 
ed©a_sh¨d«me
, 
blockid
, 
size_t
 
blocksize
) {

135 
	g°d
::
°rög°ªam
 
ss
;

136 
	gss
 << 
dú«me_sh¨d_ed©a_block
(
ed©a_sh¨d«me
, 
blocksize
);

137 
	gss
 << "/";

138 
	gss
 << 
	gblockid
;

139  
	gss
.
°r
();

143 
	g°d
::
°rög
 
fûíame_sh¨d_adj
(
°d
::°rög 
ba£fûíame
, 
p
, 
nsh¨ds
) {

144 
	g°d
::
°rög°ªam
 
ss
;

145 
	gss
 << 
	gba£fûíame
;

146 
	gss
 << ".edata_azv.";

147 
	gss
 << 
	gp
 << "_" << 
	gnsh¨ds
 << ".adj";

148  
	gss
.
°r
();

151 
	g°d
::
°rög
 
fûíame_sh¨d_adjidx
(
°d
::°rög 
adjfûíame
) {

152  
adjfûíame
 + "idx";

158 
	g°d
::
°rög
 
fûíame_c⁄fig
();

159 
	g°d
::
°rög
 
fûíame_c⁄fig
() {

160 * 
chi_roŸ
 = 
gëív
("GRAPHCHI_ROOT");

161 i‡(
	gchi_roŸ
 !
NULL
) {

162  
°d
::
°rög
(
chi_roŸ
) + "/conf/graphchi.cnf";

172 
	g°d
::
°rög
 
fûíame_c⁄fig_loˇl
();

173 
	g°d
::
°rög
 
fûíame_c⁄fig_loˇl
() {

174 * 
chi_roŸ
 = 
gëív
("GRAPHCHI_ROOT");

175 i‡(
	gchi_roŸ
 !
NULL
) {

176  
°d
::
°rög
(
chi_roŸ
) + "/conf/graphchi.local.cnf";

183 
boﬁ
 
fûe_exi°s
(
°d
::
°rög
 
¢ame
);

184 
boﬁ
 
fûe_exi°s
(
°d
::
°rög
 
¢ame
) {

185 
åyf
 = 
›í
(
¢ame
.
c_°r
(), 
O_RDONLY
);

186 i‡(
	gåyf
 < 0) {

187  
	gÁl£
;

189 
˛o£
(
åyf
);

190  
	gåue
;

200 
	gãm∂©e
<
ty≥«me
 
	gEdgeD©aTy≥
>

201 
föd_sh¨ds
(
°d
::
°rög
 
ba£_fûíame
, std::°rög 
sh¨d_°rög
="auto") {

202 
åy_sh¨d_num
;

203 
	g°¨t_num
 = 0;

204 
	gœ°_sh¨d_num
 = 2400;

205 i‡(
	gsh¨d_°rög
 == "auto") {

206 
°¨t_num
 = 0;

208 
	g°¨t_num
 = 
©oi
(
sh¨d_°rög
.
c_°r
());

211 i‡(
	g°¨t_num
 > 0) {

212 
	gœ°_sh¨d_num
 = 
°¨t_num
;

214 
size_t
 
	gblocksize
 = 1024 * 1024;

215 
	gblocksize
 % (
	gEdgeD©aTy≥
Ë!0Ë
blocksize
++;

217 
	gåy_sh¨d_num
=
°¨t_num
;Åry_sh¨d_num <
œ°_sh¨d_num
;Åry_shard_num++) {

218 
	g°d
::
°rög
 
œ°_sh¨d_«me
 = 
fûíame_sh¨d_ed©a
<
EdgeD©aTy≥
>(
ba£_fûíame
, 
	gåy_sh¨d_num
 - 1,Åry_shard_num);

219 
	g°d
::
°rög
 
œ°_block_«me
 = 
fûíame_sh¨d_ed©a_block
(
œ°_sh¨d_«me
, 0, 
blocksize
);

220 
	gåyf
 = 
›í
(
œ°_block_«me
.
c_°r
(), 
O_RDONLY
);

221 i‡(
	gåyf
 >= 0) {

223 
˛o£
(
åyf
);

225 
	gnsh¨ds_ˇndid©e
 = 
åy_sh¨d_num
;

226 
boﬁ
 
	gsuc˚ss
 = 
åue
;

229 
	gp
=0;Ö < 
	gnsh¨ds_ˇndid©e
;Ö++) {

230 
	g°d
::
°rög
 
¢ame
 = 
fûíame_sh¨d_ed©a_block
(

231 
fûíame_sh¨d_ed©a
<
EdgeD©aTy≥
>(
ba£_fûíame
, 
p
, 
nsh¨ds_ˇndid©e
), 0, 
blocksize
);

232 i‡(!
fûe_exi°s
(
¢ame
)) {

233 
log°ªam
(
LOG_DEBUG
Ë<< "Missög dúe˘‹y fûe: " << 
	g¢ame
 << 
	g°d
::
ídl
;

234 
	gsuc˚ss
 = 
Ál£
;

238 
	g¢ame
 = 
fûíame_sh¨d_adj
(
ba£_fûíame
, 
p
, 
nsh¨ds_ˇndid©e
);

239 i‡(!
fûe_exi°s
(
¢ame
)) {

240 
log°ªam
(
LOG_DEBUG
Ë<< "Missög sh¨d fûe: " << 
	g¢ame
 << 
	g°d
::
ídl
;

241 
	gsuc˚ss
 = 
Ál£
;

247 
	g°d
::
°rög
 
degªe‚ame
 = 
fûíame_degªe_d©a
(
ba£_fûíame
);

248 i‡(!
fûe_exi°s
(
degªe‚ame
)) {

249 
log°ªam
(
LOG_ERROR
Ë<< "Missög degªêfûe: " << 
	gdegªe‚ame
 << 
	g°d
::
ídl
;

250 
log°ªam
(
LOG_ERROR
Ë<< "YouÇìdÅÿ¥ïro˚s†(sh¨dîËyou∏fûêagaö!" << 
	g°d
::
ídl
;

254 
	g°d
::
°rög
 
öãrvÆ‚ame
 = 
fûíame_öãrvÆs
(
ba£_fûíame
, 
nsh¨ds_ˇndid©e
);

255 i‡(!
fûe_exi°s
(
öãrvÆ‚ame
)) {

256 
log°ªam
(
LOG_ERROR
Ë<< "Missög i¡îvÆ†fûe: " << 
	göãrvÆ‚ame
 << 
	g°d
::
ídl
;

257 
log°ªam
(
LOG_ERROR
Ë<< "YouÇìdÅÿ¥ïro˚s†(sh¨dîËyou∏fûêagaö!" << 
	g°d
::
ídl
;

261 i‡(!
	gsuc˚ss
) {

265 
log°ªam
(
LOG_INFO
Ë<< "Dëe˘edÇumbî o‡sh¨ds: " << 
	gnsh¨ds_ˇndid©e
 << 
	g°d
::
ídl
;

266 
log°ªam
(
LOG_INFO
Ë<< "Tÿ•ecifyá dif„ª¡Çumbî o‡sh¨ds, u£ comm™d-löê∑ømëî 'nsh¨ds'" << 
	g°d
::
ídl
;

267  
	gnsh¨ds_ˇndid©e
;

270 i‡(
	gœ°_sh¨d_num
 =
°¨t_num
) {

271 
log°ªam
(
LOG_WARNING
Ë<< "CouldÇŸ föd sh¨d†wôhÇsh¨d†" << 
°¨t_num
 << 
°d
::
ídl
;

272 
log°ªam
(
LOG_WARNING
Ë<< "PÀa£ deföê'nsh¨d†0' o∏'nsh¨d†auto'Åÿautom©iˇŒy dëe˘." << 
	g°d
::
ídl
;

281 
	gãm∂©e
<
ty≥«me
 
	gEdgeD©aTy≥_
>

282 
dñëe_sh¨ds
(
°d
::
°rög
 
ba£_fûíame
, 
nsh¨ds
) {

283 #ifde‡
DYNAMICEDATA


284 
	tEdgeD©aTy≥
;

286 
EdgeD©aTy≥_
 
	tEdgeD©aTy≥
;

288 
log°ªam
(
LOG_DEBUG
Ë<< "Dñëög fûe†f‹ " << 
	gba£_fûíame
 << " sh¨ds=" << 
	gnsh¨ds
 << 
	g°d
::
ídl
;

289 
	g°d
::
°rög
 
öãrvÆ‚ame
 = 
fûíame_öãrvÆs
(
ba£_fûíame
, 
nsh¨ds
);

290 i‡(
fûe_exi°s
(
öãrvÆ‚ame
)) {

291 
	gîr
 = 
ªmove
(
öãrvÆ‚ame
.
c_°r
());

292 i‡(
	gîr
 !0Ë
log°ªam
(
LOG_ERROR
Ë<< "Eº‹Ñemovög fûê" << 
öãrvÆ‚ame


293 << ", " << 
°ªº‹
(
î∫o
Ë<< 
°d
::
ídl
;

303 
size_t
 
	gblocksize
 = 1024 * 1024;

304 
	gblocksize
 % (
	gEdgeD©aTy≥
Ë!0Ë
blocksize
++;

306 
	gp
=0;Ö < 
	gnsh¨ds
;Ö++) {

307 
	gblockid
 = 0;

308 
	g°d
::
°rög
 
fûíame_ed©a
 = 
fûíame_sh¨d_ed©a
<
EdgeD©aTy≥
>(
ba£_fûíame
, 
	gp
, 
	gnsh¨ds
);

309 
	g°d
::
°rög
 
fsizíame
 = 
fûíame_ed©a
 + ".size";

310 i‡(
fûe_exi°s
(
fsizíame
)) {

311 
	gîr
 = 
ªmove
(
fsizíame
.
c_°r
());

312 i‡(
	gîr
 !0Ë
log°ªam
(
LOG_ERROR
Ë<< "Eº‹Ñemovög fûê" << 
fsizíame


313 << ", " << 
°ªº‹
(
î∫o
Ë<< 
°d
::
ídl
;

315 
	gåue
) {

316 
	g°d
::
°rög
 
block_fûíame
 = 
fûíame_sh¨d_ed©a_block
(
fûíame_ed©a
, 
blockid
, 
blocksize
);

317 i‡(
fûe_exi°s
(
block_fûíame
)) {

318 
	gîr
 = 
ªmove
(
block_fûíame
.
c_°r
());

319 i‡(
	gîr
 !0Ë
log°ªam
(
LOG_ERROR
Ë<< "Eº‹Ñemovög fûê" << 
block_fûíame


320 << ", " << 
°ªº‹
(
î∫o
Ë<< 
°d
::
ídl
;

326 #ifde‡
DYNAMICEDATA


327 
dñëe_block_uncom¥es£d_sizefûe
(
block_fûíame
);

329 
	gblockid
++;

331 
	g°d
::
°rög
 
dú«me
 = 
dú«me_sh¨d_ed©a_block
(
fûíame_ed©a
, 
blocksize
);

332 i‡(
fûe_exi°s
(
dú«me
)) {

333 
	gîr
 = 
ªmove
(
dú«me
.
c_°r
());

334 i‡(
	gîr
 !0Ë
log°ªam
(
LOG_ERROR
Ë<< "Eº‹Ñemovög dúe˘‹y " << 
dú«me


335 << ", " << 
°ªº‹
(
î∫o
Ë<< 
°d
::
ídl
;

339 
	g°d
::
°rög
 
adj«me
 = 
fûíame_sh¨d_adj
(
ba£_fûíame
, 
p
, 
nsh¨ds
);

340 
log°ªam
(
LOG_DEBUG
Ë<< "Dñëög " << 
	gadj«me
 << "Éxi°s: " << 
fûe_exi°s
(
adj«me
Ë<< 
	g°d
::
ídl
;

342 i‡(
fûe_exi°s
(
adj«me
)) {

343 
	gîr
 = 
ªmove
(
adj«me
.
c_°r
());

344 i‡(
	gîr
 !0Ë
log°ªam
(
LOG_ERROR
Ë<< "Eº‹Ñemovög fûê" << 
adj«me


345 << ", " << 
°ªº‹
(
î∫o
Ë<< 
°d
::
ídl
;

348 
	g°d
::
°rög
 
idx«me
 = 
fûíame_sh¨d_adjidx
(
adj«me
);

349 
log°ªam
(
LOG_DEBUG
Ë<< "Dñëög " << 
	gidx«me
 << "Éxi°s: " << 
fûe_exi°s
(
idx«me
Ë<< 
	g°d
::
ídl
;

351 i‡(
fûe_exi°s
(
idx«me
)) {

352 
	gîr
 = 
ªmove
(
idx«me
.
c_°r
());

353 i‡(
	gîr
 !0Ë
log°ªam
(
LOG_ERROR
Ë<< "Eº‹Ñemovög fûê" << 
idx«me


354 << ", " << 
°ªº‹
(
î∫o
Ë<< 
°d
::
ídl
;

359 
	g°d
::
°rög
 
numv_fûíame
 = 
ba£_fûíame
 + ".numvertices";

360 i‡(
fûe_exi°s
(
numv_fûíame
)) {

361 
	gîr
 = 
ªmove
(
numv_fûíame
.
c_°r
());

362 i‡(
	gîr
 !0Ë
log°ªam
(
LOG_ERROR
Ë<< "Eº‹Ñemovög fûê" << 
numv_fûíame


363 << ", " << 
°ªº‹
(
î∫o
Ë<< 
°d
::
ídl
;

367 
	g°d
::
°rög
 
deg_fûíame
 = 
fûíame_degªe_d©a
(
ba£_fûíame
);

368 i‡(
fûe_exi°s
(
deg_fûíame
)) {

369 
	gîr
 = 
ªmove
(
deg_fûíame
.
c_°r
());

370 i‡(
	gîr
 !0Ë
log°ªam
(
LOG_ERROR
Ë<< "Eº‹Ñemovög fûê" << 
deg_fûíame


371 << ", " << 
°ªº‹
(
î∫o
Ë<< 
°d
::
ídl
;

379 
VARIABLE_IS_NOT_USED
 
lﬂd_vîãx_öãrvÆs
(
°d
::
°rög
 
ba£_fûíame
, 
nsh¨ds
, std::
ve˘‹
<°d::
∑ú
<
vid_t
, vid_t> > & 
öãrvÆs
, 
boﬁ
 
ÆlowÁû
);

380 
VARIABLE_IS_NOT_USED
 
lﬂd_vîãx_öãrvÆs
(
°d
::
°rög
 
ba£_fûíame
, 
nsh¨ds
, std::
ve˘‹
<°d::
∑ú
<
vid_t
, vid_t> > & 
öãrvÆs
, 
boﬁ
 
ÆlowÁû
=
Ál£
) {

381 
°d
::
°rög
 
öãrvÆsFûíame
 = 
fûíame_öãrvÆs
(
ba£_fûíame
, 
nsh¨ds
);

382 
	g°d
::
if°ªam
 
öãrvÆsF
(
öãrvÆsFûíame
.
c_°r
());

384 i‡(!
	göãrvÆsF
.
good
()) {

385 i‡(
	gÆlowÁû
) ;

386 
log°ªam
(
LOG_ERROR
Ë<< "CouldÇŸÜﬂd i¡îvÆs-fûe: " << 
	göãrvÆsFûíame
 << 
	g°d
::
ídl
;

388 
as£π
(
öãrvÆsF
.
good
());

390 
	göãrvÆs
.
˛ór
();

392 
vid_t
 
	g°
=0, 
	gí
;

393 
	gi
=0; i < 
	gnsh¨ds
; i++) {

394 
as£π
(!
öãrvÆsF
.
eof
());

395 
	göãrvÆsF
 >> 
	gí
;

396 
	göãrvÆs
.
push_back
(
°d
::
∑ú
<
vid_t
,vid_t>(
°
, 
í
));

397 
	g°
 = 
í
 + 1;

399 
	gi
=0; i < 
	gnsh¨ds
; i++) {

400 
log°ªam
(
LOG_INFO
Ë<< "sh¨d: " << 
	göãrvÆs
[
i
].
	gfú°
 << " - " << i¡îvÆs[i].
	g£c⁄d
 << 
	g°d
::
ídl
;

402 
	göãrvÆsF
.
˛o£
();

408 
VARIABLE_IS_NOT_USED
 
size_t
 
gë_num_vîti˚s
(
°d
::
°rög
 
ba£fûíame
);

409 
VARIABLE_IS_NOT_USED
 
size_t
 
gë_num_vîti˚s
(
°d
::
°rög
 
ba£fûíame
) {

410 
°d
::
°rög
 
numv_fûíame
 = 
ba£fûíame
 + ".numvertices";

411 
	g°d
::
if°ªam
 
vfûeF
(
numv_fûíame
.
c_°r
());

412 i‡(!
	gvfûeF
.
good
()) {

413 
log°ªam
(
LOG_ERROR
Ë<< "CouldÇŸ föd fûê" << 
	gnumv_fûíame
 << 
	g°d
::
ídl
;

414 
log°ªam
(
LOG_ERROR
Ë<< "Maybêyou havêﬁd sh¨d†-ÖÀa£Ñe¸óã." << 
	g°d
::
ídl
;

415 
as£π
(
Ál£
);

417 
size_t
 
	gn
;

418 
	gvfûeF
 >> 
	gn
;

419 
	gvfûeF
.
˛o£
();

420  
	gn
;

423 
	gãm∂©e
 <
ty≥«me
 
	gEdgeD©aTy≥
>

424 
	g°d
::
°rög
 
¥ïro˚ss_fûíame
(
°d
::°rög 
ba£fûíame
) {

425 
°d
::
°rög°ªam
 
ss
;

426 
	gss
 << 
	gba£fûíame
;

427 
	gss
 << "." << (
	gEdgeD©aTy≥
) << "B.bin";

428  
	gss
.
°r
();

438 
	gãm∂©e
 <
ty≥«me
 
	gEdgeD©aTy≥
>

439 
boﬁ
 
check_‹igfûe_modifiˇti⁄_óæõr
(
°d
::
°rög
 
ba£fûíame
, 
nsh¨ds
) {

441 i‡(
fûe_exi°s
(
ba£fûíame
Ë&& 
gë_›ti⁄_öt
("disable-modtime-check", 0) == 0) {

442 
°©
 
‹ig°©
, 
sh¨d°©
;

443 
	gîr1
 = 
°©
(
ba£fûíame
.
c_°r
(), &
‹ig°©
);

445 
	g°d
::
°rög
 
adj‚ame
 = 
fûíame_sh¨d_adj
(
ba£fûíame
, 0, 
nsh¨ds
);

446 
	gîr2
 = 
°©
(
adj‚ame
.
c_°r
(), &
sh¨d°©
);

448 i‡(
	gîr1
 !0 || 
îr2
 != 0) {

449 
log°ªam
(
LOG_ERROR
Ë<< "Eº‹ whí checkög fûêmodifiˇti⁄Åimes: " << 
°ªº‹
(
î∫o
Ë<< 
°d
::
ídl
;

450  
	gnsh¨ds
;

453 i‡(
	g‹ig°©
.
	g°_mtime
 > 
	gsh¨d°©
.st_mtime) {

454 
log°ªam
(
LOG_INFO
Ë<< "Thêöpuàgøph modifiˇti⁄ d©êwa†√wîÅh™ o‡thêsh¨ds." << 
	g°d
::
ídl
;

455 
log°ªam
(
LOG_INFO
Ë<< "GoögÅÿdñëêﬁd sh¨d†™dÑe¸óãÇew o√s. TÿdißbÀ " << 
	g°d
::
ídl
;

456 
log°ªam
(
LOG_INFO
Ë<< "fun˘i⁄Æôy, s≥cify --dißbÀ-modtime-check=1" << 
	g°d
::
ídl
;

459 
	gdñëe_sh¨ds
<
	gEdgeD©aTy≥
>(
	gba£fûíame
, 
	gnsh¨ds
);

462 
	g°d
::
°rög
 
¥ïrocfûe
 = 
¥ïro˚ss_fûíame
<
EdgeD©aTy≥
>(
ba£fûíame
);

463 i‡(
fûe_exi°s
(
¥ïrocfûe
)) {

464 
log°ªam
(
LOG_DEBUG
Ë<< "Dñëög: " << 
	g¥ïrocfûe
 << 
	g°d
::
ídl
;

465 
	gîr
 = 
ªmove
(
¥ïrocfûe
.
c_°r
());

466 i‡(
	gîr
 != 0) {

467 
log°ªam
(
LOG_ERROR
Ë<< "Eº‹ dñëög fûe: " << 
¥ïrocfûe
 << ", " <<

468 
°ªº‹
(
î∫o
Ë<< 
°d
::
ídl
;

471  
	gÁl£
;

473  
	gåue
;

478  
	gåue
;

	@api/dynamicdata/chivector.hpp

30 #i‚de‡
DEF_GRAPHCHI_CHIVECTOR


31 
	#DEF_GRAPHCHI_CHIVECTOR


	)

33 
	~<ve˘‹
>

34 
	~<°döt.h
>

36 
«me•a˚
 
	ggøphchi
 {

39 
	#MINCAPACITY
 2

	)

45 
	gãm∂©e
 <
ty≥«me
 
	gT
>

46 ˛as†
	cexãnsi⁄_poﬁ
 {

51 
	gãm∂©e
 <
ty≥«me
 
	gT
>

52 ˛as†
	cchive˘‹
 {

54 
uöt16_t
 
	gnsize
;

55 
uöt16_t
 
	gnˇ∑côy
;

56 
T
 * 
	gd©a
;

57 
	g°d
::
ve˘‹
<
T
> * 
exãnsi⁄s
;

59 
	gpublic
:

60 
T
 
	tñemít_ty≥_t
;

61 
uöt32_t
 
	tsizew‹d_t
;

62 
chive˘‹
() {

63 
	gexãnsi⁄s
 = 
NULL
;

66 
chive˘‹
(
uöt16_t
 
sz
, uöt16_à
ˇp
, 
T
 * 
d©≠å
Ë: 
d©a
(dataptr) {

67 
nsize
 = 
sz
;

68 
	gnˇ∑côy
 = 
ˇp
;

69 
as£π
(
ˇp
 >
nsize
);

70 
	gexãnsi⁄s
 = 
NULL
;

73 ~
chive˘‹
() {

74 i‡(
	gexãnsi⁄s
 !
NULL
) {

75 
dñëe
 
exãnsi⁄s
;

76 
	gexãnsi⁄s
 = 
NULL
;

80 
wrôe
(
T
 * 
de°
) {

81 
	gsz
 = (Ë
this
->
size
();

82 
	gi
=0; i < 
	gsz
; i++) {

83 
	gde°
[
i
] = 
gë
(i);

87 
uöt16_t
 
size
() {

88  
	gnsize
;

91 
uöt16_t
 
ˇ∑côy
() {

92  
	gnsize
 > 
	gMINCAPACITY
 ?Çsizê: 
MINCAPACITY
;

95 
add
(
T
 
vÆ
) {

96 
	gnsize
 ++;

97 i‡(
	gnsize
 > 
	gnˇ∑côy
) {

98 i‡(
	gexãnsi⁄s
 =
NULL
Ë
exãnsi⁄s
 = 
√w
 
°d
::
ve˘‹
<
T
>();

99 
	gexãnsi⁄s
->
push_back
(
vÆ
);

101 
	gd©a
[
nsize
 - 1] = 
vÆ
;

105 
£t
(
idx
, 
T
 
vÆ
){

106 i‡(
	gidx
 >
nˇ∑côy
) {

107 (*
exãnsi⁄s
)[
idx
 - ()
nˇ∑côy
] = 
vÆ
;

109 
	gd©a
[
idx
] = 
vÆ
;

115 
T
 
gë
(
idx
) {

116 i‡(
	gidx
 >
nˇ∑côy
) {

117  (* 
exãnsi⁄s
)[
idx
 - ()
nˇ∑côy
];

119  
	gd©a
[
idx
];

123 
ªmove
(
idx
) {

124 
as£π
(
Ál£
);

127 
föd
(
T
 
vÆ
) {

128 
as£π
(
Ál£
);

132 
˛ór
() {

133 
	gnsize
 = 0;

	@api/functional/functional_api.hpp

33 #i‚de‡
GRAPHCHI_FUNCTIONALAPI_DEF


34 
	#GRAPHCHI_FUNCTIONALAPI_DEF


	)

36 
	~<as£π.h
>

38 
	~"≠i/gøph_obje˘s.hµ
"

39 
	~"≠i/gøphchi_c⁄ãxt.hµ
"

40 
	~"ígöe/fun˘i⁄Æ/fun˘i⁄Æ_ígöe.hµ
"

41 
	~"mërics/mërics.hµ
"

42 
	~"gøphchi_ty≥s.hµ
"

44 
	~"≠i/fun˘i⁄Æ/fun˘i⁄Æ_defs.hµ
"

45 
	~"≠i/fun˘i⁄Æ/fun˘i⁄Æ_£misync.hµ
"

46 
	~"≠i/fun˘i⁄Æ/fun˘i⁄Æ_bulksync.hµ
"

47 
	~"¥ïro˚ssög/c⁄vîsi⁄s.hµ
"

49 
«me•a˚
 
	ggøphchi
 {

54 
	gãm∂©e
 <
ty≥«me
 
	gFVîãxD©aTy≥
,Åy≥«mê
	gFEdgeD©aTy≥
>

55 
	sfun˘i⁄Æ_kî√l
 {

57 
FVîãxD©aTy≥
 
	tVîãxD©aTy≥
;

58 
FEdgeD©aTy≥
 
	tEdgeD©aTy≥
;

60 
fun˘i⁄Æ_kî√l
() {}

63 
vútuÆ
 
VîãxD©aTy≥
 
öôül_vÆue
(
gøphchi_c⁄ãxt
 &
öfo
, 
vîãx_öfo
& 
myvîãx
) = 0;

65 
vútuÆ
 
VîãxD©aTy≥
 
ª£t
() = 0;

68 
vútuÆ
 
EdgeD©aTy≥
 
›_√ighb‹vÆ
(
gøphchi_c⁄ãxt
 &
öfo
, 
vîãx_öfo
& 
myvîãx
, 
vid_t
 
nbid
, EdgeD©aTy≥ 
nbvÆ
)= 0;

70 
vútuÆ
 
EdgeD©aTy≥
 
∂us
(
VîãxD©aTy≥
 
curvÆ
, EdgeD©aTy≥ 
tﬂdd
) = 0;

72 
vútuÆ
 
VîãxD©aTy≥
 
compuã_vîãxvÆue
(
gøphchi_c⁄ãxt
 &
göfo
, 
vîãx_öfo
& 
myvîãx
, 
EdgeD©aTy≥
 
nbvÆsum
) = 0;

74 
vútuÆ
 
EdgeD©aTy≥
 
vÆue_to_√ighb‹
(
gøphchi_c⁄ãxt
 &
öfo
, 
vîãx_öfo
& 
myvîãx
, 
vid_t
 
nbid
, 
VîãxD©aTy≥
 
myvÆ
) = 0;

93 
	gãm∂©e
 <
˛ass
 
	gKERNEL
>

94 
run_fun˘i⁄Æ_unweighãd_£misynchr⁄ous
(
°d
::
°rög
 
fûíame
, 
nôîs
, 
mërics
 &
_m
) {

95 
	gFun˘i⁄ÆProgømProxySemisync
<
	gKERNEL
> 
	g¥ogøm
;

98 
	gnsh¨ds


99 
c⁄vît_if_nŸexi°s
<
ty≥«me
 
Fun˘i⁄ÆProgømProxySemisync
<
KERNEL
>::
EdgeD©aTy≥
>(
fûíame
, 
gë_›ti⁄_°rög
("nshards", "auto"));

101 
	gfun˘i⁄Æ_ígöe
<
ty≥«me
 
	gFun˘i⁄ÆProgømProxySemisync
<
	gKERNEL
>::
VîãxD©aTy≥
,

102 
ty≥«me
 
	gFun˘i⁄ÆProgømProxySemisync
<
	gKERNEL
>::
EdgeD©aTy≥
,

103 
ty≥«me
 
	gFun˘i⁄ÆProgømProxySemisync
<
	gKERNEL
>::
fvîãx_t
 >

104 
ígöe
(
fûíame
, 
nsh¨ds
, 
Ál£
, 
_m
);

107 
	gígöe
.
£t_modifõs_öedges
(
Ál£
);

108 
	gígöe
.
£t_modifõs_ouãdges
(
åue
);

109 
	gígöe
.
run
(
¥ogøm
, 
nôîs
);

123 
	gãm∂©e
 <
˛ass
 
	gKERNEL
>

124 
run_fun˘i⁄Æ_unweighãd_synchr⁄ous
(
°d
::
°rög
 
fûíame
, 
nôîs
, 
mërics
 &
_m
) {

125 
	gFun˘i⁄ÆProgømProxyBulkSync
<
	gKERNEL
> 
	g¥ogøm
;

126 
	gnsh¨ds


127 
c⁄vît_if_nŸexi°s
<
ty≥«me
 
Fun˘i⁄ÆProgømProxyBulkSync
<
KERNEL
>::
EdgeD©aTy≥
>(
fûíame
, 
gë_›ti⁄_°rög
("nshards", "auto"));

129 
	gfun˘i⁄Æ_ígöe
<
ty≥«me
 
	gFun˘i⁄ÆProgømProxyBulkSync
<
	gKERNEL
>::
VîãxD©aTy≥
,

130 
ty≥«me
 
	gFun˘i⁄ÆProgømProxyBulkSync
<
	gKERNEL
>::
EdgeD©aTy≥
,

131 
ty≥«me
 
	gFun˘i⁄ÆProgømProxyBulkSync
<
	gKERNEL
>::
fvîãx_t
 >

132 
ígöe
(
fûíame
, 
nsh¨ds
, 
Ál£
, 
_m
);

133 
	gígöe
.
£t_modifõs_öedges
(
Ál£
);

134 
	gígöe
.
£t_modifõs_ouãdges
(
åue
);

135 
	gígöe
.
£t_íabÀ_dëîmöi°ic_∑øŒñism
(
Ál£
);

136 
	gígöe
.
run
(
¥ogøm
, 
nôîs
);

	@api/functional/functional_bulksync.hpp

35 #i‚de‡
GRAPHCHI_FUNCTIONAL_BULKSYNC_DEF


36 
	#GRAPHCHI_FUNCTIONAL_BULKSYNC_DEF


	)

38 
	~<as£π.h
>

41 
	~"≠i/gøph_obje˘s.hµ
"

42 
	~"≠i/gøphchi_c⁄ãxt.hµ
"

43 
	~"≠i/fun˘i⁄Æ/fun˘i⁄Æ_defs.hµ
"

45 
	~"mërics/mërics.hµ
"

46 
	~"gøphchi_ty≥s.hµ
"

48 
«me•a˚
 
	ggøphchi
 {

51 
	gãm∂©e
 <
ty≥«me
 
	gKERNEL
>

52 
˛ass
 
	gfun˘i⁄Æ_vîãx_unweighãd_bulksync
 : 
public
 
gøphchi_vîãx
<
ty≥«me
 
KERNEL
::
VîãxD©aTy≥
, 
	gPaúC⁄èöî
<ty≥«mê
	gKERNEL
::
EdgeD©aTy≥
> > {

53 
public
:

55 
ty≥«me
 
	tKERNEL
::
	tVîãxD©aTy≥
 
	tVT
;

56 
	gPaúC⁄èöî
<
	tty≥«me
 
	tKERNEL
::
	tEdgeD©aTy≥
> 
	tET
;

58 
KERNEL
 
	gkî√l
;

60 
VT
 
	gcumvÆ
;

62 
vîãx_öfo
 
	gvöfo
;

63 
gøphchi_c⁄ãxt
 * 
	ggc⁄ãxt
;

65 
fun˘i⁄Æ_vîãx_unweighãd_bulksync
(Ë: 
gøphchi_vîãx
<
VT
, 
	gET
> () {}

67 
fun˘i⁄Æ_vîãx_unweighãd_bulksync
(
gøphchi_c⁄ãxt
 &
göfo
, 
vid_t
 
_id
, 
ödeg
, 
outdeg
) :

68 
gøphchi_vîãx
<
VT
, 
	gET
> (
	g_id
, 
	gNULL
, NULL, 
	gödeg
, 
	goutdeg
) {

69 
	gvöfo
.
	gödegªe
 = 
ödeg
;

70 
	gvöfo
.
	goutdegªe
 = 
outdeg
;

71 
	gvöfo
.
	gvîãxid
 = 
_id
;

72 
	gcumvÆ
 = 
kî√l
.
ª£t
();

73 
	ggc⁄ãxt
 = &
göfo
;

76 
fun˘i⁄Æ_vîãx_unweighãd_bulksync
(
vid_t
 
_id
,

77 
gøphchi_edge
<
ET
> * 
ùå
,

78 
gøphchi_edge
<
ET
> * 
›å
,

79 
ödeg
,

80 
outdeg
) {

81 
as£π
(
Ál£
);

84 
fú°_ôî©i⁄
(
gøphchi_c⁄ãxt
 &
göfo
) {

85 
	gthis
->
£t_d©a
(
kî√l
.
öôül_vÆue
(
göfo
, 
vöfo
));

86 
	ggc⁄ãxt
 = &
göfo
;

91 
ölöe
 
add_öedge
(
vid_t
 
§c
, 
ET
 * 
±r
, 
boﬁ
 
•ecül_edge
) {

92 i‡(
	ggc⁄ãxt
->
	gôî©i⁄
 > 0) {

93 
gë_lock
(
vöfo
.
vîãxid
).
lock
();

94 
	gcumvÆ
 = 
kî√l
.
∂us
(
cumvÆ
, kî√l.
›_√ighb‹vÆ
(*
gc⁄ãxt
,

95 
vöfo
,

96 
§c
,

97 
±r
->
ﬁdvÆ
(
gc⁄ãxt
->
ôî©i⁄
)));

98 
gë_lock
(
vöfo
.
vîãxid
).
u∆ock
();

103 
ªady
(
gøphchi_c⁄ãxt
 &
göfo
) {

104 
	gthis
->
£t_d©a
(
kî√l
.
compuã_vîãxvÆue
(*
gc⁄ãxt
, 
vöfo
, 
cumvÆ
));

107 
ölöe
 
add_ouãdge
(
vid_t
 
d°
, 
ET
 * 
±r
, 
boﬁ
 
•ecül_edge
) {

108 
ty≥«me
 
	gKERNEL
::
EdgeD©aTy≥
 
√wvÆ
 =

109 
kî√l
.
vÆue_to_√ighb‹
(*
gc⁄ãxt
, 
vöfo
, 
d°
, 
this
->
gë_d©a
());

110 
ET
 
	g∑úc⁄t
 = *
±r
;

111 
	g∑úc⁄t
.
£t_√wvÆ
(
gc⁄ãxt
->
ôî©i⁄
, 
√wvÆ
);

112 *
	g±r
 = 
∑úc⁄t
;

115 
boﬁ
 
compuèti⁄Æ_edges
() {

116  
	gåue
;

123 
boﬁ
 
ªad_ouãdges
() {

124  
	gåue
;

130 
	gãm∂©e
 <
ty≥«me
 
	gKERNEL
>

131 
˛ass
 
	gFun˘i⁄ÆProgømProxyBulkSync
 : 
public
 
GøphChiProgøm
<
ty≥«me
 
KERNEL
::
VîãxD©aTy≥
, 
	gPaúC⁄èöî
<ty≥«mê
	gKERNEL
::
EdgeD©aTy≥
>, 
	gfun˘i⁄Æ_vîãx_unweighãd_bulksync
<KERNEL> > {

132 
	gpublic
:

134 
ty≥«me
 
	tKERNEL
::
	tVîãxD©aTy≥
 VertexDataType;

135 
	gPaúC⁄èöî
<
	tty≥«me
 
	tKERNEL
::
	tEdgeD©aTy≥
> EdgeDataType;

136 
	gfun˘i⁄Æ_vîãx_unweighãd_bulksync
<
	tKERNEL
> 
	tfvîãx_t
;

141 
bef‹e_ôî©i⁄
(
ôî©i⁄
, 
gøphchi_c⁄ãxt
 &
öfo
) {

147 
a·î_ôî©i⁄
(
ôî©i⁄
, 
gøphchi_c⁄ãxt
 &
göfo
) {

153 
bef‹e_exec_öãrvÆ
(
vid_t
 
wödow_°
, vid_à
wödow_í
, 
gøphchi_c⁄ãxt
 &
göfo
) {

160 
upd©e
(
fvîãx_t
 &
v
, 
gøphchi_c⁄ãxt
 &
göfo
) {

161 i‡(
	ggöfo
.
	gôî©i⁄
 == 0) {

162 
v
.
fú°_ôî©i⁄
(
göfo
);

164 
	gv
.
ªady
(
göfo
);

	@api/functional/functional_defs.hpp

27 #i‚de‡
GRAPHCHI_FUNCTIONALDEFS_DEF


28 
	#GRAPHCHI_FUNCTIONALDEFS_DEF


	)

30 
	~"≠i/gøphchi_¥ogøm.hµ
"

31 
	~<ve˘‹
>

32 
	~"utû/±hªad_toﬁs.hµ
"

34 
«me•a˚
 
	ggøphchi
 {

36 
	svîãx_öfo
 {

37 
vid_t
 
	gvîãxid
;

38 
	gödegªe
;

39 
	goutdegªe
;

43 
	gmuãx
 & 
gë_lock
(
vid_t
 
vîãxid
) {

44 
	g°d
::
ve˘‹
<
muãx
> 
locks
(1024);

45  
	glocks
[
vîãxid
 % 1024];

	@api/functional/functional_semisync.hpp

29 #i‚de‡
GRAPHCHI_FUNCTIONAL_SEMISYNC_DEF


30 
	#GRAPHCHI_FUNCTIONAL_SEMISYNC_DEF


	)

32 
	~<as£π.h
>

35 
	~"≠i/gøph_obje˘s.hµ
"

36 
	~"≠i/gøphchi_c⁄ãxt.hµ
"

37 
	~"≠i/fun˘i⁄Æ/fun˘i⁄Æ_defs.hµ
"

39 
	~"mërics/mërics.hµ
"

40 
	~"gøphchi_ty≥s.hµ
"

42 
«me•a˚
 
	ggøphchi
 {

44 
	gãm∂©e
 <
ty≥«me
 
	gKERNEL
>

45 ˛as†
	cfun˘i⁄Æ_vîãx_unweighãd_£misync
 {

46 
	gpublic
:

48 
ty≥«me
 
	tKERNEL
::
	tVîãxD©aTy≥
 
	tVT
;

49 
ty≥«me
 
	tKERNEL
::
	tEdgeD©aTy≥
 
	tET
;

51 
VT
 
	gcumvÆ
;

53 
KERNEL
 
	gkî√l
;

54 
vîãx_öfo
 
	gvöfo
;

55 
gøphchi_c⁄ãxt
 * 
	ggc⁄ãxt
;

58 
boﬁ
 
	göc
;

59 
boﬁ
 
	goutc
;

60 
boﬁ
 
	gscheduÀd
;

61 
boﬁ
 
	gmodifõd
;

62 
boﬁ
 
	g∑øŒñ_ß„
;

63 
VT
 * 
	gd©≠å
;

65 
fun˘i⁄Æ_vîãx_unweighãd_£misync
() {}

67 
fun˘i⁄Æ_vîãx_unweighãd_£misync
(
gøphchi_c⁄ãxt
 &
göfo
, 
vid_t
 
_id
, 
ödeg
, 
outdeg
) {

68 
	gvöfo
.
	gödegªe
 = 
ödeg
;

69 
	gvöfo
.
	goutdegªe
 = 
outdeg
;

70 
	gvöfo
.
	gvîãxid
 = 
_id
;

71 
	gcumvÆ
 = 
kî√l
.
ª£t
();

72 
	ggc⁄ãxt
 = &
göfo
;

75 
fun˘i⁄Æ_vîãx_unweighãd_£misync
(
vid_t
 
_id
,

76 
gøphchi_edge
<
ET
> * 
ùå
,

77 
gøphchi_edge
<
ET
> * 
›å
,

78 
ödeg
,

79 
outdeg
) {

80 
as£π
(
Ál£
);

83 
fú°_ôî©i⁄
(
gøphchi_c⁄ãxt
 &
gc⁄ãxt_
) {

84 
	gthis
->
£t_d©a
(
kî√l
.
öôül_vÆue
(
gc⁄ãxt_
, 
vöfo
));

89 
ölöe
 
add_öedge
(
vid_t
 
§c
, 
ET
 * 
±r
, 
boﬁ
 
•ecül_edge
) {

90 i‡(
	ggc⁄ãxt
->
	gôî©i⁄
 > 0) {

91 
gë_lock
(
vöfo
.
vîãxid
).
lock
();

92 
	gcumvÆ
 = 
kî√l
.
∂us
(
cumvÆ
, kî√l.
›_√ighb‹vÆ
(*
gc⁄ãxt
, 
vöfo
, 
§c
, *
±r
));

93 
gë_lock
(
vöfo
.
vîãxid
).
u∆ock
();

97 
ªady
(
gøphchi_c⁄ãxt
 &
gc⁄ãxt_
) {

98 
	gthis
->
£t_d©a
(
kî√l
.
compuã_vîãxvÆue
(
gc⁄ãxt_
, 
vöfo
, 
cumvÆ
));

101 
ölöe
 
add_ouãdge
(
vid_t
 
d°
, 
ET
 * 
±r
, 
boﬁ
 
•ecül_edge
) {

102 *
	g±r
 = 
kî√l
.
vÆue_to_√ighb‹
(*
gc⁄ãxt
, 
vöfo
, 
d°
, 
this
->
gë_d©a
());

105 
boﬁ
 
compuèti⁄Æ_edges
() {

106  
	gåue
;

110 
boﬁ
 
ªad_ouãdges
() {

111  
	gÁl£
;

119 
vútuÆ
 
£t_d©a
(
VT
 
d
) {

120 *(
	gthis
->
	gd©≠å
Ë
d
;

121 
	gthis
->
	gmodifõd
 = 
åue
;

124 
VT
 
gë_d©a
() {

125  *(
	gthis
->
	gd©≠å
);

132 
	gãm∂©e
 <
ty≥«me
 
	gKERNEL
>

133 
˛ass
 
	gFun˘i⁄ÆProgømProxySemisync
 : 
public
 
GøphChiProgøm
<
ty≥«me
 
KERNEL
::
VîãxD©aTy≥
,Åy≥«mê
	gKERNEL
::
EdgeD©aTy≥
, 
	gfun˘i⁄Æ_vîãx_unweighãd_£misync
<KERNEL> > {

134 
	gpublic
:

135 
ty≥«me
 
	tKERNEL
::
	tVîãxD©aTy≥
 VertexDataType;

136 
ty≥«me
 
	tKERNEL
::
	tEdgeD©aTy≥
 EdgeDataType;

137 
	gfun˘i⁄Æ_vîãx_unweighãd_£misync
<
	tKERNEL
> 
	tfvîãx_t
;

142 
bef‹e_ôî©i⁄
(
ôî©i⁄
, 
gøphchi_c⁄ãxt
 &
öfo
) {

148 
a·î_ôî©i⁄
(
ôî©i⁄
, 
gøphchi_c⁄ãxt
 &
göfo
) {

154 
bef‹e_exec_öãrvÆ
(
vid_t
 
wödow_°
, vid_à
wödow_í
, 
gøphchi_c⁄ãxt
 &
göfo
) {

160 
upd©e
(
fvîãx_t
 &
v
, 
gøphchi_c⁄ãxt
 &
göfo
) {

161 i‡(
	ggöfo
.
	gôî©i⁄
 == 0) {

162 
v
.
fú°_ôî©i⁄
(
göfo
);

164 
	gv
.
ªady
(
göfo
);

	@api/graph_objects.hpp

30 #i‚de‡
DEF_GRAPHCHI_OBJECTS


31 
	#DEF_GRAPHCHI_OBJECTS


	)

33 
	~<ve˘‹
>

34 
	~<as£π.h
>

35 
	~<omp.h
>

36 
	~<°rög.h
>

38 
	~"gøphchi_ty≥s.hµ
"

39 
	~"utû/qs‹t.hµ
"

41 
«me•a˚
 
	ggøphchi
 {

47 #ifde‡
__GNUC__


48 
	#VARIABLE_IS_NOT_USED
 
	`__©åibuã__
 ((
unu£d
))

	)

50 
	#VARIABLE_IS_NOT_USED


	)

55 
	gãm∂©e
 <
ty≥«me
 
	gEdgeD©aTy≥
>

56 ˛as†
	cgøphchi_edge
 {

58 
	gpublic
:

59 
vid_t
 
vîãxid
;

60 
EdgeD©aTy≥
 * 
	gd©a_±r
;

62 
gøphchi_edge
() {}

63 
gøphchi_edge
(
vid_t
 
_vîãxid
, 
EdgeD©aTy≥
 * 
ed©a_±r
Ë: 
vîãxid
(_vîãxid), 
d©a_±r
(edata_ptr) {

66 #i‚de‡
DYNAMICEDATA


67 
EdgeD©aTy≥
 
gë_d©a
() {

68  * 
	gd©a_±r
;

71 
£t_d©a
(
EdgeD©aTy≥
 
x
) {

72 *
	gd©a_±r
 = 
x
;

75 
EdgeD©aTy≥
 * 
gë_ve˘‹
() {

76  
	gd©a_±r
;

83 
vid_t
 
vîãx_id
() {

84  
	gvîãxid
;

88 } 
__©åibuã__
((
∑cked
));

90 
	gãm∂©e
 <
ty≥«me
 
	gET
>

91 
boﬁ
 
ïå_Àss
(c⁄° 
gøphchi_edge
<
ET
> &
a
, c⁄° gøphchi_edge<ET> &
b
) {

92  
	ga
.
	gvîãxid
 < 
	gb
.vertexid;

96 #ifde‡
SUPPORT_DELETIONS


106 
ölöe
 
boﬁ
 
VARIABLE_IS_NOT_USED
 
is_dñëed_edge_vÆue
(
vÆ
);

107 
ölöe
 
boﬁ
 
VARIABLE_IS_NOT_USED
 
	$is_dñëed_edge_vÆue
(
boﬁ
 
vÆ
) {

108  
vÆ
;

109 
	}
}

111 
ölöe
 
boﬁ
 
VARIABLE_IS_NOT_USED
 
is_dñëed_edge_vÆue
(
vÆ
);

112 
ölöe
 
boﬁ
 
VARIABLE_IS_NOT_USED
 
	$is_dñëed_edge_vÆue
(
vÆ
) {

113  0xfffffff‡=()
vÆ
;

114 
	}
}

116 
ölöe
 
boﬁ
 
VARIABLE_IS_NOT_USED
 
is_dñëed_edge_vÆue
(
vid_t
 
vÆ
);

117 
ölöe
 
boﬁ
 
VARIABLE_IS_NOT_USED
 
	$is_dñëed_edge_vÆue
(
vid_t
 
vÆ
) {

118  0xffffffffu =
vÆ
;

119 
	}
}

122 
ölöe
 
boﬁ
 
VARIABLE_IS_NOT_USED
 
is_dñëed_edge_vÆue
(
vÆ
);

123 
ölöe
 
boﬁ
 
VARIABLE_IS_NOT_USED
 
	$is_dñëed_edge_vÆue
(
vÆ
) {

124  !(
vÆ
 < 0 || val > 0);

125 
	}
}

127 
VARIABLE_IS_NOT_USED
 
ªmove_edgev
(
gøphchi_edge
<
boﬁ
> * 
e
);

128 
VARIABLE_IS_NOT_USED
 
ªmove_edgev
(
gøphchi_edge
<
boﬁ
> * 
e
) {

129 
	ge
->
£t_d©a
(
åue
);

132 
VARIABLE_IS_NOT_USED
 
ªmove_edgev
(
gøphchi_edge
<
vid_t
> * 
e
);

133 
VARIABLE_IS_NOT_USED
 
ªmove_edgev
(
gøphchi_edge
<
vid_t
> * 
e
) {

134 
	ge
->
£t_d©a
(0xffffffff);

137 
VARIABLE_IS_NOT_USED
 
ªmove_edgev
(
gøphchi_edge
<> * 
e
);

138 
VARIABLE_IS_NOT_USED
 
ªmove_edgev
(
gøphchi_edge
<> * 
e
) {

139 
	ge
->
£t_d©a
(0xffffffff);

145 
	gãm∂©e
 <
ty≥«me
 
	gVîãxD©aTy≥
,Åy≥«mê
	gEdgeD©aTy≥
>

146 ˛as†
	cöã∫Æ_gøphchi_vîãx
 {

148 
	gpublic
:

149 vﬁ©ûê
öc
;

150 vﬁ©ûê
	goutc
;

152 
vid_t
 
	gvîãxid
;

154 
	g¥Ÿe˘ed
:

155 
gøphchi_edge
<
EdgeD©aTy≥
> * 
öedges_±r
;

156 
	ggøphchi_edge
<
	gEdgeD©aTy≥
> * 
	gouãdges_±r
;

159 
	gpublic
:

160 
boﬁ
 
modifõd
;

161 
VîãxD©aTy≥
 * 
	gd©≠å
;

165 
boﬁ
 
	gscheduÀd
;

166 
boﬁ
 
	g∑øŒñ_ß„
;

168 #ifde‡
SUPPORT_DELETIONS


169 
	gdñëed_öc
;

170 
	gdñëed_outc
;

174 
öã∫Æ_gøphchi_vîãx
(Ë: 
öc
(0), 
outc
(0) {

175 #ifde‡
SUPPORT_DELETIONS


176 
	gdñëed_outc
 = 
dñëed_öc
 = 0;

178 
	gd©≠å
 = 
NULL
;

182 
öã∫Æ_gøphchi_vîãx
(
vid_t
 
_id
, 
gøphchi_edge
<
EdgeD©aTy≥
> * 
ùå
,

183 
gøphchi_edge
<
EdgeD©aTy≥
> * 
›å
,

184 
ödeg
,

185 
outdeg
) :

186 
vîãxid
(
_id
), 
öedges_±r
(
ùå
), 
ouãdges_±r
(
›å
) {

187 
	göc
 = 0;

188 
	goutc
 = 0;

189 
	gscheduÀd
 = 
Ál£
;

190 
	gmodifõd
 = 
Ál£
;

191 
	g∑øŒñ_ß„
 = 
åue
;

192 
	gd©≠å
 = 
NULL
;

193 #ifde‡
SUPPORT_DELETIONS


194 
	gdñëed_öc
 = 0;

195 
	gdñëed_outc
 = 0;

199 
	gvútuÆ
 ~
öã∫Æ_gøphchi_vîãx
() {}

202 
vid_t
 
id
() const {

203  
	gvîãxid
;

206 
num_öedges
() const {

207  
	göc
;

210 
num_ouãdges
() const {

211  
	goutc
;

213 
num_edges
() const {

214  
	göc
 + 
	goutc
;

222 
ölöe
 
add_öedge
(
vid_t
 
§c
, 
EdgeD©aTy≥
 * 
±r
, 
boﬁ
 
•ecül_edge
) {

223 #ifde‡
SUPPORT_DELETIONS


224 i‡(
	göedges_±r
 !
NULL
 && 
is_dñëed_edge_vÆue
(*
±r
)) {

225 
dñëed_öc
++;

229 
	gi
 = 
__sync_add_™d_„tch
(&
öc
, 1);

230 i‡(
	göedges_±r
 !
NULL
)

231 
öedges_±r
[
i
 - 1] = 
gøphchi_edge
<
EdgeD©aTy≥
>(
§c
, 
	g±r
);

233 
as£π
(
§c
 !
vîãxid
);

240 
ölöe
 
add_ouãdge
(
vid_t
 
d°
, 
EdgeD©aTy≥
 * 
±r
, 
boﬁ
 
•ecül_edge
) {

241 #ifde‡
SUPPORT_DELETIONS


242 i‡(
	gouãdges_±r
 !
NULL
 && 
is_dñëed_edge_vÆue
(*
±r
)) {

243 
dñëed_outc
++;

247 
	gi
 = 
__sync_add_™d_„tch
(&
outc
, 1);

248 i‡(
	gouãdges_±r
 !
NULL
Ë
ouãdges_±r
[
i
 - 1] = 
gøphchi_edge
<
EdgeD©aTy≥
>(
d°
, 
	g±r
);

249 
as£π
(
d°
 !
vîãxid
);

255 
	gãm∂©e
 <
ty≥«me
 
	gVîãxD©aTy≥
,Åy≥«mê
	gEdgeD©aTy≥
 >

256 
˛ass
 
	ggøphchi_vîãx
 : 
public
 
öã∫Æ_gøphchi_vîãx
<
VîãxD©aTy≥
, 
	gEdgeD©aTy≥
> {

258 
	gpublic
:

260 
gøphchi_vîãx
(Ë: 
öã∫Æ_gøphchi_vîãx
<
VîãxD©aTy≥
, 
	gEdgeD©aTy≥
>() { }

262 
gøphchi_vîãx
(
vid_t
 
_id
,

263 
gøphchi_edge
<
EdgeD©aTy≥
> * 
ùå
,

264 
gøphchi_edge
<
EdgeD©aTy≥
> * 
›å
,

265 
ödeg
,

266 
outdeg
) :

267 
öã∫Æ_gøphchi_vîãx
<
VîãxD©aTy≥
, 
	gEdgeD©aTy≥
>(
	g_id
, 
	gùå
, 
	g›å
, 
	gödeg
, 
	goutdeg
) {}

269 
	gvútuÆ
 ~
gøphchi_vîãx
() {}

275 
	ggøphchi_edge
<
	gEdgeD©aTy≥
> * 
edge
(
i
) {

276 i‡(
	gi
 < 
	gthis
->
	göc
Ë 
öedge
(
i
);

277  
ouãdge
(
i
 - 
this
->
öc
);

281 
	ggøphchi_edge
<
	gEdgeD©aTy≥
> * 
öedge
(
i
) {

282 
as£π
(
i
 >0 && i < 
this
->
öc
);

283  &
	gthis
->
	göedges_±r
[
i
];

286 
	ggøphchi_edge
<
	gEdgeD©aTy≥
> * 
ouãdge
(
i
) {

287 
as£π
(
i
 >0 && i < 
this
->
outc
);

288  &
	gthis
->
	gouãdges_±r
[
i
];

291 
	ggøphchi_edge
<
	gEdgeD©aTy≥
> * 
øndom_ouãdge
() {

292 i‡(
	gthis
->
	goutc
 =0Ë 
NULL
;

293  
ouãdge
((Ë(
°d
::
abs
(
øndom
()Ë% 
this
->
outc
));

299 #i‚de‡
DYNAMICVERTEXDATA


300 
VîãxD©aTy≥
 
gë_d©a
() {

301  *(
	gthis
->
	gd©≠å
);

305 
VîãxD©aTy≥
 * 
gë_ve˘‹
() {

306 
	gthis
->
	gmodifõd
 = 
åue
;

307  
	gthis
->
	gd©≠å
;

315 
vútuÆ
 
£t_d©a
(
VîãxD©aTy≥
 
d
) {

316 *(
	gthis
->
	gd©≠å
Ë
d
;

317 
	gthis
->
	gmodifõd
 = 
åue
;

321 
boﬁ
 
compuèti⁄Æ_edges
() {

322  
	gÁl£
;

324 
boﬁ
 
ªad_ouãdges
() {

325  
	gåue
;

334 
VARIABLE_IS_NOT_USED
 
s‹t_edges_ödúe˘
() {

336 i‡(
	gthis
->
	göc
 !(
this
->
ouãdges_±r
 -Åhis->
öedges_±r
)) {

338 
memmove
(&
this
->
öedges_±r
[this->
öc
],Åhis->
ouãdges_±r
,Åhis->
outc
 * (
gøphchi_edge
<
EdgeD©aTy≥
>));

339 
	gthis
->
	gouãdges_±r
 = &
this
->
öedges_±r
[this->
öc
];

341 
quickS‹t
(
this
->
öedges_±r
, (Ë—his->
öc
 +Åhis->
outc
), 
ïå_Àss
<
EdgeD©aTy≥
>);

346 #ifde‡
SUPPORT_DELETIONS


347 
VARIABLE_IS_NOT_USED
 
ªmove_edge
(
i
) {

348 
ªmove_edgev
(
edge
(
i
));

351 
VARIABLE_IS_NOT_USED
 
ªmove_öedge
(
i
) {

352 
ªmove_edgev
(
öedge
(
i
));

355 
VARIABLE_IS_NOT_USED
 
ªmove_ouãdge
(
i
) {

356 
ªmove_edgev
(
ouãdge
(
i
));

359 
VARIABLE_IS_NOT_USED
 
ªmove_ÆÀdges
() {

360 
	gj
=
this
->
num_edges
()-1; j>=0; j--Ë
ªmove_edge
(
j
);

364 
VARIABLE_IS_NOT_USED
 
ªmove_Ælouãdges
() {

365 
	gj
=
this
->
num_ouãdges
()-1; j>=0; j--Ë
ªmove_ouãdge
(
j
);

368 
VARIABLE_IS_NOT_USED
 
ªmove_Ælöedges
() {

369 
	gj
=
this
->
num_öedges
()-1; j>=0; j--Ë
ªmove_öedge
(
j
);

385 
	#HIGHMASK
 (1 + (2147483647 >> 1))

	)

386 
	#CLEARMASK
 (2147483647 >> 1)

	)

387 
ölöe
 
vid_t
 
	$å™¶©e_edge
(
vid_t
 
øwid
, 
boﬁ
 &
is_•ecül
) {

388 
is_•ecül
 = (
øwid
 & 
HIGHMASK
) != 0;

389  
øwid
 & 
CLEARMASK
;

390 
	}
}

391 
ölöe
 
vid_t
 
	$make_•ecül
(
vid_t
 
øwid
) {

392  
øwid
 | 
HIGHMASK
;

393 
	}
}

394 
ölöe
 
boﬁ
 
	$is_•ecül
(
vid_t
 
øwid
) {

395  (
øwid
 & 
HIGHMASK
) != 0;

396 
	}
}

	@api/graphchi_context.hpp

32 #i‚de‡
DEF_GRAPHCHI_CONTEXT


33 
	#DEF_GRAPHCHI_CONTEXT


	)

35 
	~<ve˘‹
>

36 
	~<as£π.h
>

37 
	~<omp.h
>

38 
	~<sys/time.h
>

40 
	~"gøphchi_ty≥s.hµ
"

41 
	~"≠i/ischeduÀr.hµ
"

43 
«me•a˚
 
	ggøphchi
 {

45 
	sgøphchi_c⁄ãxt
 {

47 
size_t
 
	gnvîti˚s
;

48 
size_t
 
	g√dges
;

50 
ischeduÀr
 * 
	gscheduÀr
;

51 
	gôî©i⁄
;

52 
	gnum_ôî©i⁄s
;

53 
	gœ°_ôî©i⁄
;

54 
	gexe˘hªads
;

55 
	g°d
::
ve˘‹
<> 
dñès
;

56 
timevÆ
 
	g°¨t
;

57 
	g°d
::
°rög
 
fûíame
;

58 
	gœ°_dñèsum
;

60 
gøphchi_c⁄ãxt
(Ë: 
scheduÀr
(
NULL
), 
ôî©i⁄
(0), 
œ°_ôî©i⁄
(-1) {

61 
gëtimeofday
(&
°¨t
, 
NULL
);

62 
	gœ°_dñèsum
 = 0.0;

65 
ru¡ime
() {

66 
timevÆ
 
	gíd
;

67 
gëtimeofday
(&
íd
, 
NULL
);

68  
	gíd
.
	gtv_£c
-
	g°¨t
.tv_£c+ (()”nd.
	gtv_u£c
-start.tv_usec))/1.0E6;

74 
£t_œ°_ôî©i⁄
(
_œ°_ôî©i⁄
) {

75 
	gœ°_ôî©i⁄
 = 
_œ°_ôî©i⁄
;

78 
ª£t_dñès
(
¡hªads
) {

79 
	gdñès
 = 
°d
::
ve˘‹
<>(
¡hªads
, 0.0);

82 
gë_dñè
() {

83 
	gd
 = 0.0;

84 
	gi
=0; i < ()
	gdñès
.
size
(); i++) {

85 
	gd
 +
dñès
[
i
];

87 
	gœ°_dñèsum
 = 
d
;

88  
	gd
;

91 
ölöe
 
boﬁ
 
i¢™
(
x
) {

92  !(
	gx
<0 || x>=0);

101 
log_ch™ge
(
dñè
) {

102 
	gdñès
[
omp_gë_thªad_num
()] +
dñè
;

103 
as£π
(
dñè
 >= 0);

104 
as£π
(!
i¢™
(
dñè
));

	@api/graphchi_program.hpp

32 #i‚de‡
GRAPHCHI_PROGRAM_DEF


33 
	#GRAPHCHI_PROGRAM_DEF


	)

35 
	~"≠i/gøph_obje˘s.hµ
"

36 
	~"≠i/gøphchi_c⁄ãxt.hµ
"

38 
«me•a˚
 
	ggøphchi
 {

40 
	gãm∂©e
 <
ty≥«me
 
	gVîãxD©aTy≥_
,Åy≥«mê
	gEdgeD©aTy≥_
,

41 
ty≥«me
 
	gvîãx_t
 = 
gøphchi_vîãx
<
VîãxD©aTy≥_
, 
	gEdgeD©aTy≥_
> >

42 ˛as†
	cGøphChiProgøm
 {

44 
	gpublic
:

45 
VîãxD©aTy≥_
 
	tVîãxD©aTy≥
;

46 
EdgeD©aTy≥_
 
	tEdgeD©aTy≥
;

48 
	gvútuÆ
 ~
GøphChiProgøm
() {}

53 
vútuÆ
 
bef‹e_ôî©i⁄
(
ôî©i⁄
, 
gøphchi_c⁄ãxt
 &
gc⁄ãxt
) {

59 
vútuÆ
 
a·î_ôî©i⁄
(
ôî©i⁄
, 
gøphchi_c⁄ãxt
 &
gc⁄ãxt
) {

66 
vútuÆ
 
boﬁ
 
ª≥©_upd©es
(
gøphchi_c⁄ãxt
 &
gc⁄ãxt
) {

67  
	gÁl£
;

75 
vútuÆ
 
bef‹e_exec_öãrvÆ
(
vid_t
 
wödow_°
, vid_à
wödow_í
, 
gøphchi_c⁄ãxt
 &
gc⁄ãxt
) {

81 
vútuÆ
 
a·î_exec_öãrvÆ
(
vid_t
 
wödow_°
, vid_à
wödow_í
, 
gøphchi_c⁄ãxt
 &
gc⁄ãxt
) {

87 
vútuÆ
 
upd©e
(
vîãx_t
 &
v
, 
gøphchi_c⁄ãxt
 &
gc⁄ãxt
) = 0;

	@api/graphlab2_1_GAS_api/assertions.hpp

58 #i‚de‡
_ASSERTIONS_H_


59 
	#_ASSERTIONS_H_


	)

61 
	~<°d¨g.h
>

62 
	~<°dlib.h
>

63 
	~<°dio.h
>

64 #ifde‡
HAVE_UNISTD_H


65 
	~<uni°d.h
>

67 
	~<°rög.h
>

68 
	~<as£π.h
>

69 
	~<î∫o.h
>

70 
	~<s°ªam
>

71 
	~<ˇs£π
>

73 
	~"loggî/loggî.hµ
"

74 
	~<boo°/ty≥of/ty≥of.hµ
>

76 
	$__¥öt_back_åa˚
() {

77 
	`log°ªam
(
LOG_ERROR
Ë<< "GøphChòd€†nŸ cuºíéy havêthê_¥öt_back_åa˚ im∂emíèti⁄!" << 
°d
::
ídl
;

78 
	}
}

84 
	#WRITE_TO_STDERR
(
buf
, 
Àn
Ë(
	`logbuf
(
LOG_FATAL
, buf,Üí))

	)

90 
	#CHECK
(
c⁄dôi⁄
) \

92 i‡(
	`__buûtö_ex≥˘
(!(
c⁄dôi⁄
), 0)) { \

93 
	`log°ªam
(
LOG_ERROR
) \

94 << "Check faûed: " << #c⁄dôi⁄ << 
°d
::
ídl
; \

95 
	`__¥öt_back_åa˚
(); \

96 
	`throw
("assertion failure"); \

98 } 0)

	)

103 
	#PCHECK
(
c⁄dôi⁄
) \

105 i‡(
	`__buûtö_ex≥˘
(!(
c⁄dôi⁄
), 0)) { \

106 c⁄° 
_PCHECK_îr_no_
 = 
î∫o
; \

107 
	`log°ªam
(
LOG_ERROR
) \

109 << 
	`°ªº‹
(
îr_no
Ë<< 
°d
::
ídl
; \

110 
	`__¥öt_back_åa˚
(); \

111 
	`throw
("assertion failure"); \

113 } 0)

	)

121 
	#CHECK_OP
(
›
, 
vÆ1
, 
vÆ2
) \

123 c⁄° 
	`ty≥of
(
vÆ1
Ë
_CHECK_OP_v1_
 = val1; \

124 c⁄° 
	`ty≥of
(
vÆ2
Ë
_CHECK_OP_v2_
 = (typeof(val2))val2; \

125 i‡(
	`__buûtö_ex≥˘
(!((
_CHECK_OP_v1_
Ë
›
 \

126 (
	`ty≥of
(
vÆ1
))(
_CHECK_OP_v2_
)), 0)) { \

127 
	`log°ªam
(
LOG_ERROR
) \

131 << 
_CHECK_OP_v1_
 \

133 << 
_CHECK_OP_v2_
 << "]" << 
°d
::
ídl
; \

134 
	`__¥öt_back_åa˚
(); \

135 
	`throw
("assertion failure"); \

137 } 0)

	)

139 
	#CHECK_EQ
(
vÆ1
, 
vÆ2
Ë
	`CHECK_OP
(==, vÆ1, vÆ2)

	)

140 
	#CHECK_NE
(
vÆ1
, 
vÆ2
Ë
	`CHECK_OP
(!=, vÆ1, vÆ2)

	)

141 
	#CHECK_LE
(
vÆ1
, 
vÆ2
Ë
	`CHECK_OP
(<=, vÆ1, vÆ2)

	)

142 
	#CHECK_LT
(
vÆ1
, 
vÆ2
Ë
	`CHECK_OP
(< , vÆ1, vÆ2)

	)

143 
	#CHECK_GE
(
vÆ1
, 
vÆ2
Ë
	`CHECK_OP
(>=, vÆ1, vÆ2)

	)

144 
	#CHECK_GT
(
vÆ1
, 
vÆ2
Ë
	`CHECK_OP
(> , vÆ1, vÆ2)

	)

147 
	#EXPECT_EQ
(
vÆ1
, 
vÆ2
Ë
	`CHECK_EQ
(vÆ1, vÆ2)

	)

148 
	#EXPECT_NE
(
vÆ1
, 
vÆ2
Ë
	`CHECK_NE
(vÆ1, vÆ2)

	)

149 
	#EXPECT_LE
(
vÆ1
, 
vÆ2
Ë
	`CHECK_LE
(vÆ1, vÆ2)

	)

150 
	#EXPECT_LT
(
vÆ1
, 
vÆ2
Ë
	`CHECK_LT
(vÆ1, vÆ2)

	)

151 
	#EXPECT_GE
(
vÆ1
, 
vÆ2
Ë
	`CHECK_GE
(vÆ1, vÆ2)

	)

152 
	#EXPECT_GT
(
vÆ1
, 
vÆ2
Ë
	`CHECK_GT
(vÆ1, vÆ2)

	)

153 
	#ASSERT_EQ
(
vÆ1
, 
vÆ2
Ë
	`EXPECT_EQ
(vÆ1, vÆ2)

	)

154 
	#ASSERT_NE
(
vÆ1
, 
vÆ2
Ë
	`EXPECT_NE
(vÆ1, vÆ2)

	)

155 
	#ASSERT_LE
(
vÆ1
, 
vÆ2
Ë
	`EXPECT_LE
(vÆ1, vÆ2)

	)

156 
	#ASSERT_LT
(
vÆ1
, 
vÆ2
Ë
	`EXPECT_LT
(vÆ1, vÆ2)

	)

157 
	#ASSERT_GE
(
vÆ1
, 
vÆ2
Ë
	`EXPECT_GE
(vÆ1, vÆ2)

	)

158 
	#ASSERT_GT
(
vÆ1
, 
vÆ2
Ë
	`EXPECT_GT
(vÆ1, vÆ2)

	)

160 
	#EXPECT_TRUE
(
c⁄d
Ë
	`CHECK
(c⁄d)

	)

161 
	#EXPECT_FALSE
(
c⁄d
Ë
	`CHECK
(!(c⁄d))

	)

162 
	#EXPECT_STREQ
(
a
, 
b
Ë
	`CHECK
(
	`°rcmp
◊, bË=0)

	)

163 
	#ASSERT_TRUE
(
c⁄d
Ë
	`EXPECT_TRUE
(c⁄d)

	)

164 
	#ASSERT_FALSE
(
c⁄d
Ë
	`EXPECT_FALSE
(c⁄d)

	)

165 
	#ASSERT_STREQ
(
a
, 
b
Ë
	`EXPECT_STREQ
◊, b)

	)

168 
	#ASSERT_MSG
(
c⁄dôi⁄
, 
fmt
, ...) \

170 i‡(
	`__buûtö_ex≥˘
(!(
c⁄dôi⁄
), 0)) { \

171 
	`log°ªam
(
LOG_ERROR
) \

173 
	`loggî
(
LOG_ERROR
, 
fmt
, ##
__VA_ARGS__
); \

174 
	`__¥öt_back_åa˚
(); \

175 
	`throw
("assertion failure"); \

177 } 0)

	)

180 
	#CHECK_ERR
(
övoˇti⁄
Ë
	`PCHECK
((övoˇti⁄Ë!-1)

	)

183 #ifde‡
NDEBUG


184 
	#DCHECK_EQ
(
vÆ1
, 
vÆ2
)

	)

185 
	#DCHECK_NE
(
vÆ1
, 
vÆ2
)

	)

186 
	#DCHECK_LE
(
vÆ1
, 
vÆ2
)

	)

187 
	#DCHECK_LT
(
vÆ1
, 
vÆ2
)

	)

188 
	#DCHECK_GE
(
vÆ1
, 
vÆ2
)

	)

189 
	#DCHECK_GT
(
vÆ1
, 
vÆ2
)

	)

190 
	#DASSERT_TRUE
(
c⁄d
)

	)

191 
	#DASSERT_FALSE
(
c⁄d
)

	)

192 
	#DASSERT_MSG
(
c⁄dôi⁄
, 
fmt
, ...)

	)

195 
	#DCHECK_EQ
(
vÆ1
, 
vÆ2
Ë
	`CHECK_EQ
(vÆ1, vÆ2)

	)

196 
	#DCHECK_NE
(
vÆ1
, 
vÆ2
Ë
	`CHECK_NE
(vÆ1, vÆ2)

	)

197 
	#DCHECK_LE
(
vÆ1
, 
vÆ2
Ë
	`CHECK_LE
(vÆ1, vÆ2)

	)

198 
	#DCHECK_LT
(
vÆ1
, 
vÆ2
Ë
	`CHECK_LT
(vÆ1, vÆ2)

	)

199 
	#DCHECK_GE
(
vÆ1
, 
vÆ2
Ë
	`CHECK_GE
(vÆ1, vÆ2)

	)

200 
	#DCHECK_GT
(
vÆ1
, 
vÆ2
Ë
	`CHECK_GT
(vÆ1, vÆ2)

	)

201 
	#DASSERT_TRUE
(
c⁄d
Ë
	`ASSERT_TRUE
(c⁄d)

	)

202 
	#DASSERT_FALSE
(
c⁄d
Ë
	`ASSERT_FALSE
(c⁄d)

	)

203 
	#DASSERT_MSG
(
c⁄dôi⁄
, 
fmt
, ...) \

205 i‡(
	`__buûtö_ex≥˘
(!(
c⁄dôi⁄
), 0)) { \

206 
	`log°ªam
(
LOG_ERROR
) \

208 
	`loggî
(
LOG_ERROR
, 
fmt
, ##
__VA_ARGS__
); \

209 
	`__¥öt_back_åa˚
(); \

210 
	`throw
("assertion failure"); \

212 } 0)

	)

217 #ifde‡
ERROR


218 #unde‡
ERROR


	@api/graphlab2_1_GAS_api/graphchi_graphlabv2_1.hpp

29 #i‚de‡
DEF_GRAPHLAB_WRAPPERS


30 
	#DEF_GRAPHLAB_WRAPPERS


	)

32 
	~"gøphchi_basic_ö˛udes.hµ
"

34 
usög
 
«me•a˚
 
	ggøphchi
;

37 
«me•a˚
 
	ggøphœb
 {

39 
	sIS_POD_TYPE
 { };

40 
	sem±y
 {};

42 
	eedge_dú_ty≥
 {

48 
	gNO_EDGES
 = 0,

53 
	gIN_EDGES
 = 1,

58 
	gOUT_EDGES
 = 2 ,

65 
	gALL_EDGES
 = 3

69 
vid_t
 
	tvîãx_id_ty≥
;

71 
	gãm∂©e
<
ty≥«me
 
	gGøphTy≥
,

72 
ty≥«me
 
	gG©hîTy≥
,

73 
ty≥«me
 
	gMesßgeTy≥
>

74 ˛as†
	cic⁄ãxt
 {

75 
	gpublic
:

81 
GøphTy≥
 
	tgøph_ty≥
;

87 
ty≥«me
 
	tgøph_ty≥
::
	tvîãx_ty≥
 vertex_type;

93 
ty≥«me
 
	tgøph_ty≥
::
	tvîãx_id_ty≥
 vertex_id_type;

99 
MesßgeTy≥
 
	tmesßge_ty≥
;

105 
G©hîTy≥
 
	tg©hî_ty≥
;

108 
gøphchi_c⁄ãxt
 * 
	ggc⁄ãxt
;

112 
	gpublic
:

114 
ic⁄ãxt
(
gøphchi_c⁄ãxt
 * 
gc⁄ãxt
) : gcontext(gcontext) {}

117 
vútuÆ
 ~
ic⁄ãxt
() { }

124 
vútuÆ
 
size_t
 
num_vîti˚s
(Ëc⁄° {  
gc⁄ãxt
->
nvîti˚s
; }

133 
vútuÆ
 
size_t
 
num_edges
(Ëc⁄° { 
as£π
(
Ál£
);  0; }

145 
vútuÆ
 
size_t
 
¥ocid
(Ëc⁄° {  (
	gsize_t
Ë
omp_gë_thªad_num
(); }

161 
vútuÆ
 
	g°d
::
o°ªam
& 
cout
(Ëc⁄° {  
°d
::cout; }

177 
vútuÆ
 
	g°d
::
o°ªam
& 
˚º
(Ëc⁄° {  
°d
::cerr; }

190 
vútuÆ
 
size_t
 
num_¥ocs
(Ëc⁄° {  
	ggc⁄ãxt
->
	gexe˘hªads
; }

197 
vútuÆ
 
ñ≠£d_£c⁄ds
(Ëc⁄° {  
	ggc⁄ãxt
->
ru¡ime
(); }

205 
vútuÆ
 
ôî©i⁄
(Ëc⁄° {  
	ggc⁄ãxt
->
	gôî©i⁄
; }

217 
vútuÆ
 
°›
() {

218 
	ggc⁄ãxt
->
	gœ°_ôî©i⁄
 = 
gc⁄ãxt
->
ôî©i⁄
;

239 
vútuÆ
 
sig«l
(c⁄° 
vîãx_ty≥
& 
vîãx
,

240 c⁄° 
mesßge_ty≥
& 
mesßge
 = message_type()) {

241 
gc⁄ãxt
->
scheduÀr
->
add_èsk
(
vîãx
.
id
());

255 
vútuÆ
 
sig«l_vid
(
vîãx_id_ty≥
 
gvid
,

256 c⁄° 
mesßge_ty≥
& 
mesßge
 = message_type()) {

257 
gc⁄ãxt
->
scheduÀr
->
add_èsk
(
gvid
);

284 
vútuÆ
 
po°_dñè
(c⁄° 
vîãx_ty≥
& 
vîãx
,

285 c⁄° 
g©hî_ty≥
& 
dñè
) {

286 
as£π
(
Ál£
);

297 
vútuÆ
 
˛ór_g©hî_ˇche
(c⁄° 
vîãx_ty≥
& 
vîãx
) {

298 
as£π
(
Ál£
);

305 
	gãm∂©e
 <
ty≥«me
 
	gGLVîãxD©aTy≥
,Åy≥«mê
	gEdgeD©aTy≥
>

306 
	gGøphLabVîãxWøµî
;

308 
	gãm∂©e
 <
ty≥«me
 
	gGLVîãxD©aTy≥
,Åy≥«mê
	gEdgeD©aTy≥
>

309 
	gGøphLabEdgeWøµî
;

313 
	gãm∂©e
 <
ty≥«me
 
	gvîãx_d©a
,Åy≥«mê
	gedge_d©a
>

314 
	sdi°ribuãd_gøph
 {

315 
vîãx_d©a
 
	tvîãx_d©a_ty≥
;

316 
edge_d©a
 
	tedge_d©a_ty≥
;

317 
	gGøphLabVîãxWøµî
<
	tvîãx_d©a_ty≥
, 
	tedge_d©a_ty≥
> 
	tvîãx_ty≥
;

318 
	gGøphLabEdgeWøµî
<
	tvîãx_d©a_ty≥
, 
	tedge_d©a_ty≥
> 
	tedge_ty≥
;

319 
	ggøphchi
::
	tvid_t
 
	tvîãx_id_ty≥
;

324 
	gãm∂©e
<
ty≥«me
 
	gGøph
,

325 
ty≥«me
 
	gG©hîTy≥
,Åy≥«mê
	gMesßgeTy≥
 = 
boﬁ
>

326 
	sivîãx_¥ogøm
 {

329 
ty≥«me
 
	tGøph
::
	tvîãx_d©a_ty≥
 vertex_data_type;

330 
ty≥«me
 
	tGøph
::
	tedge_d©a_ty≥
Édge_data_type;

331 
G©hîTy≥
 
	tg©hî_ty≥
;

332 
MesßgeTy≥
 
	tmesßge_ty≥
;

334 
Gøph
 
	tgøph_ty≥
;

335 
ty≥«me
 
	tgøphchi
::
	tvid_t
 
	tvîãx_id_ty≥
;

336 
	gGøphLabVîãxWøµî
<
	tvîãx_d©a_ty≥
, 
	tedge_d©a_ty≥
> 
	tvîãx_ty≥
;

337 
	gGøphLabEdgeWøµî
<
	tvîãx_d©a_ty≥
, 
	tedge_d©a_ty≥
> 
	tedge_ty≥
;

338 
	gic⁄ãxt
<
	tgøph_ty≥
, 
	tg©hî_ty≥
, 
	tmesßge_ty≥
> 
	tic⁄ãxt_ty≥
;

340 
	ggøphœb
::
	tedge_dú_ty≥
Édge_dir_type;

342 
vútuÆ
 
öô
(
ic⁄ãxt_ty≥
& 
c⁄ãxt
,

343 c⁄° 
vîãx_ty≥
& 
vîãx
,

344 c⁄° 
mesßge_ty≥
& 
msg
) { }

350 
vútuÆ
 
edge_dú_ty≥
 
g©hî_edges
(
ic⁄ãxt_ty≥
& 
c⁄ãxt
,

351 c⁄° 
vîãx_ty≥
& 
vîãx
) const {

352  
	gIN_EDGES
;

360 
vútuÆ
 
g©hî_ty≥
 
g©hî
(
ic⁄ãxt_ty≥
& 
c⁄ãxt
,

361 c⁄° 
vîãx_ty≥
& 
vîãx
,

362 
edge_ty≥
& 
edge
) const {

363 
log°ªam
(
LOG_FATAL
Ë<< "G©hîÇŸ im∂emíãd!" << 
	g°d
::
ídl
;

364  
g©hî_ty≥
();

371 
vútuÆ
 
≠∂y
(
ic⁄ãxt_ty≥
& 
c⁄ãxt
,

372 
vîãx_ty≥
& 
vîãx
,

373 c⁄° 
g©hî_ty≥
& 
tŸÆ
) = 0;

379 
vútuÆ
 
edge_dú_ty≥
 
sˇâî_edges
(
ic⁄ãxt_ty≥
& 
c⁄ãxt
,

380 c⁄° 
vîãx_ty≥
& 
vîãx
) const {

381  
	gOUT_EDGES
;

389 
vútuÆ
 
sˇâî
(
ic⁄ãxt_ty≥
& 
c⁄ãxt
, c⁄° 
vîãx_ty≥
& 
vîãx
,

390 
edge_ty≥
& 
edge
) const {

391 
log°ªam
(
LOG_FATAL
Ë<< "SˇâîÇŸ im∂emíãd!" << 
	g°d
::
ídl
;

395 
	gãm∂©e
 <
ty≥«me
 
	gGLVîãxD©aTy≥
,Åy≥«mê
	gEdgeD©aTy≥
>

396 
	sGøphLabVîãxWøµî
 {

397 
	ggøphchi_vîãx
<
	tboﬁ
, 
	tEdgeD©aTy≥
> 
	tVîãxTy≥
;

398 
GLVîãxD©aTy≥
 
	tvîãx_d©a_ty≥
;

399 
	gGøphLabVîãxWøµî
<
	tGLVîãxD©aTy≥
, 
	tEdgeD©aTy≥
> 
	tvîãx_ty≥
;

401 
	ggøphchi
::
vid_t
 
vîãxId
;

402 
VîãxTy≥
 * 
	gvîãx
;

403 
	g°d
::
ve˘‹
<
GLVîãxD©aTy≥
> * 
vîãxAºay
;

405 
GøphLabVîãxWøµî
(
gøphchi
::
vid_t
 
vîãxId
, 
VîãxTy≥
 * 
vîãx
,

406 
°d
::
ve˘‹
<
GLVîãxD©aTy≥
> * 
vîãxAºay
): 
vîãxId
(vertexId),

407 
vîãx
(vîãx), 
vîãxAºay
(vertexArray) { }

409 
boﬁ
 
	g›î©‹
==(
vîãx_ty≥
& 
Ÿhî
) const {

410  
vîãxId
 =
Ÿhî
.vertexId;

414 c⁄° 
	gvîãx_d©a_ty≥
& 
d©a
() const {

415  (*
	gvîãxAºay
)[
vîãxId
];

419 
	gvîãx_d©a_ty≥
& 
d©a
() {

420  (*
	gvîãxAºay
)[
vîãxId
];

424 
size_t
 
num_ö_edges
() const {

425 i‡(
	gvîãx
 =
NULL
) {

426 
log°ªam
(
LOG_ERROR
Ë<< "GøphChòd€†nŸ suµ‹àaskögÇeighb‹ vîti˚†ö/ouàdegªes." << 
°d
::
ídl
;

429  
	gvîãx
->
num_edges
();

433 
size_t
 
num_out_edges
() const {

434 i‡(
	gvîãx
 =
NULL
) {

435 
log°ªam
(
LOG_ERROR
Ë<< "GøphChòd€†nŸ suµ‹àaskögÇeighb‹ vîti˚†ö/ouàdegªes." << 
°d
::
ídl
;

438  
	gvîãx
->
num_ouãdges
();

442 
	ggøphchi
::
vid_t
 
id
() const {

443  
vîãxId
;

449 
	ggøphchi
::
vid_t
 
loˇl_id
() const {

450  
vîãxId
;

456 
	gãm∂©e
 <
ty≥«me
 
	gGLVîãxD©aTy≥
,Åy≥«mê
	gEdgeD©aTy≥
>

457 
	sGøphLabEdgeWøµî
 {

458 
	ggøphchi_vîãx
<
	tboﬁ
, 
	tEdgeD©aTy≥
> 
	tVîãxTy≥
;

459 
GLVîãxD©aTy≥
 
	tvîãx_d©a_ty≥
;

460 
EdgeD©aTy≥
 
	tedge_d©a_ty≥
;

461 
	gGøphLabVîãxWøµî
<
	tGLVîãxD©aTy≥
, 
	tEdgeD©aTy≥
> 
	tvîãx_ty≥
;

463 
	ggøphchi_edge
<
	gEdgeD©aTy≥
> * 
	gedge
;

464 
VîãxTy≥
 * 
	gvîãx
;

465 
	g°d
::
ve˘‹
<
GLVîãxD©aTy≥
> * 
vîãxAºay
;

466 
boﬁ
 
	gis_öedge
;

468 
GøphLabEdgeWøµî
(
gøphchi_edge
<
EdgeD©aTy≥
> * 
edge
, 
VîãxTy≥
 * 
vîãx
,

469 
°d
::
ve˘‹
<
GLVîãxD©aTy≥
> * 
vîãxAºay
, 
boﬁ
 
is_öedge
):

470 
edge
”dge), 
vîãx
(vîãx), 
vîãxAºay
(vîãxAºay), 
is_öedge
(is_inedge) { }

473 
	gpublic
:

486 
vîãx_ty≥
 
sour˚
() const {

487 i‡(
is_öedge
) {

488  
GøphLabVîãxWøµî
<
GLVîãxD©aTy≥
, 
	gEdgeD©aTy≥
>(
	gvîãx
->
id
(), vîãx, 
	gvîãxAºay
);

490  
	gGøphLabVîãxWøµî
<
	gGLVîãxD©aTy≥
, 
	gEdgeD©aTy≥
>(
	gedge
->
vîãx_id
(), 
	gNULL
, 
	gvîãxAºay
);

506 
vîãx_ty≥
 
èrgë
() const {

507 i‡(!
	gis_öedge
) {

508  
	gGøphLabVîãxWøµî
<
	gGLVîãxD©aTy≥
, 
	gEdgeD©aTy≥
>(
	gvîãx
->
id
(), vîãx, 
	gvîãxAºay
);

510  
	gGøphLabVîãxWøµî
<
	gGLVîãxD©aTy≥
, 
	gEdgeD©aTy≥
>(
	gedge
->
vîãx_id
(), 
	gNULL
, 
	gvîãxAºay
);

517 c⁄° 
	gedge_d©a_ty≥
& 
d©a
(Ëc⁄° {  
	gc⁄°_ˇ°
<edge_d©a_ty≥&>(*
	gedge
->
	gd©a_±r
); }

522 
	gedge_d©a_ty≥
& 
d©a
(Ë{  *(
	gedge
->
	gd©a_±r
); }

527 
	gãm∂©e
 <
˛ass
 
	gGøphLabVîãxProgøm
>

528 
	gGøphLabWøµî
 : 
public
 
GøphChiProgøm
<
boﬁ
, 
ty≥«me
 
	gGøphLabVîãxProgøm
::
edge_d©a_ty≥
> {

529 
boﬁ
 
	tVîãxD©aTy≥
;

530 
ty≥«me
 
	tGøphLabVîãxProgøm
::
	tvîãx_d©a_ty≥
 
	tGLVîãxD©aTy≥
;

531 
ty≥«me
 
	tGøphLabVîãxProgøm
::
	tedge_d©a_ty≥
 
	tEdgeD©aTy≥
;

532 
ty≥«me
 
	tGøphLabVîãxProgøm
::
	tg©hî_ty≥
 gather_type;

533 
ty≥«me
 
	tGøphLabVîãxProgøm
::
	tgøph_ty≥
 graph_type;

534 
ty≥«me
 
	tGøphLabVîãxProgøm
::
	tmesßge_ty≥
 message_type;

536 
	g°d
::
ve˘‹
<
GLVîãxD©aTy≥
> * 
vîãxInmem‹yAºay
;

538 
GøphLabWøµî
() {

539 
	gvîãxInmem‹yAºay
 = 
√w
 
°d
::
ve˘‹
<
GLVîãxD©aTy≥
>();

545 
vútuÆ
 
bef‹e_ôî©i⁄
(
ôî©i⁄
, 
gøphchi_c⁄ãxt
 &
gc⁄ãxt
) {

546 i‡(
	ggc⁄ãxt
.
	gôî©i⁄
 == 0) {

547 
log°ªam
(
LOG_INFO
Ë<< "Inôülizêvîti˚†ö mem‹y." << 
°d
::
ídl
;

548 
	gvîãxInmem‹yAºay
->
ªsize
(
gc⁄ãxt
.
nvîti˚s
);

555 
vútuÆ
 
a·î_ôî©i⁄
(
ôî©i⁄
, 
gøphchi_c⁄ãxt
 &
gc⁄ãxt
) {

561 
vútuÆ
 
bef‹e_exec_öãrvÆ
(
vid_t
 
wödow_°
, vid_à
wödow_í
, 
gøphchi_c⁄ãxt
 &
gc⁄ãxt
) {

567 
vútuÆ
 
a·î_exec_öãrvÆ
(
vid_t
 
wödow_°
, vid_à
wödow_í
, 
gøphchi_c⁄ãxt
 &
gc⁄ãxt
) {

573 
upd©e
(
gøphchi_vîãx
<
boﬁ
, 
EdgeD©aTy≥
> &
vîãx
, 
gøphchi_c⁄ãxt
 &
gc⁄ãxt
) {

574 
	ggøphœb
::
ic⁄ãxt
<
gøph_ty≥
, 
	gg©hî_ty≥
, 
	gmesßge_ty≥
> 
glc⁄ãxt
(&
gc⁄ãxt
);

577 
	gGøphLabVîãxWøµî
<
	gGLVîãxD©aTy≥
, 
	gEdgeD©aTy≥
> 
wøµîVîãx
(
vîãx
.
id
(), &vîãx, 
vîãxInmem‹yAºay
);

578 
GøphLabVîãxProgøm
 
	gglVîãxProgøm
;

581 
	gglVîãxProgøm
.
öô
(
glc⁄ãxt
, 
wøµîVîãx
, 
ty≥«me
 
GøphLabVîãxProgøm
::
mesßge_ty≥
());

582 c⁄° 
	gGøphLabVîãxProgøm
& 
	gc⁄°_v¥og
 = 
glVîãxProgøm
;

585 
edge_dú_ty≥
 
	gg©hî_dúe˘i⁄
 = 
c⁄°_v¥og
.
g©hî_edges
(
glc⁄ãxt
, 
wøµîVîãx
);

586 
g©hî_ty≥
 
	gsum
;

588 
	gg©hîed
 = 0;

589 
	gg©hî_dúe˘i⁄
) {

590 
	gALL_EDGES
:

591 
IN_EDGES
:

592 
i
=0; 
	gi
 < 
	gvîãx
.
num_öedges
(); i++) {

593 
	gGøphLabEdgeWøµî
<
	gGLVîãxD©aTy≥
, 
	gEdgeD©aTy≥
> 
edgeWøµî
(
vîãx
.
öedge
(
i
), &vîãx, 
vîãxInmem‹yAºay
, 
åue
);

594 i‡(
	gg©hîed
 > 0Ë
	gsum
 +
c⁄°_v¥og
.
g©hî
(
glc⁄ãxt
, 
wøµîVîãx
, 
edgeWøµî
);

595 
	gsum
 = 
c⁄°_v¥og
.
g©hî
(
glc⁄ãxt
, 
wøµîVîãx
, 
edgeWøµî
);

596 
	gg©hîed
++;

598 i‡(
	gg©hî_dúe˘i⁄
 !
ALL_EDGES
)

600 
	gOUT_EDGES
:

601 
i
=0; 
	gi
 < 
	gvîãx
.
num_ouãdges
(); i++) {

602 
	gGøphLabEdgeWøµî
<
	gGLVîãxD©aTy≥
, 
	gEdgeD©aTy≥
> 
edgeWøµî
(
vîãx
.
ouãdge
(
i
), &vîãx, 
vîãxInmem‹yAºay
, 
Ál£
);

603 i‡(
	gg©hîed
 > 0Ë
	gsum
 +
c⁄°_v¥og
.
g©hî
(
glc⁄ãxt
, 
wøµîVîãx
, 
edgeWøµî
);

604 
	gsum
 = 
c⁄°_v¥og
.
g©hî
(
glc⁄ãxt
, 
wøµîVîãx
, 
edgeWøµî
);

605 
	gg©hîed
++;

608 
	gNO_EDGES
:

611 
as£π
(
Ál£
);

616 
	gglVîãxProgøm
.
≠∂y
(
glc⁄ãxt
, 
wøµîVîãx
, 
sum
);

619 
edge_dú_ty≥
 
	gsˇâî_dúe˘i⁄
 = 
c⁄°_v¥og
.
sˇâî_edges
(
glc⁄ãxt
, 
wøµîVîãx
);

621 
	gsˇâî_dúe˘i⁄
) {

622 
	gALL_EDGES
:

623 
IN_EDGES
:

624 
i
=0; 
	gi
 < 
	gvîãx
.
num_öedges
(); i++) {

625 
	gGøphLabEdgeWøµî
<
	gGLVîãxD©aTy≥
, 
	gEdgeD©aTy≥
> 
edgeWøµî
(
vîãx
.
öedge
(
i
), &vîãx, 
vîãxInmem‹yAºay
, 
åue
);

626 
	gc⁄°_v¥og
.
sˇâî
(
glc⁄ãxt
, 
wøµîVîãx
, 
edgeWøµî
);

628 i‡(
	gsˇâî_dúe˘i⁄
 !
ALL_EDGES
)

630 
	gOUT_EDGES
:

631 
i
=0; 
	gi
 < 
	gvîãx
.
num_ouãdges
(); i++) {

632 
	gGøphLabEdgeWøµî
<
	gGLVîãxD©aTy≥
, 
	gEdgeD©aTy≥
> 
edgeWøµî
(
vîãx
.
ouãdge
(
i
), &vîãx, 
vîãxInmem‹yAºay
, 
Ál£
);

633 
	gc⁄°_v¥og
.
sˇâî
(
glc⁄ãxt
, 
wøµîVîãx
, 
edgeWøµî
);

636 
	gNO_EDGES
:

639 
as£π
(
Ál£
);

648 
	gãm∂©e
 <
ty≥«me
 
	gGøphLabVîãxProgøm
,Åy≥«mê
	gRedu˘i⁄Ty≥
,

649 
ty≥«me
 
	gEdgeM≠Ty≥
,

650 
ty≥«me
 
	gFöÆizîTy≥
>

651 
	gGøphLabEdgeAggªg©‹Wøµî
 : 
public
 
GøphChiProgøm
<
boﬁ
, 
ty≥«me
 
	gGøphLabVîãxProgøm
::
edge_d©a_ty≥
> {

652 
boﬁ
 
	tVîãxD©aTy≥
;

653 
ty≥«me
 
	tGøphLabVîãxProgøm
::
	tvîãx_d©a_ty≥
 
	tGLVîãxD©aTy≥
;

654 
ty≥«me
 
	tGøphLabVîãxProgøm
::
	tedge_d©a_ty≥
 
	tEdgeD©aTy≥
;

655 
ty≥«me
 
	tGøphLabVîãxProgøm
::
	tedge_ty≥
Édge_type;

656 
ty≥«me
 
	tGøphLabVîãxProgøm
::
	tg©hî_ty≥
 gather_type;

657 
ty≥«me
 
	tGøphLabVîãxProgøm
::
	tgøph_ty≥
 graph_type;

658 
ty≥«me
 
	tGøphLabVîãxProgøm
::
	tmesßge_ty≥
 message_type;

660 
muãx
 
	gm
;

661 
	g°d
::
ve˘‹
<
Redu˘i⁄Ty≥
> 
loˇœggr
;

662 
Redu˘i⁄Ty≥
 
	gaggr
;

663 
	g°d
::
ve˘‹
<
GLVîãxD©aTy≥
> * 
vîãxInmem‹yAºay
;

664 
EdgeM≠Ty≥
 
	gm≠_fun˘i⁄
;

665 
FöÆizîTy≥
 
	gföÆize_fun˘i⁄
;

667 
GøphLabEdgeAggªg©‹Wøµî
(
EdgeM≠Ty≥
 
m≠_fun˘i⁄
,

668 
FöÆizîTy≥
 
föÆize_fun˘i⁄
,

669 
°d
::
ve˘‹
<
ty≥«me
 
GøphLabVîãxProgøm
::
vîãx_d©a_ty≥
> * 
vîti˚s
Ë: 
m≠_fun˘i⁄
(map_function),

670 
föÆize_fun˘i⁄
(finalize_function) {

671 
	gvîãxInmem‹yAºay
 = 
vîti˚s
;

677 
vútuÆ
 
bef‹e_ôî©i⁄
(
ôî©i⁄
, 
gøphchi_c⁄ãxt
 &
gc⁄ãxt
) {

678 
	gaggr
 = 
Redu˘i⁄Ty≥
();

679 
	gloˇœggr
.
ªsize
(
gc⁄ãxt
.
exe˘hªads
);

685 
vútuÆ
 
a·î_ôî©i⁄
(
ôî©i⁄
, 
gøphchi_c⁄ãxt
 &
gc⁄ãxt
) {

686 
log°ªam
(
LOG_INFO
Ë<< "GoögÅÿru¿edge-aggªg©‹ föÆize." << 
	g°d
::
ídl
;

688 
	gi
=0; i < ()
	gloˇœggr
.
size
(); i++) {

689 
	gaggr
 +
loˇœggr
[
i
];

692 
	ggøphœb
::
ic⁄ãxt
<
gøph_ty≥
, 
	gg©hî_ty≥
, 
	gmesßge_ty≥
> 
glc⁄ãxt
(&
gc⁄ãxt
);

693 
föÆize_fun˘i⁄
(
glc⁄ãxt
, 
aggr
);

699 
vútuÆ
 
bef‹e_exec_öãrvÆ
(
vid_t
 
wödow_°
, vid_à
wödow_í
, 
gøphchi_c⁄ãxt
 &
gc⁄ãxt
) {

705 
vútuÆ
 
a·î_exec_öãrvÆ
(
vid_t
 
wödow_°
, vid_à
wödow_í
, 
gøphchi_c⁄ãxt
 &
gc⁄ãxt
) {

711 
upd©e
(
gøphchi_vîãx
<
boﬁ
, 
EdgeD©aTy≥
> &
vîãx
, 
gøphchi_c⁄ãxt
 &
gc⁄ãxt
) {

712 
	ggøphœb
::
ic⁄ãxt
<
gøph_ty≥
, 
	gg©hî_ty≥
, 
	gmesßge_ty≥
> 
glc⁄ãxt
(&
gc⁄ãxt
);

713 
Redu˘i⁄Ty≥
 
	ga
;

714 
	gi
=0; i < 
	gvîãx
.
num_edges
(); i++) {

715 c⁄° 
	gGøphLabEdgeWøµî
<
	gGLVîãxD©aTy≥
, 
	gEdgeD©aTy≥
> 
edgeWøµî
(
vîãx
.
edge
(
i
), &vîãx, 
vîãxInmem‹yAºay
, 
åue
);

716 
Redu˘i⁄Ty≥
 
	gm≠≥d
 = 
m≠_fun˘i⁄
(
glc⁄ãxt
, 
edgeWøµî
);

717 
	ga
 +
m≠≥d
;

719 
	gloˇœggr
[
omp_gë_thªad_num
()] +
a
;

729 
«me•a˚
 
	gmesßges
 {

734 
	gsum_¥i‹ôy
 : 
public
 
gøphœb
::
IS_POD_TYPE
 {

735 
vÆue
;

736 
sum_¥i‹ôy
(c⁄° 
vÆue
 = 0) : value(value) { }

737 
¥i‹ôy
(Ëc⁄° {  
vÆue
; }

738 
	gsum_¥i‹ôy
& 
	g›î©‹
+=(c⁄° 
sum_¥i‹ôy
& 
Ÿhî
) {

739 
vÆue
 +
Ÿhî
.value;

740  *
	gthis
;

747 
	gmax_¥i‹ôy
 : 
public
 
gøphœb
::
IS_POD_TYPE
 {

748 
vÆue
;

749 
max_¥i‹ôy
(c⁄° 
vÆue
 = 0) : value(value) { }

750 
¥i‹ôy
(Ëc⁄° {  
vÆue
; }

751 
	gmax_¥i‹ôy
& 
	g›î©‹
+=(c⁄° 
max_¥i‹ôy
& 
Ÿhî
) {

752 
vÆue
 = 
°d
::
max
(vÆue, 
Ÿhî
.value);

753  *
	gthis
;

765 
	gãm∂©e
 <
ty≥«me
 
	gGøphLabVîãxProgøm
>

766 
	g°d
::
ve˘‹
<
ty≥«me
 
GøphLabVîãxProgøm
::
vîãx_d©a_ty≥
> *

767 
run_gøphœb_vîãx¥ogøm
(
°d
::
°rög
 
ba£_fûíame
, 
nsh¨ds
, 
nôîs
, 
boﬁ
 
scheduÀr
, 
mërics
 & 
_m
,

768 
boﬁ
 
modifõs_öedges
=
åue
, boﬁ 
modifõs_ouãdges
=true) {

769 
gøphœb
::
	tGøphLabWøµî
<
	tGøphLabVîãxProgøm
> 
	tGLWøµî
;

770 
GLWøµî
 
	gwøµîProgøm
;

771 
	ggøphchi_ígöe
<
	gboﬁ
, 
ty≥«me
 
	gGLWøµî
::
EdgeD©aTy≥
> 
ígöe
(
ba£_fûíame
, 
nsh¨ds
, 
scheduÀr
, 
_m
);

772 
	gígöe
.
£t_modifõs_öedges
(
modifõs_öedges
);

773 
	gígöe
.
£t_modifõs_ouãdges
(
modifõs_ouãdges
);

774 
	gígöe
.
run
(
wøµîProgøm
, 
nôîs
);

775  
	gwøµîProgøm
.
	gvîãxInmem‹yAºay
;

778 
	gãm∂©e
 <
ty≥«me
 
	gGøphLabVîãxProgøm
,Åy≥«mê
	gRedu˘i⁄Ty≥
,

779 
ty≥«me
 
	gEdgeM≠Ty≥
,

780 
ty≥«me
 
	gFöÆizîTy≥
>

781 
Redu˘i⁄Ty≥
 
run_gøphœb_edge_aggªg©‹
(
°d
::
°rög
 
ba£_fûíame
, 
nsh¨ds
,

782 
EdgeM≠Ty≥
 
m≠_fun˘i⁄
,

783 
FöÆizîTy≥
 
föÆize_fun˘i⁄
, 
°d
::
ve˘‹
<
ty≥«me
 
GøphLabVîãxProgøm
::
vîãx_d©a_ty≥
> * 
vîti˚s
, 
mërics
 & 
_m
) {

784 
	ggøphœb
::
	tGøphLabEdgeAggªg©‹Wøµî
<
	tGøphLabVîãxProgøm
, 
	tRedu˘i⁄Ty≥
, 
	tEdgeM≠Ty≥
, 
	tFöÆizîTy≥
> 
	tGLEdgeAggrWøµî
;

785 
log°ªam
(
LOG_INFO
Ë<< "SèπögÉdgêaggªg©‹." << 
	g°d
::
ídl
;

786 
GLEdgeAggrWøµî
 
glAggªg©‹
(
m≠_fun˘i⁄
, 
föÆize_fun˘i⁄
, 
vîti˚s
);

787 
	ggøphchi_ígöe
<
	gboﬁ
, 
ty≥«me
 
	gGLEdgeAggrWøµî
::
EdgeD©aTy≥
> 
ígöe
(
ba£_fûíame
, 
nsh¨ds
, 
åue
, 
_m
);

788 
	gígöe
.
£t_modifõs_öedges
(
Ál£
);

789 
	gígöe
.
£t_modifõs_ouãdges
(
Ál£
);

790 
	gígöe
.
run
(
glAggªg©‹
, 1);

791  
	gglAggªg©‹
.
	gaggr
;

	@api/graphlab2_1_GAS_api/graphlab.hpp

29 #i‚de‡
DEF_GRAPHLAB_GAS_API_V2_1


30 
	#DEF_GRAPHLAB_GAS_API_V2_1


	)

33 
	~"≠i/gøphœb2_1_GAS_≠i/as£πi⁄s.hµ
"

34 
	~"≠i/gøphœb2_1_GAS_≠i/gøphchi_gøphœbv2_1.hµ
"

37 
	~<boo°/f‹óch.hµ
>

38 
	~<°döt.h
>

42 #ifde‡
__GNUC__


43 
	#GRAPHLAB_MACROS_INC_LEVEL
 
__INCLUDE_LEVEL__


	)

48 #ifde‡
GRAPHLAB_MACROS


52 
	#GRAPHLAB_MACROS


	)

56 
	#DISALLOW_COPY_AND_ASSIGN
(
Ty≥Name
) \

57 
	`Ty≥Name
(c⁄° 
Ty≥Name
&); \

58 
›î©‹
=(c⁄° 
Ty≥Name
&);

	)

64 
	#f‹óch
 
BOOST_FOREACH


	)

66 
	#ªv_f‹óch
 
BOOST_REVERSE_FOREACH


	)

69 
	~"≠i/gøphœb2_1_GAS_≠i/øndom.hµ
"

	@api/graphlab2_1_GAS_api/random.cpp

24 
	~<±hªad.h
>

26 
	~<£t
>

27 
	~<io°ªam
>

28 
	~<f°ªam
>

30 
	~<boo°/øndom.hµ
>

31 
	~<boo°/öãgî_åaôs.hµ
>

33 
	~"utû/±hªad_toﬁs.hµ
"

34 
	~"≠i/gøphœb2_1_GAS_≠i/gøphœb.hµ
"

38 
«me•a˚
 
	ggøphœb
 {

39 
«me•a˚
 
	gøndom
 {

44 ˛as†
	cn⁄dë_gíî©‹
 {

45 
	gpublic
:

46 
n⁄dë_gíî©‹
& 
globÆ
() {

47 
n⁄dë_gíî©‹
 
globÆ_gí
;

48  
	gglobÆ_gí
;

51 
size_t
 
	tªsu…_ty≥
;

52 
BOOST_STATIC_CONSTANT
(
ªsu…_ty≥
, 
mö_vÆue
 =

53 
boo°
::
öãgî_åaôs
<
ªsu…_ty≥
>::
c⁄°_mö
);

54 
BOOST_STATIC_CONSTANT
(
ªsu…_ty≥
, 
max_vÆue
 =

55 
boo°
::
öãgî_åaôs
<
ªsu…_ty≥
>::
c⁄°_max
);

56 
ªsu…_ty≥
 
mö
 
BOOST_PREVENT_MACRO_SUBSTITUTION
 (Ëc⁄° {  
	gmö_vÆue
; }

57 
ªsu…_ty≥
 
max
 
BOOST_PREVENT_MACRO_SUBSTITUTION
 (Ëc⁄° {  
	gmax_vÆue
; }

59 
n⁄dë_gíî©‹
() {

60 
	g∫d_dev
.
›í
("/dev/uøndom", 
°d
::
ios
::
bö¨y
 | std::ios::
ö
);

61 
ASSERT_TRUE
(
∫d_dev
.
good
());

64 ~
n⁄dë_gíî©‹
(Ë{ 
	g∫d_dev
.
˛o£
(); }

66 
ªsu…_ty≥
 
›î©‹
()() {

68 
ªsu…_ty≥
 
ªsu…
(0);

69 
	gmut
.
lock
();

70 
ASSERT_TRUE
(
∫d_dev
.
good
());

71 
	g∫d_dev
.
ªad
(
ªöãΩªt_ˇ°
<*>(&
ªsu…
), (
ªsu…_ty≥
));

72 
ASSERT_TRUE
(
∫d_dev
.
good
());

73 
	gmut
.
u∆ock
();

75  
	gªsu…
;

77 
	g¥iv©e
:

78 
°d
::
if°ªam
 
∫d_dev
;

79 
muãx
 
	gmut
;

92 
	ssour˚_ªgi°ry
 {

93 
	g°d
::
£t
<
gíî©‹
*> 
gíî©‹s
;

94 
gíî©‹
 
	gma°î
;

95 
muãx
 
	gmut
;

97 
	gsour˚_ªgi°ry
& 
globÆ
() {

98 
sour˚_ªgi°ry
 
	gªgi°ry
;

99  
	gªgi°ry
;

104 
£ed
() {

105 
	gmut
.
lock
();

106 
	gma°î
.
£ed
();

107 
f‹óch
(
gíî©‹
* gíî©‹, 
gíî©‹s
) {

108 
ASSERT_TRUE
(
gíî©‹
 !
NULL
);

109 
	ggíî©‹
->
£ed
(
ma°î
);

111 
	gmut
.
u∆ock
();

117 
n⁄dë_£ed
() {

118 
	gmut
.
lock
();

119 
	gma°î
.
n⁄dë_£ed
();

120 
f‹óch
(
gíî©‹
* gíî©‹, 
gíî©‹s
) {

121 
ASSERT_TRUE
(
gíî©‹
 !
NULL
);

122 
	ggíî©‹
->
£ed
(
ma°î
);

124 
	gmut
.
u∆ock
();

131 
time_£ed
() {

132 
	gmut
.
lock
();

133 
	gma°î
.
time_£ed
();

134 
f‹óch
(
gíî©‹
* gíî©‹, 
gíî©‹s
) {

135 
ASSERT_TRUE
(
gíî©‹
 !
NULL
);

136 
	ggíî©‹
->
£ed
(
ma°î
);

138 
	gmut
.
u∆ock
();

145 
£ed
(c⁄° 
size_t
 
numbî
) {

146 
	gmut
.
lock
();

147 
	gma°î
.
£ed
(
numbî
);

148 
f‹óch
(
gíî©‹
* gíî©‹, 
gíî©‹s
) {

149 
ASSERT_TRUE
(
gíî©‹
 !
NULL
);

150 
	ggíî©‹
->
£ed
(
ma°î
);

152 
	gmut
.
u∆ock
();

159 
ªgi°î_gíî©‹
(
gíî©‹
* 
és_±r
) {

160 
ASSERT_TRUE
(
és_±r
 !
NULL
);

161 
	gmut
.
lock
();

162 
	ggíî©‹s
.
ö£π
(
és_±r
);

163 
	gés_±r
->
£ed
(
ma°î
);

166 
	gmut
.
u∆ock
();

172 
uƒegi°î_sour˚
(
gíî©‹
* 
és_±r
) {

173 
	gmut
.
lock
();

174 
	ggíî©‹s
.
îa£
(
és_±r
);

175 
	gmut
.
u∆ock
();

194 
de°roy_és_d©a
(* 
±r
) {

195 
gíî©‹
* 
	gés_∫d_±r
 =

196 
ªöãΩªt_ˇ°
<
gíî©‹
*>(
±r
);

197 if(
	gés_∫d_±r
 !
NULL
) {

198 
sour˚_ªgi°ry
::
globÆ
().
uƒegi°î_sour˚
(
és_∫d_±r
);

199 
dñëe
 
	gés_∫d_±r
;

208 
	sés_key_¸ót‹
 {

209 
±hªad_key_t
 
	gTLS_RANDOM_SOURCE_KEY
;

210 
és_key_¸ót‹
(Ë: 
TLS_RANDOM_SOURCE_KEY
(0) {

211 
±hªad_key_¸óã
(&
TLS_RANDOM_SOURCE_KEY
,

212 
de°roy_és_d©a
);

217 
±hªad_key_t
 
gë_øndom_sour˚_key
() {

218 c⁄° 
és_key_¸ót‹
 
	gkey
;

219  
	gkey
.
	gTLS_RANDOM_SOURCE_KEY
;

222 
±hªad_key_t
 
__unu£d_öô_keys__
(
gë_øndom_sour˚_key
());

237 
	ggíî©‹
& 
gë_sour˚
() {

239 
gíî©‹
* 
	gés_∫d_±r
 =

240 
ªöãΩªt_ˇ°
<
gíî©‹
*>

241 (
±hªad_gë•ecific
(
gë_øndom_sour˚_key
()));

243 if(
	gés_∫d_±r
 =
NULL
) {

244 
és_∫d_±r
 = 
√w
 
gíî©‹
();

245 
as£π
(
és_∫d_±r
 !
NULL
);

247 
	gsour˚_ªgi°ry
::
globÆ
().
ªgi°î_gíî©‹
(
és_∫d_±r
);

248 
±hªad_£t•ecific
(
gë_øndom_sour˚_key
(),

249 
és_∫d_±r
);

252  *
	gés_∫d_±r
;

257 
£ed
(Ë{ 
	gsour˚_ªgi°ry
::
globÆ
().seed(); }

259 
n⁄dë_£ed
(Ë{ 
	gsour˚_ªgi°ry
::
globÆ
().nondet_seed(); }

261 
time_£ed
(Ë{ 
	gsour˚_ªgi°ry
::
globÆ
().time_seed(); }

263 
£ed
(c⁄° 
size_t
 
£ed_vÆue
) {

264 
	gsour˚_ªgi°ry
::
globÆ
().
£ed
(
£ed_vÆue
);

268 
	ggíî©‹
::
n⁄dë_£ed
() {

270 
n⁄dë_gíî©‹
& 
n⁄dë_∫d
“⁄dë_gíî©‹::
globÆ
());

271 
	gmut
.
lock
();

273 
	gªÆ_∫g
.
£ed
(
n⁄dë_∫d
());

275 
	gdis¸ëe_∫g
.
£ed
(
n⁄dë_∫d
());

277 
	gÁ°_dis¸ëe_∫g
.
£ed
(
n⁄dë_∫d
());

278 
	gmut
.
u∆ock
();

282 
pdf2cdf
(
°d
::
ve˘‹
<>& 
pdf
) {

283 
Z
 = 0;

284 
size_t
 
	gi
 = 0; i < 
	gpdf
.
size
(); ++iË
	gZ
 +
pdf
[
i
];

285 
size_t
 
	gi
 = 0; i < 
	gpdf
.
size
(); ++i)

286 
	gpdf
[
i
] = 
pdf
[i]/
Z
 + ((i>0)?Ödf[i-1] : 0);

	@api/graphlab2_1_GAS_api/random.hpp

24 #i‚de‡
GRAPHLAB_RANDOM_HPP


25 
	#GRAPHLAB_RANDOM_HPP


	)

27 
	~<c°dlib
>

28 
	~<°döt.h
>

31 
	~<ve˘‹
>

32 
	~<limôs
>

33 
	~<Æg‹ôhm
>

35 
	~<boo°/øndom.hµ
>

36 
	~"utû/±hªad_toﬁs.hµ
"

38 
usög
 
«me•a˚
 
	ggøphchi
;

40 
«me•a˚
 
	ggøphœb
 {

48 
«me•a˚
 
	gøndom
 {

56 
«me•a˚
 
	gdi°ributi⁄s
 {

64 
	gãm∂©e
<
ty≥«me
 
	gI¡Ty≥
>

65 
	sunif‹m
 {

66 
	gboo°
::
	tunif‹m_öt
<
	tI¡Ty≥
> 
	tdi°ributi⁄_ty≥
;

67 
	gãm∂©e
<
ty≥«me
 
	gRólRNG
,Åy≥«mê
	gDis¸ëeRNG
>

68 
ölöe
 
I¡Ty≥
 
ßm∂e
(
RólRNG
& 
ªÆ_∫g
,

69 
Dis¸ëeRNG
& 
dis¸ëe_∫g
,

70 c⁄° 
I¡Ty≥
& 
mö
, c⁄° I¡Ty≥& 
max
) {

71  
di°ributi⁄_ty≥
(
mö
, 
max
)(
	gdis¸ëe_∫g
);

74 
	gãm∂©e
<>

75 
	gunif‹m
<> {

76 
	gboo°
::
	tunif‹m_ªÆ
<> 
	tdi°ributi⁄_ty≥
;

77 
	gãm∂©e
<
ty≥«me
 
	gRólRNG
,Åy≥«mê
	gDis¸ëeRNG
>

78 
ölöe
 
ßm∂e
(
RólRNG
& 
ªÆ_∫g
,

79 
Dis¸ëeRNG
& 
dis¸ëe_∫g
,

80 c⁄° & 
mö
, c⁄° & 
max
) {

81  
di°ributi⁄_ty≥
(
mö
, 
max
)(
	gªÆ_∫g
);

84 
	gãm∂©e
<>

85 
	gunif‹m
<> {

86 
	gboo°
::
	tunif‹m_ªÆ
<> 
	tdi°ributi⁄_ty≥
;

87 
	gãm∂©e
<
ty≥«me
 
	gRólRNG
,Åy≥«mê
	gDis¸ëeRNG
>

88 
ölöe
 
ßm∂e
(
RólRNG
& 
ªÆ_∫g
,

89 
Dis¸ëeRNG
& 
dis¸ëe_∫g
,

90 c⁄° & 
mö
, c⁄° & 
max
) {

91  
di°ributi⁄_ty≥
(
mö
, 
max
)(
	gªÆ_∫g
);

101 ˛as†
	cgíî©‹
 {

102 
	gpublic
:

104 
boo°
::
	tœgged_fib⁄acci607
 
	tªÆ_∫g_ty≥
;

105 
	gboo°
::
	tmt11213b
 
	tdis¸ëe_∫g_ty≥
;

106 
	gboo°
::
	tønd48
 
	tÁ°_dis¸ëe_∫g_ty≥
;

108 
gíî©‹
() {

109 
time_£ed
();

113 
ölöe
 
£ed
() {

114 
	gmut
.
lock
();

115 
	gªÆ_∫g
.
£ed
();

116 
	gdis¸ëe_∫g
.
£ed
();

117 
	gÁ°_dis¸ëe_∫g
.
£ed
();

118 
	gmut
.
u∆ock
();

122 
n⁄dë_£ed
();

126 
ölöe
 
time_£ed
() {

127 
£ed
(
time
(
NULL
) );

131 
£ed
(
size_t
 
numbî
) {

132 
	gmut
.
lock
();

133 
	gÁ°_dis¸ëe_∫g
.
£ed
(
numbî
);

134 
	gªÆ_∫g
.
£ed
(
Á°_dis¸ëe_∫g
);

135 
	gdis¸ëe_∫g
.
£ed
(
Á°_dis¸ëe_∫g
);

136 
	gmut
.
u∆ock
();

140 
£ed
(
gíî©‹
& 
Ÿhî
){

141 
	gmut
.
lock
();

142 
	gªÆ_∫g
.
£ed
(
Ÿhî
.
ªÆ_∫g
);

143 
	gdis¸ëe_∫g
.
£ed
(
Ÿhî
.
dis¸ëe_∫g
);

144 
	gÁ°_dis¸ëe_∫g
.
£ed
(
Ÿhî
.
Á°_dis¸ëe_∫g
());

145 
	gmut
.
u∆ock
();

152 
	gãm∂©e
<
ty≥«me
 
	gNumTy≥
>

153 
ölöe
 
NumTy≥
 
unif‹m
(c⁄° NumTy≥ 
mö
, c⁄° NumTy≥ 
max
) {

154 
	gmut
.
lock
();

155 c⁄° 
NumTy≥
 
	gªsu…
 = 
di°ributi⁄s
::
unif‹m
<NumType>::

156 
ßm∂e
(
ªÆ_∫g
, 
dis¸ëe_∫g
, 
mö
, 
max
);

157 
	gmut
.
u∆ock
();

158  
	gªsu…
;

165 
	gãm∂©e
<
ty≥«me
 
	gNumTy≥
>

166 
ölöe
 
NumTy≥
 
Á°_unif‹m
(c⁄° NumTy≥ 
mö
, c⁄° NumTy≥ 
max
) {

167 
	gmut
.
lock
();

168 c⁄° 
NumTy≥
 
	gªsu…
 = 
di°ributi⁄s
::
unif‹m
<NumType>::

169 
ßm∂e
(
ªÆ_∫g
, 
Á°_dis¸ëe_∫g
, 
mö
, 
max
);

170 
	gmut
.
u∆ock
();

171  
	gªsu…
;

179 
ölöe
 
gamma
(c⁄° 
Æpha
 = (1)) {

180 
boo°
::
gamma_di°ributi⁄
<> 
gamma_di°
(
Æpha
);

181 
	gmut
.
lock
();

182 c⁄° 
	gªsu…
 = 
gamma_di°
(
ªÆ_∫g
);

183 
	gmut
.
u∆ock
();

184  
	gªsu…
;

192 
ölöe
 
gaussün
(c⁄° 
món
 = (0),

193 c⁄° 
°dev
 = (1)) {

194 
boo°
::
n‹mÆ_di°ributi⁄
<> 
n‹mÆ_di°
(
món
,
°dev
);

195 
	gmut
.
lock
();

196 c⁄° 
	gªsu…
 = 
n‹mÆ_di°
(
ªÆ_∫g
);

197 
	gmut
.
u∆ock
();

198  
	gªsu…
;

205 
ölöe
 
n‹mÆ
(c⁄° 
món
 = (0),

206 c⁄° 
°dev
 = (1)) {

207  
gaussün
(
món
, 
°dev
);

211 
ölöe
 
boﬁ
 
bînouŒi
(c⁄° 
p
 = (0.5)) {

212 
boo°
::
bînouŒi_di°ributi⁄
<> 
di°
(
p
);

213 
	gmut
.
lock
();

214 c⁄° 
ªsu…
(
di°
(
dis¸ëe_∫g
));

215 
	gmut
.
u∆ock
();

216  
	gªsu…
;

219 
ölöe
 
boﬁ
 
Á°_bînouŒi
(c⁄° 
p
 = (0.5)) {

220 
boo°
::
bînouŒi_di°ributi⁄
<> 
di°
(
p
);

221 
	gmut
.
lock
();

222 c⁄° 
ªsu…
(
di°
(
Á°_dis¸ëe_∫g
));

223 
	gmut
.
u∆ock
();

224  
	gªsu…
;

231 
	gãm∂©e
<
ty≥«me
 
	gDoubÀ
>

232 
size_t
 
mu…öomül
(c⁄° 
°d
::
ve˘‹
<
DoubÀ
>& 
¥b
) {

233 
ASSERT_GT
(
¥b
.
size
(),0);

234 i‡(
	g¥b
.
size
() == 1) {  0; }

235 
DoubÀ
 
sum
(0);

236 
size_t
 
	gi
 = 0; i < 
	g¥b
.
size
(); ++i) {

237 
ASSERT_GE
(
¥b
[
i
], 0);

238 
	gsum
 +
¥b
[
i
];

240 
ASSERT_GT
(
sum
, 0);

242 c⁄° 
DoubÀ
 
∫d
(
unif‹m
<Double>(0,1));

243 
size_t
 
	göd
 = 0;

244 
DoubÀ
 
cumsum
(
¥b
[
öd
]/
sum
);

245 
	g∫d
 > 
	gcumsum
 && (
	göd
+1Ë< 
	g¥b
.
size
();

246 
	gcumsum
 +(
¥b
[++
öd
]/
sum
));

247  
	göd
;

256 
	gãm∂©e
<
ty≥«me
 
	gDoubÀ
>

257 
ölöe
 
size_t
 
mu…öomül_cdf
(c⁄° 
°d
::
ve˘‹
<
DoubÀ
>& 
cdf
) {

258  
°d
::
uµî_bound
(
cdf
.
begö
(), cdf.
íd
(),

259 
unif‹m
<
DoubÀ
>(0,1)Ë- 
	gcdf
.
begö
();

267 
	gãm∂©e
<
ty≥«me
 
	gT
>

268 
ölöe
 
	g°d
::
ve˘‹
<
T
> 
≥rmuèti⁄
(c⁄° 
size_t
 
√Àms
) {

269 
°d
::
ve˘‹
<
T
> 
≥rm
(
√Àms
);

270 
T
 
	gi
 = 0; i < 
	g√Àms
; ++iË
	g≥rm
[
i
] = i;

271 
shufÊe
(
≥rm
);

272  
	g≥rm
;

278 
	gãm∂©e
<
ty≥«me
 
	gT
>

279 
shufÊe
(
°d
::
ve˘‹
<
T
>& 
vec
Ë{ shufÊe(vec.
begö
(), vec.
íd
()); }

284 
	gãm∂©e
<
ty≥«me
 
	gIãøt‹
>

285 
shufÊe
(
Iãøt‹
 
begö
, Iãøt‹ 
íd
) {

286 
	gmut
.
lock
();

287 
shufÊe_fun˘‹
 
fun˘‹
(*
this
);

288 
	g°d
::
øndom_shufÊe
(
begö
, 
íd
, 
fun˘‹
);

289 
	gmut
.
u∆ock
();

292 
	g¥iv©e
:

295 
	sshufÊe_fun˘‹
 {

296 
gíî©‹
& 
gí
;

297 
ölöe
 
shufÊe_fun˘‹
(
gíî©‹
& 
gí
) : gen(gen) { }

298 
ölöe
 
°d
::
±rdiff_t
 
›î©‹
()(°d::±rdiff_à
íd
) {

299  
di°ributi⁄s
::
unif‹m
<
±rdiff_t
>::

300 
ßm∂e
(
gí
.
ªÆ_∫g
, gí.
Á°_dis¸ëe_∫g
, 0, 
íd
-1);

306 
ªÆ_∫g_ty≥
 
	gªÆ_∫g
;

308 
dis¸ëe_∫g_ty≥
 
	gdis¸ëe_∫g
;

310 
Á°_dis¸ëe_∫g_ty≥
 
	gÁ°_dis¸ëe_∫g
;

312 
muãx
 
	gmut
;

333 
£ed
();

339 
£ed
(
size_t
 
£ed_vÆue
);

345 
n⁄dë_£ed
();

351 
time_£ed
();

358 
	ggíî©‹
& 
gë_sour˚
();

365 
	gãm∂©e
<
ty≥«me
 
	gNumTy≥
>

366 
ölöe
 
NumTy≥
 
unif‹m
(c⁄° NumTy≥ 
mö
, c⁄° NumTy≥ 
max
) {

367  
gë_sour˚
().
	gunif‹m
<
	gNumTy≥
>(
	gmö
, 
	gmax
);

375 
	gãm∂©e
<
ty≥«me
 
	gNumTy≥
>

376 
ölöe
 
NumTy≥
 
Á°_unif‹m
(c⁄° NumTy≥ 
mö
, c⁄° NumTy≥ 
max
) {

377  
gë_sour˚
().
	gÁ°_unif‹m
<
	gNumTy≥
>(
	gmö
, 
	gmax
);

384 
ölöe
 
ønd01
(Ë{  
	gunif‹m
<>(0, 1); }

390 
ölöe
 
ønd
(Ë{  
Á°_unif‹m
(0, 
RAND_MAX
); }

397 
ölöe
 
gamma
(c⁄° 
Æpha
 = (1)) {

398  
gë_sour˚
().
gamma
(
Æpha
);

408 
ölöe
 
gaussün
(c⁄° 
món
 = (0),

409 c⁄° 
°dev
 = (1)) {

410  
gë_sour˚
().
gaussün
(
món
, 
°dev
);

418 
ölöe
 
n‹mÆ
(c⁄° 
món
 = (0),

419 c⁄° 
°dev
 = (1)) {

420  
gë_sour˚
().
n‹mÆ
(
món
, 
°dev
);

427 
ölöe
 
boﬁ
 
bînouŒi
(c⁄° 
p
 = (0.5)) {

428  
gë_sour˚
().
bînouŒi
(
p
);

435 
ölöe
 
boﬁ
 
Á°_bînouŒi
(c⁄° 
p
 = (0.5)) {

436  
gë_sour˚
().
Á°_bînouŒi
(
p
);

444 
	gãm∂©e
<
ty≥«me
 
	gDoubÀ
>

445 
ölöe
 
size_t
 
mu…öomül
(c⁄° 
°d
::
ve˘‹
<
DoubÀ
>& 
¥b
) {

446  
gë_sour˚
().
mu…öomül
(
¥b
);

454 
	gãm∂©e
<
ty≥«me
 
	gDoubÀ
>

455 
ölöe
 
size_t
 
mu…öomül_cdf
(c⁄° 
°d
::
ve˘‹
<
DoubÀ
>& 
cdf
) {

456  
gë_sour˚
().
mu…öomül_cdf
(
cdf
);

465 
	gãm∂©e
<
ty≥«me
 
	gT
>

466 
ölöe
 
	g°d
::
ve˘‹
<
T
> 
≥rmuèti⁄
(c⁄° 
size_t
 
√Àms
) {

467  
gë_sour˚
().
≥rmuèti⁄
<
T
>(
√Àms
);

475 
	gãm∂©e
<
ty≥«me
 
	gT
>

476 
ölöe
 
shufÊe
(
°d
::
ve˘‹
<
T
>& 
vec
) {

477 
gë_sour˚
().
shufÊe
(
vec
);

484 
	gãm∂©e
<
ty≥«me
 
	gIãøt‹
>

485 
ölöe
 
shufÊe
(
Iãøt‹
 
begö
, Iãøt‹ 
íd
) {

486 
gë_sour˚
().
shufÊe
(
begö
, 
íd
);

492 
pdf2cdf
(
°d
::
ve˘‹
<>& 
pdf
);

	@api/ischeduler.hpp

30 #i‚de‡
DEF_GRAPHCHI_ISCHEDULER


31 
	#DEF_GRAPHCHI_ISCHEDULER


	)

33 
	~"gøphchi_ty≥s.hµ
"

34 
	~"loggî/loggî.hµ
"

36 
«me•a˚
 
	ggøphchi
 {

38 ˛as†
	cischeduÀr
 {

39 
	gpublic
:

40 
vútuÆ
 ~
ischeduÀr
() {}

41 
vútuÆ
 
add_èsk
(
vid_t
 
vid
, 
boﬁ
 
Æso_this_ôî©i⁄
=
Ál£
) = 0;

42 
vútuÆ
 
add_èsk_to_Æl
() = 0;

43 
vútuÆ
 
boﬁ
 
is_scheduÀd
(
vid_t
 
vîãx
) = 0;

44 
vútuÆ
 
size_t
 
num_èsks
() = 0;

45 
vútuÆ
 
√w_ôî©i⁄
(
ôî©i⁄
) = 0;

46 
vútuÆ
 
ªmove_èsks
(
vid_t
 
‰omvîãx
, vid_à
tovîãx
) = 0;

53 ˛as†
	cn⁄_scheduÀr
 : 
public
 
ischeduÀr
 {

54 
nw¨nögs
;

55 
	gpublic
:

56 
n⁄_scheduÀr
(Ë: 
nw¨nögs
(0) {}

57 
vútuÆ
 ~
n⁄_scheduÀr
() {}

58 
vútuÆ
 
add_èsk
(
vid_t
 
vid
, 
boﬁ
 
Æso_this_ôî©i⁄
=
Ál£
) {

59 i‡(
nw¨nögs
++ % 10000 == 0) {

60 
log°ªam
(
LOG_WARNING
Ë<< "TrõdÅÿaddÅaskÅÿscheduÀr, buàschedulög wa†nŸÉ«bÀd!" << 
°d
::
ídl
;

63 
vútuÆ
 
add_èsk_to_Æl
() { }

64 
vútuÆ
 
boﬁ
 
is_scheduÀd
(
vid_t
 
vîãx
Ë{  
	gåue
; }

65 
vútuÆ
 
size_t
 
num_èsks
() {  0; }

66 
vútuÆ
 
√w_ôî©i⁄
(
ôî©i⁄
) {}

68 
vútuÆ
 
ªmove_èsks
(
vid_t
 
‰omvîãx
, vid_à
tovîãx
) {}

	@api/vertex_aggregator.hpp

33 #i‚de‡
DEF_GRAPHCHI_VERTEX_AGGREGATOR


34 
	#DEF_GRAPHCHI_VERTEX_AGGREGATOR


	)

36 
	~<î∫o.h
>

37 
	~<mem‹y.h
>

38 
	~<°rög
>

40 
	~"gøphchi_ty≥s.hµ
"

41 
	~"≠i/chifûíames.hµ
"

42 
	~"io/°rùedio.hµ
"

43 
	~"utû/ioutû.hµ
"

44 
	~"ígöe/auxd©a/vîãx_d©a.hµ
"

46 
«me•a˚
 
	ggøphchi
 {

52 
	gãm∂©e
 <
ty≥«me
 
	gVîãxD©aTy≥
>

53 ˛as†
	cVCÆlback
 {

54 
	gpublic
:

55 
vútuÆ
 
ˇŒback
(
vid_t
 
vîãx_id
, 
VîãxD©aTy≥
 &
vÆue
) = 0;

67 
	gãm∂©e
 <
ty≥«me
 
	gVîãxD©aTy≥
>

68 
f‹óch_vîti˚s
(
°d
::
°rög
 
ba£fûíame
, 
vid_t
 
‰omv
, vid_à
tov
, 
VCÆlback
<
VîãxD©aTy≥
> &
ˇŒback
) {

69 
	g°d
::
°rög
 
fûíame
 = 
fûíame_vîãx_d©a
<
VîãxD©aTy≥
>(
ba£fûíame
);

70 
mërics
 
m
("foreach");

71 
°rùedio
 * 
	giomgr
 = 
√w
 såùedio(
m
);

73 
vid_t
 
	gªadwödow
 = 1024 * 1024;

74 
size_t
 
	gnumvîti˚s
 = 
gë_num_vîti˚s
(
ba£fûíame
);

75 
	gvîãx_d©a_°‹e
<
	gVîãxD©aTy≥
> * 
	gvîãxd©a
 =

76 
√w
 
vîãx_d©a_°‹e
<
VîãxD©aTy≥
>(
ba£fûíame
, 
	gnumvîti˚s
, 
	giomgr
);

78 
vid_t
 
	g°
 = 
‰omv
;

79 
vid_t
 
	gí
 = 0;

80 
	g°
 <
tov
) {

81 
í
 = 
°
 + 
ªadwödow
 - 1;

82 i‡(
	gí
 >
tov
Ë
í
 =Åov - 1;

84 i‡(
	g°
 < 
	gí
) {

85 
	gvîãxd©a
->
lﬂd
(
°
, 
í
);

86 
vid_t
 
	gv
=
°
; v<=
í
; v++) {

87 
VîãxD©aTy≥
 * 
	gv±r
 = 
vîãxd©a
->
vîãx_d©a_±r
(
v
);

88 
	gˇŒback
.
ˇŒback
(
v
, (
VîãxD©aTy≥
&Ë*
v±r
);

92 
	g°
 +
ªadwödow
;

94 
dñëe
 
	gvîãxd©a
;

95 
dñëe
 
	giomgr
;

102 
	gãm∂©e
 <
ty≥«me
 
	gVîãxD©aTy≥
,Åy≥«mê
	gSumTy≥
>

103 
˛ass
 
	gSumCÆlback
 : 
public
 
VCÆlback
<
VîãxD©aTy≥
> {

104 
public
:

105 
SumTy≥
 
accum
;

106 
SumCÆlback
(
SumTy≥
 
öôvÆ
Ë: 
VCÆlback
<
VîãxD©aTy≥
>() {

107 
accum
 = 
öôvÆ
;

110 
ˇŒback
(
vid_t
 
vîãx_id
, 
VîãxD©aTy≥
 &
vÆue
) {

111 
	gaccum
 +
vÆue
;

124 
	gãm∂©e
 <
ty≥«me
 
	gVîãxD©aTy≥
,Åy≥«mê
	gSumTy≥
>

125 
SumTy≥
 
sum_vîti˚s
(
°d
::
°rög
 
ba£_fûíame
, 
vid_t
 
‰omv
, vid_à
tov
) {

126 
	gSumCÆlback
<
	gVîãxD©aTy≥
, 
	gSumTy≥
> 
sumc
(0);

127 
	gf‹óch_vîti˚s
<
	gVîãxD©aTy≥
>(
	gba£_fûíame
, 
	g‰omv
, 
	gtov
, 
	gsumc
);

128  
	gsumc
.
	gaccum
;

	@engine/auxdata/degree_data.hpp

30 #i‚de‡
DEF_GRAPHCHI_DEGREE_DATA


31 
	#DEF_GRAPHCHI_DEGREE_DATA


	)

33 
	~<f°ªam
>

34 
	~<as£π.h
>

35 
	~<°rög
>

36 
	~<°dlib.h
>

37 
	~<sys/mm™.h
>

39 
	~"gøphchi_ty≥s.hµ
"

40 
	~"io/°rùedio.hµ
"

42 
«me•a˚
 
	ggøphchi
 {

45 
	sdegªe
 {

46 
	gödegªe
;

47 
	goutdegªe
;

51 ˛as†
	cdegªe_d©a
 {

54 
	g¥Ÿe˘ed
:

56 
vid_t
 
vîãx_°
;

57 
vid_t
 
	gvîãx_í
;

58 
°rùedio
 * 
	giomgr
;

61 
degªe
 * 
	glﬂded_chunk
;

62 
	g°d
::
°rög
 
fûíame
;

63 
	g°d
::
°rög
 
ba£_fûíame
;

65 
boﬁ
 
	gmodifõd
;

67 
	gfûedesc
;

69 
boﬁ
 
	gu£_mm≠
;

70 
degªe
 * 
	gmm≠_fûe
;

71 
size_t
 
	gmm≠_Àngth
;

73 
vútuÆ
 
›í_fûe
(
°d
::
°rög
 
ba£_fûíame
) {

74 
fûíame
 = 
fûíame_degªe_d©a
(
ba£_fûíame
);

75 
	gmodifõd
 = 
Ál£
;

76 i‡(!
	gu£_mm≠
) {

77 
	gfûedesc
 = 
iomgr
->
›í_£ssi⁄
(
fûíame
.
c_°r
(), 
Ál£
);

79 
	gmm≠_Àngth
 = 
gë_fûesize
(
fûíame
);

80 
	gfûedesc
 = 
›í
(
fûíame
.
c_°r
(), 
O_RDWR
);

81 
	gmm≠_fûe
 = (
degªe
 *Ë
mm≠
(
NULL
, 
mm≠_Àngth
, 
PROT_READ
 | 
PROT_WRITE
, 
MAP_SHARED
, 
fûedesc
, 0);

82 
as£π
(
mm≠_fûe
);

86 
	gpublic
:

92 
degªe_d©a
(
°d
::
°rög
 
ba£_fûíame
, 
°rùedio
 * 
iomgr
Ë: iomgr(iomgr), 
lﬂded_chunk
(
NULL
) {

93 
	gvîãx_°
 = 
vîãx_í
 = 0;

94 
	gthis
->
	gba£_fûíame
 = 
ba£_fûíame
;

95 
	gu£_mm≠
 = 
gë_›ti⁄_öt
("mmap", 0);

96 i‡(
	gu£_mm≠
) {

97 
log°ªam
(
LOG_INFO
Ë<< "U£ mem‹y m≠pög f‹ degªêd©a." << 
	g°d
::
ídl
;

99 
›í_fûe
(
ba£_fûíame
);

102 
	gvútuÆ
 ~
degªe_d©a
() {

103 i‡(!
	gu£_mm≠
) {

104 i‡(
	glﬂded_chunk
 !
NULL
) {

105 
iomgr
->
m™aged_ªÀa£
(
fûedesc
, &
lﬂded_chunk
);

107 
	giomgr
->
˛o£_£ssi⁄
(
fûedesc
);

109 i‡(
	gmodifõd
) {

110 
msync
(
mm≠_fûe
, 
mm≠_Àngth
, 
MS_SYNC
);

112 
munm≠
(
mm≠_fûe
, 
mm≠_Àngth
);

113 
˛o£
(
fûedesc
);

122 
vútuÆ
 
lﬂd
(
vid_t
 
_vîãx_°
, vid_à
_vîãx_í
) {

123 i‡(!
	gu£_mm≠
) {

124 
as£π
(
_vîãx_í
 >
_vîãx_°
);

125 
	gvîãx_°
 = 
_vîãx_°
;

126 
	gvîãx_í
 = 
_vîãx_í
;

128 
size_t
 
	gd©asize
 = (
vîãx_í
 - 
vîãx_°
 + 1Ë* (
degªe
);

129 
size_t
 
	gd©a°¨t
 = 
vîãx_°
 * (
degªe
);

131 i‡(
	glﬂded_chunk
 !
NULL
) {

132 
iomgr
->
m™aged_ªÀa£
(
fûedesc
, &
lﬂded_chunk
);

135 
	giomgr
->
m™aged_mÆloc
(
fûedesc
, &
lﬂded_chunk
, 
d©asize
, 
d©a°¨t
);

136 
	giomgr
->
m™aged_¥óda_now
(
fûedesc
, &
lﬂded_chunk
, 
d©asize
, 
d©a°¨t
);

143 
vid_t
 
fú°_vîãx_id
() {

144 i‡(!
	gu£_mm≠
) {

145 
as£π
(
lﬂded_chunk
 !
NULL
);

146  
	gvîãx_°
;

152 
vútuÆ
 
£t_degªe
(
vid_t
 
vîãxid
, 
ödegªe
, 
outdegªe
) {

153 
	gmodifõd
 = 
åue
;

154 i‡(!
	gu£_mm≠
) {

155 
as£π
(
vîãxid
 >
vîãx_°
 && vîãxid <
vîãx_í
);

156 
	glﬂded_chunk
[
vîãxid
 - 
vîãx_°
].
	gödegªe
 = 
ödegªe
;

157 
	glﬂded_chunk
[
vîãxid
 - 
vîãx_°
].
	goutdegªe
 = 
outdegªe
;

159 
	gmm≠_fûe
[
vîãxid
].
	gödegªe
 = 
ödegªe
;

160 
	gmm≠_fûe
[
vîãxid
].
	goutdegªe
 = 
outdegªe
;

164 
vútuÆ
 
£t_degªe
(
vid_t
 
vîãxid
, 
degªe
 
d
) {

165 
	gmodifõd
 = 
åue
;

166 i‡(!
	gu£_mm≠
) {

167 
as£π
(
vîãxid
 >
vîãx_°
 && vîãxid <
vîãx_í
);

168 
	glﬂded_chunk
[
vîãxid
 - 
vîãx_°
] = 
d
;

170 
	gmm≠_fûe
[
vîãxid
] = 
d
;

174 
ölöe
 
degªe
 
gë_degªe
(
vid_t
 
vîãxid
) {

175 i‡(!
	gu£_mm≠
) {

176 
as£π
(
vîãxid
 >
vîãx_°
 && vîãxid <
vîãx_í
);

177  
	glﬂded_chunk
[
vîãxid
 - 
vîãx_°
];

179  
	gmm≠_fûe
[
vîãxid
];

183 
ßve
() {

184 i‡(!
	gu£_mm≠
) {

185 
size_t
 
	gd©asize
 = (
vîãx_í
 - 
vîãx_°
 + 1Ë* (
degªe
);

186 
size_t
 
	gd©a°¨t
 = 
vîãx_°
 * (
degªe
);

187 
	giomgr
->
m™aged_pwrôó_now
(
fûedesc
, &
lﬂded_chunk
, 
d©asize
, 
d©a°¨t
);

191 
ísuª_size
(
vid_t
 
maxid
) {

192 i‡(!
	gu£_mm≠
) {

193 
	giomgr
->
åunˇã
(
fûedesc
, (1 + 
maxid
Ë* (
degªe
));

195 
munm≠
(
mm≠_fûe
, 
mm≠_Àngth
);

196 
·runˇã
(
fûedesc
, (1 + 
maxid
Ë* (
degªe
));

197 
˛o£
(
fûedesc
);

198 
›í_fûe
(
ba£_fûíame
);

	@engine/auxdata/dynamicdata/vertex_data_dynamic.hpp

36 #i‚de‡
DYNAMICVERTEXDATA


37 
	$ERROR
(
DYNAMICVERTEXDATA
 
NEEDS
 
TO
 
BE
 
DEFINED
)

40 #i‚de‡
DEF_GRAPHCHI_VERTEXDATA


41 
	#DEF_GRAPHCHI_VERTEXDATA


	)

43 
	~<°dlib.h
>

44 
	~<°rög
>

45 
	~<f˙é.h
>

46 
	~<î∫o.h
>

47 
	~<sys/°©.h
>

48 
	~<as£π.h
>

50 
	~"gøphchi_ty≥s.hµ
"

51 
	~"≠i/chifûíames.hµ
"

52 
	~"io/°rùedio.hµ
"

53 
	~"utû/ioutû.hµ
"

54 
	~"≠i/dy«micd©a/chive˘‹.hµ
"

55 
	~"sh¨ds/dy«micd©a/dy«micblock.hµ
"

57 
«me•a˚
 
gøphchi
 {

59 
ãm∂©e
 <
ty≥«me
 
VîãxD©aTy≥
>

60 
	svdblock_t
 {

61 
blockid
;

62 
fd
;

63 
uöt8_t
* 
d©a
;

64 
dy«micd©a_block
<
VîãxD©aTy≥
> * 
dblock
;

65 
	`vdblock_t
(
bid
Ë: 
	`blockid
(bid), 
	`d©a
(
NULL
), 
	`dblock
(NULL) {}

68 
ãm∂©e
 <
ty≥«me
 
VîãxD©aTy≥
>

69 ˛as†
	cvîãx_d©a_°‹e
 {

71 
vdblock_t
<
	tVîãxD©aTy≥
> 
	tvdblock
;

72 
¥Ÿe˘ed
:

74 
°rùedio
 * 
iomgr
;

77 
vid_t
 
vîãx_°
;

78 
vid_t
 
vîãx_í
;

80 
°d
::
°rög
 
dú«me
;

81 
size_t
 
vîti˚•îblock
;

83 
VîãxD©aTy≥
 * 
lﬂded_chunk
;

84 
°d
::
ve˘‹
<
vdblock
> 
lﬂdedblocks
;

87 
public
:

89 
	`vîãx_d©a_°‹e
(
°d
::
°rög
 
ba£_fûíame
, 
size_t
 
nvîti˚s
, 
°rùedio
 * 
iomgr
Ë: 
	`iomgr
(iomgr), 
	`lﬂded_chunk
(
NULL
){

90 
vîãx_°
 = 
vîãx_í
 = 0;

91 
vîti˚•îblock
 = 1024 * 1024;

93 
dú«me
 = 
fûíame_vîãx_d©a
<
VîãxD©aTy≥
>(
ba£_fûíame
) + ".dynamic_blockdir";

94 
	`check_size
(
nvîti˚s
);

97 
vútuÆ
 ~
	`vîãx_d©a_°‹e
() {

98 
iomgr
->
	`waô_f‹_wrôes
();

99 
	`ªÀa£blocks
();

103 
	`check_size
(
size_t
 
nvîti˚s
) {

104 
nblocks
 = (
nvîti˚s
 - 1Ë/ 
vîti˚•îblock
 + 1;

105 
i
=0; i < 
nblocks
; i++) {

106 
	`öô_block
(
i
);

110 
	`˛ór
(
size_t
 
nvîti˚s
) {

111 
nblocks
 = (
nvîti˚s
 - 1Ë/ 
vîti˚•îblock
 + 1;

112 
i
=0; i < 
nblocks
; i++) {

113 
°d
::
°rög
 
bfûíame
 = 
	`blockfûíame
(
i
);

114 i‡(
	`fûe_exi°s
(
bfûíame
)) {

115 
	`ªmove
(
bfûíame
.
	`c_°r
());

117 
	`dñëe_block_uncom¥es£d_sizefûe
(
bfûíame
);

121 
¥iv©e
:

122 
°d
::
°rög
 
	`blockfûíame
(
blockid
) {

123 
°d
::
°rög°ªam
 
ss
;

124 
ss
 << 
dú«me
;

125 
ss
 << "/";

126 
ss
 << 
blockid
;

127  
ss
.
	`°r
();

130 
	`ªÀa£blocks
() {

131 
i
=0; i < ()
lﬂdedblocks
.
	`size
(); i++) {

132 
	`dñëe
(
lﬂdedblocks
[
i
].
dblock
);

133 
iomgr
->
	`m™aged_ªÀa£
(
lﬂdedblocks
[
i
].
fd
, &lﬂdedblocks[i].
d©a
);

134 
iomgr
->
	`˛o£_£ssi⁄
(
lﬂdedblocks
[
i
].
fd
);

135 
lﬂdedblocks
[
i
].
d©a
 = 
NULL
;

136 
lﬂdedblocks
[
i
].
dblock
 = 
NULL
;

138 
lﬂdedblocks
.
	`˛ór
();

141 
	`öô_block
(
blockid
) {

142 
°d
::
°rög
 
bfûíame
 = 
	`blockfûíame
(
blockid
);

143 i‡(!
	`fûe_exi°s
(
bfûíame
)) {

144 
	`mkdú
(
dú«me
.
	`c_°r
(), 0777);

145 
size_t
 
öôsize
 = 
vîti˚•îblock
 * (
ty≥«me
 
VîãxD©aTy≥
::
sizew‹d_t
);

146 
f
 = 
	`›í
(
bfûíame
.
	`c_°r
(), 
O_RDWR
 | 
O_CREAT
, 
S_IROTH
 | 
S_IWOTH
 | 
S_IWUSR
 | 
S_IRUSR
);

147 
uöt8_t
 * 
zîos
 = (uöt8_à*Ë
	`ˇŒoc
(
vîti˚•îblock
, (
ty≥«me
 
VîãxD©aTy≥
::
sizew‹d_t
));

148 
	`wrôe_com¥es£d
(
f
, 
zîos
, 
öôsize
);

149 
	`‰ì
(
zîos
);

151 
	`wrôe_block_uncom¥es£d_size
(
bfûíame
, 
öôsize
);

152 
	`˛o£
(
f
);

158 
vdblock
 
	`lﬂd_block
(
blockid
) {

159 
vdblock
 
	`db
(
blockid
);

161 
°d
::
°rög
 
block‚ame
 = 
	`blockfûíame
(
blockid
);

162 
db
.
fd
 = 
iomgr
->
	`›í_£ssi⁄
(
block‚ame
, 
Ál£
, 
åue
);

163 
ªÆsize
 = 
	`gë_block_uncom¥es£d_size
(
block‚ame
, -1);

164 
	`as£π
(
ªÆsize
 > 0);

166 
iomgr
->
	`m™aged_mÆloc
(
db
.
fd
, &db.
d©a
, 
ªÆsize
, 0);

167 
iomgr
->
	`m™aged_¥óda_now
(
db
.
fd
, &db.
d©a
, 
ªÆsize
, 0);

168 
db
.
dblock
 = 
√w
 
dy«micd©a_block
<
VîãxD©aTy≥
>(
vîti˚•îblock
, (
uöt8_t
 *)db.
d©a
, 
ªÆsize
);

169  
db
;

172 
	`wrôe_block
(
vdblock
 &
block
) {

173 
ªÆsize
;

174 
uöt8_t
 * 
outd©a
;

175 
block
.
dblock
->
	`wrôe
(&
outd©a
, 
ªÆsize
);

176 
°d
::
°rög
 
block‚ame
 = 
	`blockfûíame
(
block
.
blockid
);

177 
iomgr
->
	`m™aged_pwrôó_now
(
block
.
fd
, &
outd©a
, 
ªÆsize
, 0);

178 
	`wrôe_block_uncom¥es£d_size
(
block‚ame
, 
ªÆsize
);

179 
	`‰ì
(
outd©a
);

182 
public
:

189 
vútuÆ
 
	`lﬂd
(
vid_t
 
_vîãx_°
, vid_à
_vîãx_í
) {

190 
	`as£π
(
_vîãx_í
 >
_vîãx_°
);

191 
vîãx_°
 = 
_vîãx_°
;

192 
vîãx_í
 = 
_vîãx_í
;

194 
	`ªÀa£blocks
();

196 
mö_blockid
 = 
vîãx_°
 / 
vîti˚•îblock
;

197 
max_blockid
 = 
vîãx_í
 / 
vîti˚•îblock
;

198 
i
=
mö_blockid
; i <
max_blockid
; i++) {

199 
lﬂdedblocks
.
	`push_back
(
	`lﬂd_block
(
i
));

206 
vútuÆ
 
	`ßve
(
boﬁ
 
async
=
Ál£
) {

207 
i
=0; i < ()
lﬂdedblocks
.
	`size
(); i++) {

208 
	`wrôe_block
(
lﬂdedblocks
[
i
]);

216 
vid_t
 
	`fú°_vîãx_id
() {

217  
vîãx_°
;

221 
VîãxD©aTy≥
 * 
	`vîãx_d©a_±r
(
vid_t
 
vîãxid
) {

222 
blockid
 = 
vîãxid
 / 
vîti˚•îblock
;

223 
fú°lﬂded
 = 
lﬂdedblocks
[0].
blockid
;

224 
dy«micd©a_block
<
VîãxD©aTy≥
> * 
dynblock
 = 
lﬂdedblocks
[
blockid
 - 
fú°lﬂded
].
dblock
;

225  
dynblock
->
	`edgevec
(
vîãxid
 % 
vîti˚•îblock
);

229 
	}
};

	@engine/auxdata/vertex_data.hpp

33 #ifde‡
DYNAMICVERTEXDATA


34 
	~"ígöe/auxd©a/dy«micd©a/vîãx_d©a_dy«mic.hµ
"

37 #i‚de‡
DEF_GRAPHCHI_VERTEXDATA


38 
	#DEF_GRAPHCHI_VERTEXDATA


	)

40 
	~<°dlib.h
>

41 
	~<°rög
>

42 
	~<as£π.h
>

43 
	~<sys/mm™.h
>

45 
	~"gøphchi_ty≥s.hµ
"

46 
	~"≠i/chifûíames.hµ
"

47 
	~"io/°rùedio.hµ
"

48 
	~"utû/ioutû.hµ
"

50 
«me•a˚
 
	ggøphchi
 {

52 
	gãm∂©e
 <
ty≥«me
 
	gVîãxD©aTy≥
>

53 ˛as†
	cvîãx_d©a_°‹e
 {

55 
	g¥Ÿe˘ed
:

57 
°rùedio
 * 
iomgr
;

60 
vid_t
 
	gvîãx_°
;

61 
vid_t
 
	gvîãx_í
;

63 
	g°d
::
°rög
 
fûíame
;

64 
	gfûedesc
;

66 
VîãxD©aTy≥
 * 
	glﬂded_chunk
;

68 
boﬁ
 
	gu£_mm≠
;

69 
VîãxD©aTy≥
 * 
	gmm≠_fûe
;

70 
size_t
 
	gmm≠_Àngth
;

72 
vid_t
 
	gœ°_nvîti˚s
;

75 
vútuÆ
 
›í_fûe
() {

76 i‡(!
	gu£_mm≠
) {

77 
	gfûedesc
 = 
iomgr
->
›í_£ssi⁄
(
fûíame
.
c_°r
(), 
Ál£
);

79 
	gmm≠_Àngth
 = 
gë_fûesize
(
fûíame
);

80 
	gfûedesc
 = 
›í
(
fûíame
.
c_°r
(), 
O_RDWR
);

81 
	gmm≠_fûe
 = (
VîãxD©aTy≥
 *Ë
mm≠
(
NULL
, 
mm≠_Àngth
, 
PROT_WRITE
 | 
PROT_READ
, 
MAP_SHARED
, 
fûedesc
, 0);

82 
as£π
(
mm≠_fûe
);

86 
	gpublic
:

88 
vîãx_d©a_°‹e
(
°d
::
°rög
 
ba£_fûíame
, 
size_t
 
nvîti˚s
, 
°rùedio
 * 
iomgr
Ë: iomgr(iomgr), 
lﬂded_chunk
(
NULL
){

89 
	gvîãx_°
 = 
vîãx_í
 = 0;

90 
	gfûíame
 = 
fûíame_vîãx_d©a
<
VîãxD©aTy≥
>(
ba£_fûíame
);

92 
	gmm≠_fûe
 = 
NULL
;

93 
	gœ°_nvîti˚s
 = 0;

94 
	gu£_mm≠
 = 
gë_›ti⁄_öt
("mmap", 0);

95 i‡(
	gu£_mm≠
) {

96 
log°ªam
(
LOG_INFO
Ë<< "U£ mem‹y m≠pög f‹ vîãx d©a." << 
	g°d
::
ídl
;

97 
check_size
(
nvîti˚s
);

99 
check_size
(
nvîti˚s
);

100 
›í_fûe
();

105 
	gvútuÆ
 ~
vîãx_d©a_°‹e
() {

106 i‡(!
	gu£_mm≠
) {

107 
	giomgr
->
˛o£_£ssi⁄
(
fûedesc
);

108 
	giomgr
->
waô_f‹_wrôes
();

109 i‡(
	glﬂded_chunk
 !
NULL
) {

110 
iomgr
->
m™aged_ªÀa£
(
fûedesc
, &
lﬂded_chunk
);

113 
log°ªam
(
LOG_INFO
Ë<< "Syncög vîãx d©a..." << 
	g°d
::
ídl
;

114 
msync
(
mm≠_fûe
, 
mm≠_Àngth
, 
MS_SYNC
);

115 
munm≠
(
mm≠_fûe
, 
mm≠_Àngth
);

116 
˛o£
(
fûedesc
);

121 
check_size
(
size_t
 
nvîti˚s
) {

122 i‡(
	gnvîti˚s
 =
œ°_nvîti˚s
) ;

123 i‡(!
	gu£_mm≠
) {

124 
	gcheck¨øy_fûesize
<
	gVîãxD©aTy≥
>(
	gfûíame
, 
	gnvîti˚s
);

126 i‡(
	gmm≠_fûe
) {

127 
msync
(
mm≠_fûe
, 
mm≠_Àngth
, 
MS_SYNC
);

128 
munm≠
(
mm≠_fûe
, 
mm≠_Àngth
);

129 
	gmm≠_fûe
 = 
NULL
;

130 
˛o£
(
fûedesc
);

132 
	gcheck¨øy_fûesize
<
	gVîãxD©aTy≥
>(
	gfûíame
, 
	gnvîti˚s
);

133 
›í_fûe
();

135 
	gœ°_nvîti˚s
 = 
nvîti˚s
;

138 
˛ór
(
size_t
 
nvîti˚s
) {

139 
check_size
(0);

140 
check_size
(
nvîti˚s
);

148 
vútuÆ
 
lﬂd
(
vid_t
 
_vîãx_°
, vid_à
_vîãx_í
) {

149 i‡(!
	gu£_mm≠
) {

150 
as£π
(
_vîãx_í
 >
_vîãx_°
);

151 
	gvîãx_°
 = 
_vîãx_°
;

152 
	gvîãx_í
 = 
_vîãx_í
;

154 
size_t
 
	gd©asize
 = (
vîãx_í
 - 
vîãx_°
 + 1)* (
VîãxD©aTy≥
);

155 
size_t
 
	gd©a°¨t
 = 
vîãx_°
 * (
VîãxD©aTy≥
);

157 i‡(
	glﬂded_chunk
 !
NULL
) {

158 
iomgr
->
m™aged_ªÀa£
(
fûedesc
, &
lﬂded_chunk
);

161 
	giomgr
->
m™aged_mÆloc
(
fûedesc
, &
lﬂded_chunk
, 
d©asize
, 
d©a°¨t
);

162 
	giomgr
->
m™aged_¥óda_now
(
fûedesc
, &
lﬂded_chunk
, 
d©asize
, 
d©a°¨t
);

172 
vútuÆ
 
ßve
(
boﬁ
 
async
=
Ál£
) {

173 i‡(!
u£_mm≠
) {

174 
as£π
(
lﬂded_chunk
 !
NULL
);

175 
size_t
 
	gd©asize
 = (
vîãx_í
 - 
vîãx_°
 + 1Ë* (
VîãxD©aTy≥
);

176 
size_t
 
	gd©a°¨t
 = 
vîãx_°
 * (
VîãxD©aTy≥
);

177 i‡(
	gasync
) {

178 
	giomgr
->
m™aged_pwrôó_async
(
fûedesc
, &
lﬂded_chunk
, 
d©asize
, 
d©a°¨t
, 
Ál£
);

180 
	giomgr
->
m™aged_pwrôó_now
(
fûedesc
, &
lﬂded_chunk
, 
d©asize
, 
d©a°¨t
);

191 
vid_t
 
fú°_vîãx_id
() {

192 i‡(!
	gu£_mm≠
) {

193 
as£π
(
lﬂded_chunk
 !
NULL
);

194  
	gvîãx_°
;

201 
VîãxD©aTy≥
 * 
vîãx_d©a_±r
(
vid_t
 
vîãxid
) {

202 i‡(!
	gu£_mm≠
) {

203 
as£π
(
vîãxid
 >
vîãx_°
 && vîãxid <
vîãx_í
);

204  &
	glﬂded_chunk
[
vîãxid
 - 
vîãx_°
];

206  &
	gmm≠_fûe
[
vîãxid
];

	@engine/bitset_scheduler.hpp

29 #i‚de‡
DEF_GRAPHCHI_BITSETSCHEDULER


30 
	#DEF_GRAPHCHI_BITSETSCHEDULER


	)

32 
	~"gøphchi_ty≥s.hµ
"

33 
	~"≠i/ischeduÀr.hµ
"

34 
	~"utû/dí£_bô£t.hµ
"

36 
«me•a˚
 
	ggøphchi
 {

38 ˛as†
	cbô£t_scheduÀr
 : 
public
 
ischeduÀr
 {

39 
¥iv©e
:

40 
dí£_bô£t
 * 
curôî©i⁄_bô£t
;

41 
dí£_bô£t
 * 
	g√xtôî©i⁄_bô£t
;

42 
	gpublic
:

43 
boﬁ
 
has_√w_èsks
;

45 
bô£t_scheduÀr
(
nvîti˚s
) {

46 
	gcurôî©i⁄_bô£t
 = 
√w
 
dí£_bô£t
(
nvîti˚s
);

47 
	g√xtôî©i⁄_bô£t
 = 
√w
 
dí£_bô£t
(
nvîti˚s
);

50 
√w_ôî©i⁄
(
ôî©i⁄
) {

51 i‡(
	gôî©i⁄
 > 0) {

53 
dí£_bô£t
 * 
	gtmp
 = 
curôî©i⁄_bô£t
;

54 
	gcurôî©i⁄_bô£t
 = 
√xtôî©i⁄_bô£t
;

55 
	g√xtôî©i⁄_bô£t
 = 
tmp
;

56 
	g√xtôî©i⁄_bô£t
->
˛ór
();

61 
	gvútuÆ
 ~
bô£t_scheduÀr
() {

62 
dñëe
 
	g√xtôî©i⁄_bô£t
;

63 
dñëe
 
	gcurôî©i⁄_bô£t
;

66 
ölöe
 
add_èsk
(
vid_t
 
vîãx
, 
boﬁ
 
Æso_this_ôî©i⁄
=
Ál£
) {

67 
√xtôî©i⁄_bô£t
->
£t_bô
(
vîãx
);

68 i‡(
	gÆso_this_ôî©i⁄
) {

70 
	gcurôî©i⁄_bô£t
->
£t_bô
(
vîãx
);

72 
	ghas_√w_èsks
 = 
åue
;

75 
ªsize
(
vid_t
 
maxsize
) {

76 
	gcurôî©i⁄_bô£t
->
ªsize
(
maxsize
);

77 
	g√xtôî©i⁄_bô£t
->
ªsize
(
maxsize
);

81 
ölöe
 
boﬁ
 
is_scheduÀd
(
vid_t
 
vîãx
) {

82  
	gcurôî©i⁄_bô£t
->
gë
(
vîãx
);

85 
ªmove_èsks
(
vid_t
 
‰omvîãx
, vid_à
tovîãx
) {

86 
	g√xtôî©i⁄_bô£t
->
˛ór_bôs
(
‰omvîãx
, 
tovîãx
);

91 
add_èsk_to_Æl
() {

92 
	ghas_√w_èsks
 = 
åue
;

93 
	gcurôî©i⁄_bô£t
->
£èŒ
();

96 
size_t
 
num_èsks
() {

97 
size_t
 
	gn
 = 0;

98 
vid_t
 
	gi
=0; i < 
	gcurôî©i⁄_bô£t
->
size
(); i++) {

99 
	gn
 +
curôî©i⁄_bô£t
->
gë
(
i
);

101  
	gn
;

	@engine/dynamic_graphs/edgebuffers.hpp

29 #i‚de‡
DEF_GRAPHCHI_EDGEBUFFERS


30 
	#DEF_GRAPHCHI_EDGEBUFFERS


	)

32 
	~<°dlib.h
>

33 
	~<ve˘‹
>

36 
«me•a˚
 
	ggøphchi
 {

42 
	gãm∂©e
 <
ty≥«me
 
	gEdgeD©aTy≥
>

43 
	s¸óãd_edge
 {

44 
vid_t
 
	g§c
;

45 
vid_t
 
	gd°
;

46 
EdgeD©aTy≥
 
	gd©a
;

47 
boﬁ
 
	gaccou¡ed_f‹_outc
;

48 
boﬁ
 
	gaccou¡ed_f‹_öc
;

49 
¸óãd_edge
(
vid_t
 
§c
, vid_à
d°
, 
EdgeD©aTy≥
 
_d©a
Ë: src(§c), d°(d°), 
d©a
(_d©a), 
accou¡ed_f‹_outc
(
Ál£
),

50 
accou¡ed_f‹_öc
(
Ál£
) {}

53 
	#EDGE_BUFFER_CHUNKSIZE
 65536

	)

59 
	gãm∂©e
 <
ty≥«me
 
	gET
>

60 ˛as†
	cedge_buf„r_Ê©
 {

62 
	gcou¡
;

63 
	g°d
::
ve˘‹
<
¸óãd_edge
<
ET
> *> 
bufs
;

65 
	gpublic
:

67 
edge_buf„r_Ê©
(Ë: 
cou¡
(0) {

70 ~
edge_buf„r_Ê©
() {

71 
˛ór
();

74 
˛ór
() {

75 
	gi
=0; i< ()
	gbufs
.
size
(); i++) {

76 
‰ì
(
bufs
[
i
]);

78 
	gbufs
.
˛ór
();

79 
	gcou¡
 = 0;

82 
size
() {

83  
	gcou¡
;

86 
	g¸óãd_edge
<
	gET
> * 
	g›î©‹
[](
	gi
) {

87  &
	gbufs
[
i
 / 
EDGE_BUFFER_CHUNKSIZE
][i % EDGE_BUFFER_CHUNKSIZE];

90 
add
(
vid_t
 
§c
, vid_à
d°
, 
ET
 
d©a
) {

91 
add
(
¸óãd_edge
<
ET
>(
§c
, 
d°
, 
d©a
));

94 
add
(
¸óãd_edge
<
ET
> 
˚dge
) {

95 
	gidx
 = 
cou¡
++;

96 
	gbufidx
 = 
idx
 / 
EDGE_BUFFER_CHUNKSIZE
;

97 i‡(
	gbufidx
 =(Ë
bufs
.
size
()) {

98 
bufs
.
push_back
((
¸óãd_edge
<
ET
>*)
ˇŒoc
((¸óãd_edge<ET>), 
EDGE_BUFFER_CHUNKSIZE
));

100 
	gbufs
[
bufidx
][
idx
 % 
EDGE_BUFFER_CHUNKSIZE
] = 
˚dge
;

103 
	g¥iv©e
:

105 
edge_buf„r_Ê©
(constÉdge_buffer_flat&);

106 
	gedge_buf„r_Ê©
& 
	g›î©‹
=(c⁄° 
edge_buf„r_Ê©
&);

	@engine/dynamic_graphs/graphchi_dynamicgraph_engine.hpp

31 #i‚de‡
GRAPHCHI_DYNAMICGRAPHENGINE_DEF


32 
	#GRAPHCHI_DYNAMICGRAPHENGINE_DEF


	)

34 
	~<°dlib.h
>

35 
	~<ve˘‹
>

37 
	~"ígöe/gøphchi_ígöe.hµ
"

38 
	~"ígöe/dy«mic_gøphs/edgebuf„rs.hµ
"

39 
	~"loggî/loggî.hµ
"

42 
«me•a˚
 
	ggøphchi
 {

48 
	gãm∂©e
 <
ty≥«me
 
	gVîãxD©aTy≥
,Åy≥«mê
	gEdgeD©aTy≥
,Åy≥«mê
	gsvîãx_t
 = 
gøphchi_vîãx
<
VîãxD©aTy≥
, EdgeDataType> >

49 
˛ass
 
	ggøphchi_dy«micgøph_ígöe
 : 
public
 
gøphchi_ígöe
<
VîãxD©aTy≥
, 
	gEdgeD©aTy≥
, 
	gsvîãx_t
> {

50 
	gpublic
:

51 
gøphchi_ígöe
<
	tVîãxD©aTy≥
, 
	tEdgeD©aTy≥
> 
	tba£_ígöe
;

52 
	gedge_buf„r_Ê©
<
	tEdgeD©aTy≥
> 
	tedge_buf„r
;

54 
gøphchi_dy«micgøph_ígöe
(
°d
::
°rög
 
ba£_fûíame
, 
nsh¨ds
, 
boﬁ
 
£À˘ive_schedulög
, 
mërics
 &
_m
) :

55 
gøphchi_ígöe
<
VîãxD©aTy≥
, 
	gEdgeD©aTy≥
, 
	gsvîãx_t
>(
	gba£_fûíame
, 
	gnsh¨ds
, 
	g£À˘ive_schedulög
, 
	g_m
){

56 
	g_m
.
£t
("engine", "dynamicgraphs");

57 
	gadded_edges
 = 0;

58 
	gœ°_commô
 = 0;

59 
	gmaxsh¨dsize
 = 200 * 1024 * 1024;

62 
	g¥Ÿe˘ed
:

67 
°d
::
ve˘‹
< std::ve˘‹< 
edge_buf„r
 * > > 
√w_edge_buf„rs
;

68 
	g°d
::
ve˘‹
<> 
dñëecou¡s
;

69 
	g°d
::
ve˘‹
<
°d
::
°rög
> 
sh¨d_suffi˚s
;

71 
vid_t
 
	gmax_vîãx_id
;

72 
size_t
 
	gmax_edge_buf„r
;

73 
size_t
 
	gœ°_commô
;

74 
size_t
 
	gadded_edges
;

75 
	g°d
::
°rög
 
°©e
;

76 
size_t
 
	gmaxsh¨dsize
;

77 
size_t
 
	gedges_ö_sh¨ds
;

78 
size_t
 
	g‹ig_edges
;

83 
muãx
 
	gscheduÀæock
;

84 
muãx
 
	gsh¨dlock
;

89 
vútuÆ
 
boﬁ
 
dißbÀ_¥ñﬂdög
() {

90  
	gåue
;

96 
vútuÆ
 
degªe_d©a
 * 
¸óã_degªe_h™dÀr
() {

98 
	g°d
::
°rög
 
‹ig_degªe_fûe
 = 
fûíame_degªe_d©a
(
this
->
ba£_fûíame
);

99 
	g°d
::
°rög
 
dynsuffix
 = ".dynamic";

100 
	g°d
::
°rög
 
dy«mic_degªe_fûe
 = 
fûíame_degªe_d©a
(
this
->
ba£_fûíame
 + 
dynsuffix
);

101 
˝
(
‹ig_degªe_fûe
, 
dy«mic_degªe_fûe
);

102  
√w
 
degªe_d©a
(
this
->
ba£_fûíame
 + 
dynsuffix
,Åhis->
iomgr
);

104 
vútuÆ
 
size_t
 
num_edges
() {

105 
	gsh¨dlock
.
lock
();

106 
size_t
 
	g√
 = 0;

107 
	gi
=0; i < 
	gthis
->
	gnsh¨ds
; i++) {

108 
	g√
 +
this
->
¶idög_sh¨ds
[
i
]->
num_edges
();

109 
	gj
=0; j < (Ë
	g√w_edge_buf„rs
[
i
].
size
(); j++)

110 
	g√
 +
√w_edge_buf„rs
[
i
][
j
]->
size
();

112 
	gsh¨dlock
.
u∆ock
();

113  
	g√
;

116 
	gpublic
:

118 
size_t
 
num_edges_ß„
() {

119  
added_edges
 + 
‹ig_edges
;

122 
size_t
 
num_buf„ªd_edges
() {

123  
	gadded_edges
 - 
	gœ°_commô
;

126 
	g¥Ÿe˘ed
:

127 
öô_buf„rs
() {

128 
max_edge_buf„r
 = 
gë_›ti⁄_l⁄g
("max_edgebuf„r_mb", 1000Ë* 1024 * 1024 / (
	g¸óãd_edge
<
	gEdgeD©aTy≥
>);

131 
	g°d
::
ve˘‹
< 
°d
::ve˘‹< 
edge_buf„r
 * > > 
tmp_√w_edge_buf„rs
;

132 
	gi
=0; i < 
	gthis
->
	gnsh¨ds
; i++) {

133 
	g°d
::
ve˘‹
<
edge_buf„r
 *> 
sh¨dbuf„rs
 = 
°d
::vector<edge_buffer *>();

134 
	gj
=0; j < 
	gthis
->
	gnsh¨ds
; j++) {

135 
	gsh¨dbuf„rs
.
push_back
(
√w
 
edge_buf„r
());

137 
	gtmp_√w_edge_buf„rs
.
push_back
(
sh¨dbuf„rs
);

142 
	gi
 = 0;

143 
ty≥«me
 
	g°d
::
ve˘‹
< 
°d
::ve˘‹< 
edge_buf„r
 * > >::
ôî©‹
 
ﬁdô
 = 
√w_edge_buf„rs
.
begö
();

144 
	gﬁdô
 !
√w_edge_buf„rs
.
íd
(); ++oldit) {

145 
ty≥«me
 
	g°d
::
ve˘‹
< 
edge_buf„r
 *>::
ôî©‹
 
bufô
 = 
ﬁdô
->
begö
(); 
	gbufô
 !ﬁdô->
íd
(); ++bufit) {

146 
	gedge_buf„r
 &
	gbuf„r_f‹_wödow
 = **
bufô
;

147 
	gebi
 = 0;Ébò< 
	gbuf„r_f‹_wödow
.
size
();Ébi++ ) {

148 
	g¸óãd_edge
<
	gEdgeD©aTy≥
> * 
	gedge
 = 
buf„r_f‹_wödow
[
ebi
];

149 
	gsh¨d
 = 
gë_sh¨d_f‹
(
edge
->
d°
);

150 
	g§csh¨d
 = 
gë_sh¨d_f‹
(
edge
->
§c
);

151 
	gi
++;

152 
	gtmp_√w_edge_buf„rs
[
sh¨d
][
§csh¨d
]->
add
(*
edge
);

154 
dñëe
 *
	gbufô
;

158 
	g°d
::
cout
 << "TRANSFERRED " << 
i
 << " EDGES OVER." << 
°d
::
ídl
;

160 
	g√w_edge_buf„rs
 = 
tmp_√w_edge_buf„rs
;

168 
size_t
 
˝
(
°d
::
°rög
 
‹igfûe
, std::°rög 
d°fûe
, 
boﬁ
 
zîoout
=
Ál£
) {

169 * 
buf
;

170 
	gf
 = 
›í
(
‹igfûe
.
c_°r
(), 
O_RDONLY
);

171 
size_t
 
	gÀn
 = 
ªadfuŒ
(
f
, &
buf
);

172 
	g°d
::
cout
 << "Lígth: " << 
Àn
 << 
°d
::
ídl
;

173 
	g°d
::
cout
 << 
‹igfûe
 << " ----> " << 
d°fûe
 << 
°d
::
ídl
;

175 
˛o£
(
f
);

176 
ªmove
(
d°fûe
.
c_°r
());

177 
	gof
 = 
›í
(
d°fûe
.
c_°r
(), 
O_WRONLY
 | 
O_CREAT
, 
S_IROTH
 | 
S_IWOTH
 | 
S_IWUSR
 | 
S_IRUSR
);

178 
as£π
(
of
 >= 0);

179 i‡(
	gzîoout
) {

180 
mem£t
(
buf
, 0, 
Àn
);

182 
wrôó
(
of
, 
buf
, 
Àn
);

184 
as£π
(
gë_fûesize
(
‹igfûe
Ë=gë_fûesize(
d°fûe
));

185 
˛o£
(
of
);

186 
‰ì
(
buf
);

187  
	gÀn
;

191 
˝ed©a
(
°d
::
°rög
 
‹igfûe
, std::°rög 
d°fûe
, 
boﬁ
 
zîoout
=
Ál£
) {

192 
˝
(
‹igfûe
 + ".size", 
d°fûe
 + ".size");

193 
	g°d
::
°rög
 
dú«me
 = 
dú«me_sh¨d_ed©a_block
(
d°fûe
, 
ba£_ígöe
::
blocksize
);

194 
mkdú
(
dú«me
.
c_°r
(), 0777);

195 
size_t
 
	ged©asize
 = 
gë_sh¨d_ed©a_fûesize
<
EdgeD©aTy≥
>(
‹igfûe
);

196 
	gnblocks
 = (Ë((
ed©asize
 / 
ba£_ígöe
::
blocksize
) + (edatasize % base_engine::blocksize == 0 ? 0 : 1));

197 
	gi
=0; i < 
	gnblocks
; i++) {

198 
	g°d
::
°rög
 
‹igblock«me
 = 
fûíame_sh¨d_ed©a_block
(
‹igfûe
, 
i
, 
ba£_ígöe
::
blocksize
);

199 
	g°d
::
°rög
 
d°block«me
 = 
fûíame_sh¨d_ed©a_block
(
d°fûe
, 
i
, 
ba£_ígöe
::
blocksize
);

200 
˝
(
‹igblock«me
, 
d°block«me
);

205 
vútuÆ
 
ty≥«me
 
	gba£_ígöe
::
memsh¨d_t
 * 
¸óã_memsh¨d
(
vid_t
 
öãrvÆ_°
, vid_à
öãrvÆ_í
) {

206 
	gp
 = 
this
->
exec_öãrvÆ
;

207 
	g°d
::
°rög
 
adj_fûíame
 = 
fûíame_sh¨d_adj
(
this
->
ba£_fûíame
, 0, 0Ë+ ".dyngøph" + 
	gsh¨d_suffi˚s
[
p
];

208 
	g°d
::
°rög
 
ed©a_fûíame
 = 
fûíame_sh¨d_ed©a
<
EdgeD©aTy≥
>(
this
->
ba£_fûíame
, 0, 0Ë+ ".dyngøph" + 
	gsh¨d_suffi˚s
[
p
];

209  
√w
 
ty≥«me
 
	gba£_ígöe
::
memsh¨d_t
(
this
->
iomgr
,

210 
ed©a_fûíame
,

211 
adj_fûíame
,

212 
öãrvÆ_°
,

213 
öãrvÆ_í
,

214 
ba£_ígöe
::
blocksize
,

215 
this
->
m
);

222 
vútuÆ
 
öôülize_¶idög_sh¨ds
() {

223 
	g°©e
 = "initialize-shards";

224 
	gsh¨dlock
.
lock
();

225 i‡(
	gthis
->
	g¶idög_sh¨ds
.
em±y
()) {

226 
	gp
=0;Ö < 
	gthis
->
	gnsh¨ds
;Ö++) {

227 
	g°d
::
°rög
 
adj_fûíame
 = 
fûíame_sh¨d_adj
(
this
->
ba£_fûíame
, 0, 0Ë+ ".dyngøph" + 
	gsh¨d_suffi˚s
[
p
];

228 
	g°d
::
°rög
 
ed©a_fûíame
 = 
fûíame_sh¨d_ed©a
<
EdgeD©aTy≥
>(
this
->
ba£_fûíame
, 0, 0Ë+ ".dyngøph" + 
	gsh¨d_suffi˚s
[
p
];

230 
	gthis
->
	g¶idög_sh¨ds
.
push_back
(

231 
√w
 
ty≥«me
 
ba£_ígöe
::
¶idögsh¨d_t
(
this
->
iomgr
, 
ed©a_fûíame
,

232 
adj_fûíame
,

233 
this
->
öãrvÆs
[
p
].
fú°
,

234 
this
->
öãrvÆs
[
p
].
£c⁄d
,

235 
this
->
blocksize
,

236 
this
->
m
,

237 !
this
->
modifõs_ouãdges
,

238 
Ál£
));

241 
	gp
=0;Ö < 
	gthis
->
	gnsh¨ds
;Ö++) {

242 i‡(
	gthis
->
	g¶idög_sh¨ds
[
p
] =
NULL
) {

243 
°d
::
°rög
 
adj_fûíame
 = 
fûíame_sh¨d_adj
(
this
->
ba£_fûíame
, 0, 0Ë+ ".dyngøph" + 
	gsh¨d_suffi˚s
[
p
];

244 
	g°d
::
°rög
 
ed©a_fûíame
 = 
fûíame_sh¨d_ed©a
<
EdgeD©aTy≥
>(
this
->
ba£_fûíame
, 0, 0Ë+ ".dyngøph" + 
	gsh¨d_suffi˚s
[
p
];

246 
	gthis
->
	g¶idög_sh¨ds
[
p
] = 
√w
 
ty≥«me
 
ba£_ígöe
::
¶idögsh¨d_t
(
this
->
iomgr
, 
ed©a_fûíame
,

247 
adj_fûíame
,

248 
this
->
öãrvÆs
[
p
].
fú°
,

249 
this
->
öãrvÆs
[
p
].
£c⁄d
,

250 
this
->
blocksize
,

251 
this
->
m
,

252 !
this
->
modifõs_ouãdges
,

253 
Ál£
);

257 
	gsh¨dlock
.
u∆ock
();

258 
	gedges_ö_sh¨ds
 = 
num_edges
();

259 i‡(
	g‹ig_edges
 =0Ë
‹ig_edges
 = 
edges_ö_sh¨ds
;

262 
¥ï¨e_˛ón_¶©e
() {

263 
log°ªam
(
LOG_INFO
Ë<< "Pª∑rög cÀ™ sœã..." << 
	g°d
::
ídl
;

264 
	gsh¨d
=0; sh¨d < 
	gthis
->
	gnsh¨ds
; shard++) {

265 
	gsh¨d_suffi˚s
.
push_back
(
gë_∑π_°r
(
sh¨d
, 
this
->
nsh¨ds
));

267 
	g°d
::
°rög
 
ed©a_fûíame
 = 
fûíame_sh¨d_ed©a
<
EdgeD©aTy≥
>(
this
->
ba£_fûíame
, 
	gsh¨d
, 
	gthis
->
	gnsh¨ds
);

268 
	g°d
::
°rög
 
adj_fûíame
 = 
fûíame_sh¨d_adj
(
this
->
ba£_fûíame
, 
sh¨d
,Åhis->
nsh¨ds
);

269 
	g°d
::
°rög
 
de°_adj
 = 
fûíame_sh¨d_adj
(
this
->
ba£_fûíame
, 0, 0Ë+ ".dyngøph" + 
	gsh¨d_suffi˚s
[
sh¨d
];

270 
	g°d
::
°rög
 
de°_ed©a
 = 
fûíame_sh¨d_ed©a
<
EdgeD©aTy≥
>(
this
->
ba£_fûíame
, 0, 0Ë+ ".dyngøph" + 
	gsh¨d_suffi˚s
[
sh¨d
];

272 
˝ed©a
(
ed©a_fûíame
, 
de°_ed©a
, 
åue
);

273 
˝
(
adj_fûíame
, 
de°_adj
);

274 
˝
(
fûíame_sh¨d_adjidx
(
adj_fûíame
), fûíame_sh¨d_adjidx(
de°_adj
));

279 
gë_sh¨d_f‹
(
vid_t
 
d°
) {

280 
	gi
=0; i < 
	gthis
->
	gnsh¨ds
; i++) {

281 i‡(
	gd°
 >
this
->
öãrvÆs
[
i
].
fú°
 && 
d°
 <this->öãrvÆs[i].
£c⁄d
) {

282  
i
;

285  
	gthis
->
	gnsh¨ds
 - 1;

288 
	gpublic
:

289 
boﬁ
 
add_edge
(
vid_t
 
§c
, vid_à
d°
, 
EdgeD©aTy≥
 
ed©a
) {

290 i‡(
	g§c
 =
d°
) {

291 
log°ªam
(
LOG_WARNING
Ë<< "WARNING :ÅrõdÅÿadd sñf-edge!" << 
°d
::
ídl
;

292  
	gåue
;

294 i‡(
	gthis
->
	gôî
 < 1) {

295 
log°ªam
(
LOG_WARNING
Ë<< "TrõdÅÿaddÉdgêbef‹êfú° iãøti⁄ ha†∑s£d" << 
	g°d
::
ídl
;

296 
u¶ìp
(1000000);

297  
	gÁl£
;

299 i‡(
	gadded_edges
 - 
	gœ°_commô
 > 1.2 * 
	gmax_edge_buf„r
) {

300 
log°ªam
(
LOG_INFO
Ë<< "Ovî 20% o‡max buf„r... hﬁd on...." << 
	g°d
::
ídl
;

301 
u¶ìp
(1000000);

302  
	gÁl£
;

304 
	gthis
->
	gmodifiˇti⁄_lock
.
lock
();

305 
	gadded_edges
++;

306 
	gsh¨d
 = 
gë_sh¨d_f‹
(
d°
);

307 
	g§csh¨d
 = 
gë_sh¨d_f‹
(
§c
);

309 
vid_t
 
	g¥ev_max_id
 = 
max_vîãx_id
;

310 
	gmax_vîãx_id
 = 
°d
::
max
(
max_vîãx_id
, 
d°
);

311 
	gmax_vîãx_id
 = 
°d
::
max
(
max_vîãx_id
, 
§c
);

314 i‡(
	gmax_vîãx_id
>
	g¥ev_max_id
) {

315 
	gthis
->
	gdegªe_h™dÀr
->
ísuª_size
(
this
->
max_vîãx_id
);

318 i‡(
	gthis
->
	gscheduÀr
 !
NULL
) {

319 
scheduÀæock
.
lock
();

320 
	gthis
->
	gscheduÀr
->
ªsize
(1 + 
max_vîãx_id
);

321 
	gscheduÀæock
.
u∆ock
();

326 
	g√w_edge_buf„rs
[
sh¨d
][
§csh¨d
]->
add
(
§c
, 
d°
, 
ed©a
);

327 
	gthis
->
	gmodifiˇti⁄_lock
.
u∆ock
();

328  
	gåue
;

331 
add_èsk
(
vid_t
 
vid
) {

332 i‡(
	gthis
->
	gscheduÀr
 !
NULL
) {

333 
this
->
modifiˇti⁄_lock
.
lock
();

334 
	gthis
->
	gscheduÀr
->
add_èsk
(
vid
);

335 
	gthis
->
	gmodifiˇti⁄_lock
.
u∆ock
();

339 
	g¥Ÿe˘ed
:

340 
öc‹p‹©e_buf„ªd_edges
(
wödow
, 
vid_t
 
wödow_°
, vid_à
wödow_í
, 
°d
::
ve˘‹
<
svîãx_t
> & 
vîti˚s
) {

342 
n¸óãd
 = 0;

344 
	gsh¨d
=0; sh¨d<
	gthis
->
	gnsh¨ds
; shard++) {

345 
	gedge_buf„r
 &
	gbuf„r_f‹_wödow
 = *
√w_edge_buf„rs
[
sh¨d
][
wödow
];

346 
	gebi
=0;Ébi<
	gbuf„r_f‹_wödow
.
size
();Ébi++) {

347 
	g¸óãd_edge
<
	gEdgeD©aTy≥
> * 
	gedge
 = 
buf„r_f‹_wödow
[
ebi
];

348 i‡(
	gedge
->
	g§c
 >
wödow_°
 && 
edge
->
§c
 <
wödow_í
) {

349 i‡(
vîti˚s
[
edge
->
§c
-
wödow_°
].
scheduÀd
) {

350 i‡(
vîti˚s
[
edge
->
§c
-
wödow_°
].
scheduÀd
)

351 
vîti˚s
[
edge
->
§c
-
wödow_°
].
add_ouãdge
”dge->
d°
, &edge->
d©a
, 
Ál£
);

352 
	gn¸óãd
++;

359 
	gw
=0; w<
	gthis
->
	gnsh¨ds
; w++) {

360 
	gedge_buf„r
 &
	gbuf„r_f‹_wödow
 = *
√w_edge_buf„rs
[
wödow
][
w
];

361 
	gebi
=0;Ébi<
	gbuf„r_f‹_wödow
.
size
();Ébi++) {

362 
	g¸óãd_edge
<
	gEdgeD©aTy≥
> * 
	gedge
 = 
buf„r_f‹_wödow
[
ebi
];

363 i‡(
	gedge
->
	gd°
 >
wödow_°
 && 
edge
->
d°
 <
wödow_í
) {

364 i‡(
vîti˚s
[
edge
->
d°
 - 
wödow_°
].
scheduÀd
) {

365 i‡(
vîti˚s
[
edge
->
d°
-
wödow_°
].
scheduÀd
)

366 
vîti˚s
[
edge
->
d°
 - 
wödow_°
].
add_öedge
”dge->
§c
, &edge->
d©a
, 
Ál£
);

367 
	gn¸óãd
++;

372 
log°ªam
(
LOG_INFO
Ë<< "::: U£d " << 
	gn¸óãd
 << " buf„ªdÉdges." << 
	g°d
::
ídl
;

375 
boﬁ
 
öc‹p‹©e_√w_edge_degªes
(
wödow
, 
vid_t
 
wödow_°
, vid_à
wödow_í
) {

376 
boﬁ
 
	gmodifõd
 = 
Ál£
;

378 
	gsh¨d
=0; sh¨d < 
	gthis
->
	gnsh¨ds
; shard++) {

379 
	gedge_buf„r
 &
	gbuf„r_f‹_wödow
 = *
√w_edge_buf„rs
[
sh¨d
][
wödow
];

380 
	gebi
=0;Ébi<
	gbuf„r_f‹_wödow
.
size
();Ébi++) {

381 
	g¸óãd_edge
<
	gEdgeD©aTy≥
> * 
	gedge
 = 
buf„r_f‹_wödow
[
ebi
];

382 i‡(
	gedge
->
	g§c
 >
wödow_°
 && 
edge
->
§c
 <
wödow_í
) {

383 i‡(!
edge
->
accou¡ed_f‹_outc
) {

384 
degªe
 
d
 = 
this
->
degªe_h™dÀr
->
gë_degªe
(
edge
->
§c
);

385 
	gd
.
	goutdegªe
++;

386 
	gthis
->
	gdegªe_h™dÀr
->
£t_degªe
(
edge
->
§c
, 
d
);

388 
	gmodifõd
 = 
åue
;

389 
	gedge
->
	gaccou¡ed_f‹_outc
 = 
åue
;

396 
	gw
=0; w < 
	gthis
->
	gnsh¨ds
; w++) {

397 
	gedge_buf„r
 &
	gbuf„r_f‹_wödow
 = *
√w_edge_buf„rs
[
wödow
][
w
];

398 
	gebi
=0;Ébi<
	gbuf„r_f‹_wödow
.
size
();Ébi++) {

399 
	g¸óãd_edge
<
	gEdgeD©aTy≥
> * 
	gedge
 = 
buf„r_f‹_wödow
[
ebi
];

400 i‡(
	gedge
->
	gd°
 >
wödow_°
 && 
edge
->
d°
 <
wödow_í
) {

401 i‡(!
edge
->
accou¡ed_f‹_öc
) {

402 
degªe
 
d
 = 
this
->
degªe_h™dÀr
->
gë_degªe
(
edge
->
d°
);

403 
	gd
.
	gödegªe
++;

404 
	gthis
->
	gdegªe_h™dÀr
->
£t_degªe
(
edge
->
d°
, 
d
);

405 
	gedge
->
	gaccou¡ed_f‹_öc
 = 
åue
;

406 
	gmodifõd
 = 
åue
;

411  
	gmodifõd
;

414 
adju°_degªes_f‹_dñëed
(
°d
::
ve˘‹
< 
svîãx_t
 > &
vîti˚s
, 
vid_t
 
wödow_°
) {

415 #ifde‡
SUPPORT_DELETIONS


417 
boﬁ
 
	gsomech™ged
 = 
Ál£
;

418 
	gi
=0; i < ()
	gvîti˚s
.
size
(); i++) {

419 
	gsvîãx_t
 &
	gv
 = 
vîti˚s
[
i
];

420 i‡(
	gv
.
	gscheduÀd
) {

421 
	gthis
->
	gdegªe_h™dÀr
->
£t_degªe
(
v
.
id
(), v.
öc
, v.
outc
);

422 
	gsomech™ged
 = 
somech™ged
 || (
v
.
dñëed_öc
 + v.
dñëed_outc
 > 0);

423 
degªe
 
	gdeg
 = 
this
->
degªe_h™dÀr
->
gë_degªe
(
v
.
id
());

425 i‡(!(
	gdeg
.
	gödegªe
 >=0 && 
deg
.
outdegªe
 >= 0)) {

426 
°d
::
cout
 << "Degªêdis¸ï™cy: " << 
deg
.
ödegªe
 << " " << deg.
outdegªe
 << std::
ídl
;

428 
as£π
(
deg
.
ödegªe
 >=0 && deg.
outdegªe
 >= 0);

431 i‡(
	gsomech™ged
) {

432 
	gthis
->
	gdegªe_h™dÀr
->
ßve
();

437 
vútuÆ
 
vid_t
 
dëîmöe_√xt_wödow
(vid_à
iöãrvÆ
, vid_à
‰omvid
, vid_à
maxvid
, 
size_t
 
membudgë
) {

439 
	gthis
->
	gdegªe_h™dÀr
->
lﬂd
(
‰omvid
, 
maxvid
);

440 i‡(
öc‹p‹©e_√w_edge_degªes
(
iöãrvÆ
, 
‰omvid
, 
maxvid
)) {

441 
	gthis
->
	gdegªe_h™dÀr
->
ßve
();

444 
size_t
 
	gmemªq
 = 0;

445 
	gmax_öãrvÆ
 = 
maxvid
 - 
‰omvid
;

446 
	gi
=0; i < 
	gmax_öãrvÆ
; i++) {

447 
degªe
 
	gdeg
 = 
this
->
degªe_h™dÀr
->
gë_degªe
(
‰omvid
 + 
i
);

448 
	göc
 = 
deg
.
ödegªe
;

449 
	goutc
 = 
deg
.
outdegªe
;

452 
	gmemªq
 +(
svîãx_t
Ë+ ((
EdgeD©aTy≥
Ë+ (
vid_t
) +

453 (
gøphchi_edge
<
EdgeD©aTy≥
>))*(
outc
 + 
öc
);

454 i‡(
	gmemªq
 > 
	gmembudgë
) {

455  
	g‰omvid
 + 
	gi
 - 1;

458  
	gmaxvid
;

462 
vútuÆ
 
lﬂd_bef‹e_upd©es
(
°d
::
ve˘‹
<
svîãx_t
> &
vîti˚s
) {

463 
°©e
 = "load-edges";

465 
	gthis
->
	gba£_ígöe
::
lﬂd_bef‹e_upd©es
(
vîti˚s
);

467 #ifde‡
SUPPORT_DELETIONS


468 
	gi
=0; i < ()
	gvîti˚s
.
size
(); i++) {

469 
	gdñëecou¡s
[
this
->
exec_öãrvÆ
] +
vîti˚s
[
i
].
dñëed_öc
;

473 
	g°©e
 = "execute-updates";

477 
vútuÆ
 
öô_vîti˚s
(
°d
::
ve˘‹
<
svîãx_t
> &
vîti˚s
, 
gøphchi_edge
<
EdgeD©aTy≥
> * &
ed©a
) {

478 
	gba£_ígöe
::
öô_vîti˚s
(
vîti˚s
, 
ed©a
);

479 
öc‹p‹©e_buf„ªd_edges
(
this
->
exec_öãrvÆ
,Åhis->
sub_öãrvÆ_°
,Åhis->
sub_öãrvÆ_í
, 
vîti˚s
);

483 
vútuÆ
 
öôülize_ôî
() {

484 
	gthis
->
	göãrvÆs
[
this
->
nsh¨ds
 - 1].
	g£c⁄d
 = 
max_vîãx_id
;

485 
	gthis
->
	gvîãx_d©a_h™dÀr
->
check_size
(
max_vîãx_id
 + 1);

486 
öôülize_¶idög_sh¨ds
();

489 
	gdñëecou¡s
.
˛ór
();

490 
	gp
=0;Ö < 
	gthis
->
	gnsh¨ds
;Ö++)

491 
	gdñëecou¡s
.
push_back
(0);

494 
vútuÆ
 
ôî©i⁄_föished
() {

495 i‡(
	gthis
->
	gôî
 <Åhis->
	gnôîs
 - 1) {

497 
	gp
=0;Ö < 
	gthis
->
	gnsh¨ds
;Ö++) {

498 
	gthis
->
	g¶idög_sh¨ds
[
p
]->
Êush
();

499 
	gthis
->
	g¶idög_sh¨ds
[
p
]->
£t_off£t
(0, 0, 0);

502 
	gthis
->
	giomgr
->
waô_f‹_wrôes
();

504 
commô_gøph_ch™ges
();

508 
vútuÆ
 
öôülize_bef‹e_run
() {

509 
¥ï¨e_˛ón_¶©e
();

510 
öô_buf„rs
();

512 
	gmax_vîãx_id
 = (
vid_t
Ë(
this
->
num_vîti˚s
() - 1);

514 
	gthis
->
	gvîãx_d©a_h™dÀr
->
˛ór
(
this
->
num_vîti˚s
());

515 
	g‹ig_edges
 = 0;

520 
vútuÆ
 
lﬂd_a·î_upd©es
(
°d
::
ve˘‹
<
svîãx_t
> &
vîti˚s
) {

521 
this
->
ba£_ígöe
::
lﬂd_a·î_upd©es
(
vîti˚s
);

522 
adju°_degªes_f‹_dñëed
(
vîti˚s
, 
this
->
sub_öãrvÆ_°
);

525 
	gpublic
:

526 
föish_a·î_ôîs
(
exåa_ôîs
) {

527 
this
->
chic⁄ãxt
.
œ°_ôî©i⁄
 =Åhis->chic⁄ãxt.
ôî©i⁄
 + 
exåa_ôîs
;

530 
	g¥Ÿe˘ed
:

533 
	#BBUF
 32000000

	)

535 
size_t
 
cuødjfûïos
;

540 
commô_gøph_ch™ges
() {

542 
size_t
 
	gndñëed
 = 0;

543 
size_t
 
	gi
=0; i < 
	gdñëecou¡s
.
size
(); i++) {

544 
	gndñëed
 +
dñëecou¡s
[
i
];

549 
log°ªam
(
LOG_DEBUG
Ë<< "TŸÆ dñëed: " << 
	gndñëed
 << "ÅŸÆÉdges: " << 
	gthis
->
num_edges
(Ë<< 
	g°d
::
ídl
;

551 i‡(
	gadded_edges
 - 
	gœ°_commô
 < 
	gmax_edge_buf„r
 * 0.8 && 
	gndñëed
 < 
	gthis
->
num_edges
() * 0.1) {

552 
	g°d
::
cout
 << "==============================" << 
°d
::
ídl
;

553 
	g°d
::
cout
 << "Nÿtimêtÿcommô yë.... O∆y " << (
added_edges
 - 
œ°_commô
Ë<< " / " << 
max_edge_buf„r


554 << " i¿buf„rs" << 
°d
::
ídl
;

559 
boﬁ
 
	gøngesch™ged
 = 
Ál£
;

560 
	g°©e
 = "commit-ingests";

561 
vid_t
 
	gmaxwödow
 = 4000000;

562 
size_t
 
	gmem_budgë
 = 
this
->
membudgë_mb
 * 1024 * 1024;

563 
	gthis
->
	gmodifiˇti⁄_lock
.
lock
();

568 
	g°d
::
ve˘‹
<> 
edge•îsh¨d
;

569 
	gp
=0;Ö < 
	gthis
->
	gnsh¨ds
;Ö++) {

570 
	gedge•îsh¨d
.
push_back
(
this
->
¶idög_sh¨ds
[
p
]->
num_edges
());

573 
	g°d
::
ve˘‹
<
°d
::
∑ú
<
vid_t
, 
	gvid_t
> > 
	g√wønges
;

574 
	g°d
::
ve˘‹
<
°d
::
°rög
> 
√wsuffi˚s
;

576 
	gôî°r
[128];

577 
•rötf
(
ôî°r
, "%d", 
this
->
ôî
);

579 
size_t
 
	gmö_buf„r_ö_sh¨d_to_commô
 = 
max_edge_buf„r
 / 
this
->
nsh¨ds
 / 2;

581 
	g°d
::
ve˘‹
<
boﬁ
> 
was_commôed
(
this
->
nsh¨ds
, 
åue
);

583 
	gsh¨d
=0; sh¨d < 
	gthis
->
	gnsh¨ds
; shard++) {

584 
	g°d
::
ve˘‹
<
edge_buf„r
*> &
sh¨d_buf„r
 = 
√w_edge_buf„rs
[
sh¨d
];

587 
size_t
 
	gbu„dges
 = 0;

588 
	gw
=0; w < 
	gthis
->
	gnsh¨ds
; w++) {

589 
	gbu„dges
 +
sh¨d_buf„r
[
w
]->
size
();

593 i‡(
	gbu„dges
 < 
	gmö_buf„r_ö_sh¨d_to_commô
 && 
	gdñëecou¡s
[
sh¨d
] * 1.0 / 
	gedge•îsh¨d
[shard] < 0.2) {

594 
log°ªam
(
LOG_DEBUG
Ë<< 
	gsh¨d
 << ":ÇŸÉnoughÉdge†f‹ sh¨d: " << 
	gbu„dges
 << " dñëed:" << 
	gdñëecou¡s
[
sh¨d
] << "/" << 
	gedge•îsh¨d
[sh¨d] << 
	g°d
::
ídl
;

595 
	g√wønges
.
push_back
(
this
->
öãrvÆs
[
sh¨d
]);

596 
	g√wsuffi˚s
.
push_back
(
sh¨d_suffi˚s
[
sh¨d
]);

597 
	gwas_commôed
[
sh¨d
] = 
Ál£
;

600 
log°ªam
(
LOG_DEBUG
Ë<< 
	gsh¨d
 << ": goögÅÿªwrôe, dñëed:" << 
	gdñëecou¡s
[
sh¨d
] << "/" << 
	gedge•îsh¨d
[sh¨d] << " bu„dges: " << 
	gbu„dges
 << 
	g°d
::
ídl
;

601 
	gsh¨dlock
.
lock
();

602 
dñëe
 
	gthis
->
	g¶idög_sh¨ds
[
sh¨d
];

603 
	gthis
->
	g¶idög_sh¨ds
[
sh¨d
] = 
NULL
;

604 
	gsh¨dlock
.
u∆ock
();

606 
	g°d
::
°rög
 
‹igsh¨dfûe
 = 
fûíame_sh¨d_ed©a
<
EdgeD©aTy≥
>(
this
->
ba£_fûíame
, 0, 0Ë+ ".dyngøph" + 
	gsh¨d_suffi˚s
[
sh¨d
];

607 
	g°d
::
°rög
 
‹igadjfûe
 = 
fûíame_sh¨d_adj
(
this
->
ba£_fûíame
, 0, 0Ë+ ".dyngøph" + 
	gsh¨d_suffi˚s
[
sh¨d
];

610 
off_t
 
	gsz
 = 
gë_sh¨d_ed©a_fûesize
<
EdgeD©aTy≥
>(
‹igsh¨dfûe
);

612 
	gouç¨ts
 = ( 
sz
 >(
off_t
Ë
maxsh¨dsize
 ? 2 : 1);

614 
vid_t
 
	g•lôpos
 = 0;

615 
	g°d
::
cout
 << "Size: " << 
sz
 << " vs. maxsh¨dsize: " << 
maxsh¨dsize
 << 
°d
::
ídl
;

616 i‡(
	gsz
 > (
	goff_t
)
	gmaxsh¨dsize
) {

617 
	gøngesch™ged
 = 
åue
;

619 
size_t
 
	ghÆ„dges
 = (
sz
 / (
EdgeD©aTy≥
)) / 2;

621 
	gw
=0; w < 
	gthis
->
	gnsh¨ds
; w++) {

622 
	ghÆ„dges
 +
√w_edge_buf„rs
[
sh¨d
][
w
]->
size
() / 2;

624 
size_t
 
	g√dges
 = 0;

626 
vid_t
 
	g°
 = 
this
->
öãrvÆs
[
sh¨d
].
fú°
;

627 
	g•lôpos
 = 
°
 + (
this
->
öãrvÆs
[
sh¨d
].
£c⁄d
 - st) / 2;

628 
boﬁ
 
	gfound
 = 
Ál£
;

629 
	g°
 < 
	gthis
->
	göãrvÆs
[
sh¨d
].
	g£c⁄d
) {

630 
vid_t
 
	gí
 = 
°d
::
mö
(
°
 + 
maxwödow
, 
this
->
öãrvÆs
[
sh¨d
].
£c⁄d
);

631 
	gthis
->
	gdegªe_h™dÀr
->
lﬂd
(
°
, 
í
);

632 
	gnv
 = 
í
 - 
°
 + 1;

634 
	gi
=0; i<
	gnv
; i++) {

635 
	g√dges
 +
this
->
degªe_h™dÀr
->
gë_degªe
(
°
 + 
i
).
ödegªe
;

636 i‡(
	g√dges
 >
hÆ„dges
) {

637 
•lôpos
 = 
i
+
°
-1;

638 
	gfound
 = 
åue
;

642 i‡(
	gfound
) ;

643 
	g°
 = 
í
+1;

645 
as£π
(
•lôpos
 > 
this
->
öãrvÆs
[
sh¨d
].
fú°
 && s∂ôpo†<Åhis->öãrvÆs[sh¨d].
£c⁄d
);

648 
	g•lôs
=0; s∂ôs<
	gouç¨ts
; splits++) {

649 
ty≥«me
 
	gba£_ígöe
::
¶idögsh¨d_t
 * 
cursh¨d
 =

650 
√w
 
ty≥«me
 
ba£_ígöe
::
¶idögsh¨d_t
(
this
->
iomgr
, 
‹igsh¨dfûe
, 
‹igadjfûe
,

651 
this
->
öãrvÆs
[
sh¨d
].
fú°
,Åhis->öãrvÆs[sh¨d].
£c⁄d
,

652 
ba£_ígöe
::
blocksize
, 
this
->
m
, 
åue
);

655 
	g°d
::
°rög
 
suffix
 = "";

656 
	g∑π°r
[128];

657 
•rötf
(
∑π°r
, "%d", 
sh¨d
);

658 i‡(
	g•lôs
 == 0) {

659 
suffix
 = 
°d
::
°rög
(
∑π°r
);

661 
	gsuffix
 = 
°d
::
°rög
(
∑π°r
) + ".split";

663 
	gsuffix
 = 
suffix
 + ".i" + 
°d
::
°rög
(
ôî°r
);

664 
	g√wsuffi˚s
.
push_back
(
suffix
);

665 
	gcuødjfûïos
 = 0;

666 
	g°d
::
°rög
 
outfûe_ed©a
 = 
fûíame_sh¨d_ed©a
<
EdgeD©aTy≥
>(
this
->
ba£_fûíame
, 0, 0Ë+ ".dyngøph" + 
	gsuffix
;

667 
	g°d
::
°rög
 
outfûe_ed©a_dú«me
 = 
dú«me_sh¨d_ed©a_block
(
outfûe_ed©a
, 
ba£_ígöe
::
blocksize
);

668 
mkdú
(
outfûe_ed©a_dú«me
.
c_°r
(), 0777);

669 
	g°d
::
°rög
 
outfûe_adj
 = 
fûíame_sh¨d_adj
(
this
->
ba£_fûíame
, 0, 0Ë+ ".dyngøph" + 
	gsuffix
;

671 
vid_t
 
	g•lô°¨t
 = 
this
->
öãrvÆs
[
sh¨d
].
fú°
;

672 
vid_t
 
	g•lôíd
 = 
this
->
öãrvÆs
[
sh¨d
].
£c⁄d
;

673 i‡(
	gsh¨d
 =
this
->
nsh¨ds
 - 1Ë
•lôíd
 = 
max_vîãx_id
;

676 i‡(
	gouç¨ts
 == 2) {

677 i‡(
•lôs
==0Ë
•lôíd
 = 
•lôpos
;

678 
	g•lô°¨t
 = 
•lôpos
+1;

680 
	g√wønges
.
push_back
(
°d
::
∑ú
<
vid_t
,vid_t>(
•lô°¨t
, 
•lôíd
));

683 
	gf
 = 
›í
(
outfûe_adj
.
c_°r
(), 
O_WRONLY
 | 
O_CREAT
, 
S_IROTH
 | 
S_IWOTH
 | 
S_IWUSR
 | 
S_IRUSR
);

684 
	gîr
 = 
·runˇã
(
f
, 0);

685 i‡(
	gîr
 != 0) {

686 
log°ªam
(
LOG_ERROR
Ë<< "Eº‹Årunˇtög " << 
outfûe_adj
 << ",Éº‹: " << 
°ªº‹
(
î∫o
Ë<< 
°d
::
ídl
;

688 
as£π
(
îr
 == 0);

690 
	gef
 = 
›í
(
outfûe_ed©a
.
c_°r
(), 
O_WRONLY
 | 
O_CREAT
, 
S_IROTH
 | 
S_IWOTH
 | 
S_IWUSR
 | 
S_IRUSR
);

691 
	gîr
 = 
·runˇã
(
ef
, 0);

692 i‡(
	gîr
 != 0) {

693 
log°ªam
(
LOG_ERROR
Ë<< "Eº‹Årunˇtög " << 
outfûe_ed©a
 << ",Éº‹: " << 
°ªº‹
(
î∫o
Ë<< 
°d
::
ídl
;

695 
as£π
(
îr
 == 0);

696 * 
	gbuf
 = (*Ë
mÆloc
(
BBUF
);

697 * 
	gbuÂå
 = 
buf
;

698 * 
	gebuf
 = (*Ë
mÆloc
(
BBUF
);

699 * 
	gebuÂå
 = 
ebuf
;

700 
size_t
 
	gtŸ_ed©abyãs
 = 0;

703 
	g°d
::
°rög
 
ödexfûe
 = 
fûíame_sh¨d_adjidx
(
outfûe_adj
);

704 
	gidxf
 = 
›í
(
ödexfûe
.
c_°r
(), 
O_WRONLY
 | 
O_CREAT
, 
S_IROTH
 | 
S_IWOTH
 | 
S_IWUSR
 | 
S_IRUSR
);

705 
size_t
 
	gœ°_ödex_ouçut
 = 0;

706 
size_t
 
	gödex_öãrvÆ_edges
 = 1024 * 1024;

707 
size_t
 
	gedgecou¡î
 = 0;

708 
as£π
(
idxf
>0);

712 
	gwödow
=0; wödow < 
	gthis
->
	gnsh¨ds
; window++) {

713 
vid_t
 
	gønge_°
 = 
this
->
öãrvÆs
[
wödow
].
fú°
;

714 
vid_t
 
	gønge_í
 = 
this
->
öãrvÆs
[
wödow
].
£c⁄d
;

715 i‡(
	gwödow
 =
this
->
nsh¨ds
 - 1Ë
ønge_í
 = 
max_vîãx_id
;

716 
	gedge_buf„r
 &
	gbuf„r_f‹_wödow
 = *
√w_edge_buf„rs
[
sh¨d
][
wödow
];

718 
vid_t
 
	gwödow_°
=
ønge_°
; wödow_°<
	gønge_í
; ) {

720 
vid_t
 
	gwödow_í
 = 
dëîmöe_√xt_wödow
(
wödow
, 
wödow_°
,

721 
°d
::
mö
(
ønge_í
, 
wödow_°
 + (
vid_t
)
maxwödow
), 
mem_budgë
);

723 
	gnvîti˚s
 = 
wödow_í
-
wödow_°
+1;

724 
	g°d
::
ve˘‹
< 
svîãx_t
 > 
vîti˚s
(
nvîti˚s
, svertex_t());

726 
	ggøphchi_edge
<
	gEdgeD©aTy≥
> * 
	ged©a
 = 
NULL
;

727 
size_t
 
	gnum_edges
=0;

728 
	gi
=0; i<
	gnvîti˚s
; i++) {

729 
degªe
 
	gd
 = 
this
->
degªe_h™dÀr
->
gë_degªe
(
i
 + 
wödow_°
);

730 
	gnum_edges
 +
d
.
ödegªe
+d.
outdegªe
;

732 
size_t
 
	gecou¡î
 = 0;

733 
	ged©a
 = (
gøphchi_edge
<
EdgeD©aTy≥
>*)
mÆloc
(
num_edges
 * (graphchi_edge<EdgeDataType>));

734 
	gi
=0; i<()
	gnvîti˚s
; i++) {

736 
degªe
 
	gd
 = 
this
->
degªe_h™dÀr
->
gë_degªe
(
i
 + 
wödow_°
);

737 
	goutc
 = 
d
.
outdegªe
;

738 
	gvîti˚s
[
i
] = 
svîãx_t
(
wödow_°
+i, &
ed©a
[
ecou¡î
],

739 &
ed©a
[
ecou¡î
+0], 0, 
outc
);

740 
	gvîti˚s
[
i
].
	gscheduÀd
 = 
åue
;

741 
	gecou¡î
 +0 + 
outc
;

745 
	gcursh¨d
->
ªad_√xt_vîti˚s
(
nvîti˚s
, 
wödow_°
, 
vîti˚s
, 
Ál£
, 
åue
);

748 
	gebi
=0;Ébi<
	gbuf„r_f‹_wödow
.
size
();Ébi++) {

749 
	g¸óãd_edge
<
	gEdgeD©aTy≥
> * 
	gedge
 = 
buf„r_f‹_wödow
[
ebi
];

750 i‡(
	gedge
->
	g§c
 >
wödow_°
 && 
edge
->
§c
 <
wödow_í
) {

751 
vîti˚s
[
edge
->
§c
-
wödow_°
].
add_ouãdge
”dge->
d°
, &edge->
d©a
, 
Ál£
);

755 
	gthis
->
	giomgr
->
waô_f‹_ªads
();

758 
	g°d
::
ve˘‹
<> 
adju°ed_cou¡s
(
vîti˚s
.
size
(), 0);

759 
	giv
=0; iv< ()
	gvîti˚s
.
size
(); iv++Ë
	gadju°ed_cou¡s
[
iv
] = 
vîti˚s
[iv].
outc
;

761 i‡(
	gouç¨ts
 == 2) {

763 
iv
=0; 
	giv
< ()
	gvîti˚s
.
size
(); iv++) {

764 
	gsvîãx_t
 &
	gvîãx
 = 
vîti˚s
[
iv
];

765 
	gi
=0; i<
	gvîãx
.
	goutc
; i++) {

766 i‡(!(
	gvîãx
.
ouãdge
(
i
)->
	gvîãxid
 >
•lô°¨t
 && 
vîãx
.ouãdge(i)->
vîãxid
 <
•lôíd
)) {

767 
adju°ed_cou¡s
[
iv
]--;

773 #ifde‡
SUPPORT_DELETIONS


775 
	giv
=0; iv< ()
	gvîti˚s
.
size
(); iv++) {

776 
	gsvîãx_t
 &
	gvîãx
 = 
vîti˚s
[
iv
];

777 
	gi
=0; i<
	gvîãx
.
	goutc
; i++) {

778 i‡(
is_dñëed_edge_vÆue
(
vîãx
.
ouãdge
(
i
)->
gë_d©a
())) {

779 
	gadju°ed_cou¡s
[
iv
]--;

780 
as£π
(
Ál£
);

789 
size_t
 
	g√
 = 0;

790 
vid_t
 
	gcurvid
=
wödow_°
; curvid<=
wödow_í
;) {

791 
	giv
 = 
curvid
 - 
wödow_°
;

792 
	gsvîãx_t
 &
	gvîãx
 = 
vîti˚s
[
iv
];

793 
	gcou¡
 = 
adju°ed_cou¡s
[
iv
];

794 i‡(
	gcou¡
 == 0) {

796 
nz
=0;

797 
	gcurvid
++;

798 ; 
	gcurvid
 <
wödow_í
 && 
nz
<254; curvid++) {

799 i‡(
	gadju°ed_cou¡s
[
curvid
 - 
wödow_°
] == 0) {

800 
nz
++;

805 
uöt8_t
 
	g¬z
 = (uöt8_t)
nz
;

807 
	gbwrôe
<
	guöt8_t
>(
	gf
, 
	gbuf
, 
	gbuÂå
, 0);

808 
	gbwrôe
<
	guöt8_t
>(
	gf
, 
	gbuf
, 
	gbuÂå
, 
	g¬z
);

812 i‡(
	gedgecou¡î
 - 
	gœ°_ödex_ouçut
 >
ödex_öãrvÆ_edges
) {

813 
size_t
 
curÂos
 = 
cuødjfûïos
;

814 
sh¨d_ödex
 
sidx
(
curvid
, 
curÂos
, 
edgecou¡î
);

815 
size_t
 
	ga
 = 
wrôe
(
idxf
, &
sidx
, (
sh¨d_ödex
));

816 
as£π
(
a
>0);

817 
	gœ°_ödex_ouçut
 = 
edgecou¡î
;

821 i‡(
	gcou¡
 < 255) {

822 
uöt8_t
 
	gx
 = (uöt8_t)
cou¡
;

823 
	gbwrôe
<
	guöt8_t
>(
	gf
, 
	gbuf
, 
	gbuÂå
, 
	gx
);

825 
	gbwrôe
<
	guöt8_t
>(
	gf
, 
	gbuf
, 
	gbuÂå
, 0xff);

826 
	gbwrôe
<
	guöt32_t
>(
	gf
, 
	gbuf
, 
	gbuÂå
, (uöt32_t)
	gcou¡
);

829 
	gi
=0; i<
	gvîãx
.
	goutc
; i++) {

830 i‡(
	gvîãx
.
ouãdge
(
i
)->
	gvîãxid
 >
•lô°¨t
 && 
vîãx
.ouãdge(i)->
vîãxid
 <
•lôíd
) {

831 #ifde‡
SUPPORT_DELETIONS


832 i‡(
is_dñëed_edge_vÆue
(
vîãx
.
ouãdge
(
i
)->
gë_d©a
())) {

833 
as£π
(
Ál£
);

837 
bwrôe
(
f
, 
buf
, 
buÂå
, 
vîãx
.
ouãdge
(
i
)->
vîãxid
);

838 
	gbwrôe_ed©a
<
	gEdgeD©aTy≥
>(
	gebuf
, 
	gebuÂå
, 
	gvîãx
.
ouãdge
(
i
)->
gë_d©a
(), 
	gtŸ_ed©abyãs
, 
	goutfûe_ed©a
);

839 
	g√
++;

840 
	gedgecou¡î
++;

841 } 
as£π
(
ouç¨ts
 == 2);

843 
	gcurvid
++;

846 
‰ì
(
ed©a
);

847 
	gwödow_°
 = 
wödow_í
+1;

853 
wrôó
(
f
, 
buf
, 
buÂå
-buf);

855 
	ged©a_Êush
<
	gEdgeD©aTy≥
>(
	gebuf
, 
	gebuÂå
, 
	goutfûe_ed©a
, 
	gtŸ_ed©abyãs
);

858 
	g°d
::
°rög
 
sizefûíame
 = 
outfûe_ed©a
 + ".size";

859 
	g°d
::
of°ªam
 
ofs
(
sizefûíame
.
c_°r
());

860 
	gofs
 << 
	gtŸ_ed©abyãs
;

861 
	gofs
.
˛o£
();

864 
‰ì
(
buf
);

865 
‰ì
(
ebuf
);

867 
dñëe
 
	gcursh¨d
;

868 
˛o£
(
f
);

869 
˛o£
(
ef
);

870 
˛o£
(
idxf
);

872 
	gthis
->
	giomgr
->
waô_f‹_wrôes
();

876 
	g°d
::
°rög
 
ﬁd_fûe_adj
 = 
fûíame_sh¨d_adj
(
this
->
ba£_fûíame
, 0, 0Ë+ ".dyngøph" + 
	gsh¨d_suffi˚s
[
sh¨d
];

877 
	g°d
::
°rög
 
ﬁd_fûe_ed©a
 = 
fûíame_sh¨d_ed©a
<
EdgeD©aTy≥
>(
this
->
ba£_fûíame
, 0, 0Ë+ ".dyngøph" + 
	gsh¨d_suffi˚s
[
sh¨d
];

878 
	g°d
::
°rög
 
ﬁd_blockdú
 = 
dú«me_sh¨d_ed©a_block
(
ﬁd_fûe_ed©a
, 
ba£_ígöe
::
blocksize
);

879 
	g°d
::
°rög
 
ﬁd_fûe_adj_idx
 = 
fûíame_sh¨d_adjidx
(
ﬁd_fûe_adj
);

880 
ªmove
(
ﬁd_fûe_adj
.
c_°r
());

881 
ªmove
(
ﬁd_blockdú
.
c_°r
());

882 
ªmove
(
ﬁd_fûe_adj_idx
.
c_°r
());

884 
	g°d
::
°rög
 
ﬁd_sizefûíame
 = 
ﬁd_fûe_ed©a
 + ".size";

885 
ªmove
(
ﬁd_sizefûíame
.
c_°r
());

889 
	gsh¨d
=0; sh¨d < 
	gthis
->
	gnsh¨ds
; shard++) {

890 i‡(
	gwas_commôed
[
sh¨d
]) {

891 
	gwö
=0; wö < 
	gthis
->
	gnsh¨ds
; win++) {

892 
	gedge_buf„r
 &
	gbuf„r_f‹_wödow
 = *
√w_edge_buf„rs
[
sh¨d
][
wö
];

893 
	gebi
=0;Ébi<
	gbuf„r_f‹_wödow
.
size
();Ébi++) {

894 
	g¸óãd_edge
<
	gEdgeD©aTy≥
> * 
	gedge
 = 
buf„r_f‹_wödow
[
ebi
];

895 i‡(!
	gedge
->
	gaccou¡ed_f‹_outc
) {

896 
	g°d
::
cout
 << "EdgênŸáccou¡ed (out)! " << 
edge
->
§c
 << " -- " <<Édge->
d°
 << 
°d
::
ídl
;

898 i‡(!
	gedge
->
	gaccou¡ed_f‹_öc
) {

899 
	g°d
::
cout
 << "EdgênŸáccou¡ed (ö)! " << 
edge
->
§c
 << " -- " <<Édge->
d°
 << 
°d
::
ídl
;

902 
as£π
(
edge
->
accou¡ed_f‹_öc
);

903 
as£π
(
edge
->
accou¡ed_f‹_outc
);

905 
	gbuf„r_f‹_wödow
.
˛ór
();

911 
	gœ°_commô
 = 
added_edges
;

912 
	gthis
->
	göãrvÆs
 = 
√wønges
;

913 
	gsh¨d_suffi˚s
 = 
√wsuffi˚s
;

914 
	gthis
->
	gnsh¨ds
 = (Ë
this
->
öãrvÆs
.
size
();

917 i‡(
	gøngesch™ged
) {

918 
	gsh¨dlock
.
lock
();

919 
	gi
=0; i<()
	gthis
->
	g¶idög_sh¨ds
.
size
(); i++) {

920 i‡(
	gthis
->
	g¶idög_sh¨ds
[
i
] !
NULL
Ë
dñëe
 
this
->
¶idög_sh¨ds
[i];

922 
	gthis
->
	g¶idög_sh¨ds
.
˛ór
();

923 
	gsh¨dlock
.
u∆ock
();

926 
	g°d
::
°rög
 
numv_fûíame
 = 
ba£_ígöe
::
ba£_fûíame
 + ".numvertices";

927 
FILE
 * 
	gf
 = 
f›í
(
numv_fûíame
.
c_°r
(), "w");

928 
Ârötf
(
f
, "%lu\n", 
ba£_ígöe
::
num_vîti˚s
());

929 
f˛o£
(
f
);

931 
öô_buf„rs
();

932 
	gthis
->
	gmodifiˇti⁄_lock
.
u∆ock
();

936 
	gãm∂©e
 <
ty≥«me
 
	gT
>

937 
bwrôe
(
f
, * 
buf
, * &
buÂå
, 
T
 
vÆ
) {

938 
	gcuødjfûïos
 +(
T
);

939 i‡(
	gbuÂå
+(
	gT
)-
	gbuf
>=
BBUF
) {

940 
wrôó
(
f
, 
buf
, 
buÂå
-buf);

941 
	gbuÂå
 = 
buf
;

943 *((
	gT
*)
	gbuÂå
Ë
vÆ
;

944 
	gbuÂå
 +(
T
);

948 
	gãm∂©e
 <
ty≥«me
 
	gT
>

949 
ed©a_Êush
(* 
buf
, * 
buÂå
, 
°d
::
°rög
 & 
sh¨d_fûíame
, 
size_t
 
tŸbyãs
) {

950 
	gblockid
 = (Ë((
tŸbyãs
 - (
T
)Ë/ 
ba£_ígöe
::
blocksize
);

951 
	gÀn
 = (Ë(
buÂå
 - 
buf
);

952 
as£π
(
Àn
 <()
ba£_ígöe
::
blocksize
);

954 
	g°d
::
°rög
 
block_fûíame
 = 
fûíame_sh¨d_ed©a_block
(
sh¨d_fûíame
, 
blockid
, 
ba£_ígöe
::
blocksize
);

955 
	gf
 = 
›í
(
block_fûíame
.
c_°r
(), 
O_RDWR
 | 
O_CREAT
, 
S_IROTH
 | 
S_IWOTH
 | 
S_IWUSR
 | 
S_IRUSR
);

956 
wrôe_com¥es£d
(
f
, 
buf
, 
Àn
);

957 
˛o£
(
f
);

960 
	gãm∂©e
 <
ty≥«me
 
	gT
>

961 
bwrôe_ed©a
(* 
buf
, * &
buÂå
, 
T
 
vÆ
, 
size_t
 & 
tŸbyãs
, 
°d
::
°rög
 & 
sh¨d_fûíame
) {

962 i‡((Ë(
buÂå
 + (
T
Ë- 
buf
Ë> ()
ba£_ígöe
::
blocksize
) {

963 
ed©a_Êush
<
T
>(
buf
, 
	gbuÂå
, 
	gsh¨d_fûíame
, 
	gtŸbyãs
);

964 
	gbuÂå
 = 
buf
;

966 
	gtŸbyãs
 +(
T
);

967 *((
	gT
*)
	gbuÂå
Ë
vÆ
;

968 
	gbuÂå
 +(
T
);

976 
	gpublic
:

977 
°d
::
°rög
 
gë_öfo_js⁄
() {

978 
°d
::
°rög°ªam
 
js⁄
;

980 
	gthis
->
	ghâ∂ock
.
lock
();

985 
	gjs⁄
 << "{";

986 
	gjs⁄
 << "\"°©e\" : \"" << 
	g°©e
 << "\",\n";

987 
	gjs⁄
 << "\"fûe\" : \"" << 
	gthis
->
	gba£_fûíame
 << "\",\n";

988 
	gjs⁄
 << "\"numOfSh¨ds\": " << 
	gthis
->
	gnsh¨ds
 << ",\n";

989 
	gjs⁄
 << "\"ôî©i⁄\": " << 
	gthis
->
	gchic⁄ãxt
.
	gôî©i⁄
 << ",\n";

990 
	gjs⁄
 << "\"numIãøti⁄s\": " << 
	gthis
->
	gchic⁄ãxt
.
	gnum_ôî©i⁄s
 << ",\n";

991 
	gjs⁄
 << "\"runTime\": " << 
	gthis
->
	gchic⁄ãxt
.
ru¡ime
() << ",\n";

993 
	gjs⁄
 << "\"upd©es\": " << 
	gthis
->
	gnupd©es
 << ",\n";

994 
	gjs⁄
 << "\"nvîti˚s\": " << 
	gthis
->
	gchic⁄ãxt
.
	gnvîti˚s
 << ",\n";

995 
	gjs⁄
 << "\"edges\": " << 
num_edges_ß„
() << ",\n";

997 
	gjs⁄
 << "\"edgesInBuf„rs\": " << 
	gadded_edges
 << ",\n";

999 
	gjs⁄
 << "\"öãrvÆ\":" << 
	gthis
->
	gexec_öãrvÆ
 << ",\n";

1000 
	gjs⁄
 << "\"wödowSèπ\":" << 
	gthis
->
	gsub_öãrvÆ_°
 << ",";

1001 
	gjs⁄
 << "\"wödowEnd\": " << 
	gthis
->
	gsub_öãrvÆ_í
 << ",";

1002 
	gjs⁄
 << "\"shards\": [";

1005 
	gsh¨dlock
.
lock
();

1006 
	gp
=0;Ö < (Ë
	gthis
->
	g¶idög_sh¨ds
.
size
();Ö++) {

1007 i‡(
	gp
>0Ë
	gjs⁄
 << ",";

1009 
ty≥«me
 
	gba£_ígöe
::
¶idögsh¨d_t
 * 
sh¨d
 = 
this
->
¶idög_sh¨ds
[
p
];

1010 i‡(
	gsh¨d
 !
NULL
) {

1011 
js⁄
 << "{";

1012 
	gjs⁄
 << "\"p\": " << 
	gp
 << ", ";

1013 
	gjs⁄
 << 
	gsh¨d
->
gë_öfo_js⁄
();

1014 
	gjs⁄
 << "}";

1016 
	gjs⁄
 << "{";

1017 
	gjs⁄
 << "\"p\": " << 
	gp
 << ", ";

1018 
	gjs⁄
 << "\"state\": \"recreated\"";

1019 
	gjs⁄
 << "}";

1022 
	gsh¨dlock
.
u∆ock
();

1024 
	gjs⁄
 << "]";

1026 
	g°d
::
m≠
<
°d
::
°rög
, std::°rög>::
ôî©‹
 
ô
;

1027 
	gô
=
this
->
js⁄_∑øms
.
begö
(); ià!this->js⁄_∑øms.
íd
(); ++it) {

1028 
	gjs⁄
 << ", \"" << 
	gô
->
	gfú°
 << "\":\"";

1029 
	gjs⁄
 << 
	gô
->
	g£c⁄d
 << "\"";

1032 
	gjs⁄
 << "}";

1034 
	gthis
->
	ghâ∂ock
.
u∆ock
();

1035  
	gjs⁄
.
°r
();

	@engine/functional/functional_engine.hpp

32 #i‚de‡
GRAPHCHI_FUNCTIONALENGINE_DEF


33 
	#GRAPHCHI_FUNCTIONALENGINE_DEF


	)

35 
	~"ígöe/gøphchi_ígöe.hµ
"

36 
	~"loggî/loggî.hµ
"

38 
«me•a˚
 
	ggøphchi
 {

40 
	gãm∂©e
 <
ty≥«me
 
	gVîãxD©aTy≥
,Åy≥«mê
	gEdgeD©aTy≥
,Åy≥«mê
	gfvîãx_t
>

41 
˛ass
 
	gfun˘i⁄Æ_ígöe
 : 
public
 
gøphchi_ígöe
<
VîãxD©aTy≥
, 
	gEdgeD©aTy≥
, 
	gfvîãx_t
> {

42 
	gpublic
:

43 
fun˘i⁄Æ_ígöe
(
°d
::
°rög
 
ba£_fûíame
, 
nsh¨ds
, 
boﬁ
 
£À˘ive_schedulög
, 
mërics
 &
_m
) :

44 
gøphchi_ígöe
<
VîãxD©aTy≥
, 
	gEdgeD©aTy≥
, 
	gfvîãx_t
>(
	gba£_fûíame
, 
	gnsh¨ds
, 
	g£À˘ive_schedulög
, 
	g_m
){

45 
	g_m
.
£t
("engine", "functional");

48 
	g¥Ÿe˘ed
:

50 
vútuÆ
 
lﬂd_bef‹e_upd©es
(
°d
::
ve˘‹
<
fvîãx_t
> &
vîti˚s
) {

51 
log°ªam
(
LOG_DEBUG
Ë<< "Pro˚ssög in-edges." << 
°d
::
ídl
;

53 i‡(!
	gthis
->
	gmem‹ysh¨d
->
lﬂded
()) {

54 
	gthis
->
	gmem‹ysh¨d
->
lﬂd
();

58 
	gthis
->
	gmem‹ysh¨d
->
lﬂd_vîti˚s
(
this
->
sub_öãrvÆ_°
,Åhis->
sub_öãrvÆ_í
, 
vîti˚s
, 
åue
, 
Ál£
);

61 
	gthis
->
	gvîãx_d©a_h™dÀr
->
lﬂd
(
this
->
sub_öãrvÆ_°
,Åhis->
sub_öãrvÆ_í
);

64 
	gthis
->
	giomgr
->
waô_f‹_ªads
();

69 
vútuÆ
 
boﬁ
 
is_ömem‹y_mode
() {

70  
	gÁl£
;

74 
vútuÆ
 
öô_vîti˚s
(
°d
::
ve˘‹
<
fvîãx_t
> &
vîti˚s
, 
gøphchi_edge
<
EdgeD©aTy≥
> * &
e
) {

75 
size_t
 
	gnvîti˚s
 = 
vîti˚s
.
size
();

78 
size_t
 
	gnum_edges
 = 
this
->
num_edges_suböãrvÆ
—his->
sub_öãrvÆ_°
,Åhis->
sub_öãrvÆ_í
);

81 
size_t
 
	gecou¡î
 = 0;

82 
	gi
=0; i < ()
	gnvîti˚s
; i++) {

83 
degªe
 
	gd
 = 
this
->
degªe_h™dÀr
->
gë_degªe
—his->
sub_öãrvÆ_°
 + 
i
);

84 
	göc
 = 
d
.
ödegªe
;

85 
	goutc
 = 
d
.
outdegªe
;

86 
	gvîti˚s
[
i
] = 
fvîãx_t
(
this
->
chic⁄ãxt
,Åhis->
sub_öãrvÆ_°
 + i, 
öc
, 
outc
);

88 i‡(
	gthis
->
	gscheduÀr
 !
NULL
) {

89 
boﬁ
 
is_sched
 = 
this
->
scheduÀr
->
is_scheduÀd
—his->
sub_öãrvÆ_°
 + 
i
);

90 i‡(
	gis_sched
) {

91 
	gvîti˚s
[
i
].
	gscheduÀd
 = 
åue
;

92 
	gthis
->
	gnupd©es
++;

93 
	gecou¡î
 +
öc
 + 
outc
;

96 
	gthis
->
	gnupd©es
++;

97 
	gvîti˚s
[
i
].
	gscheduÀd
 = 
åue
;

98 
	gecou¡î
 +
öc
 + 
outc
;

101 
	gthis
->
	gw‹k
 +
num_edges
;

106 
vútuÆ
 
lﬂd_a·î_upd©es
(
°d
::
ve˘‹
<
fvîãx_t
> &
vîti˚s
) {

107 
log°ªam
(
LOG_DEBUG
Ë<< "Pro˚ssög out-edge†(brﬂdˇ°)." << 
°d
::
ídl
;

108 
omp_£t_num_thªads
(
this
->
lﬂd_thªads
);

109 #¥agm®
omp
 
∑øŒñ
 
scheduÀ
(
dy«mic
, 1)

110 
	gp
=0;Ö < 
	gthis
->
	gnsh¨ds
;Ö++) {

112 i‡(
	gp
 !
this
->
exec_öãrvÆ
) {

113 
this
->
¶idög_sh¨ds
[
p
]->
ªad_√xt_vîti˚s
(
vîti˚s
.
size
(),Åhis->
sub_öãrvÆ_°
, vertices,

114 
this
->
scheduÀr
 !
NULL
 &&Åhis->
ôî
 == 0);

117 
	gthis
->
	gmem‹ysh¨d
->
lﬂd_vîti˚s
(
this
->
sub_öãrvÆ_°
,Åhis->
sub_öãrvÆ_í
, 
vîti˚s
, 
Ál£
, 
åue
);

	@engine/graphchi_engine.hpp

29 #i‚de‡
DEF_GRAPHCHI_GRAPHCHI_ENGINE


30 
	#DEF_GRAPHCHI_GRAPHCHI_ENGINE


	)

33 
	~<io°ªam
>

34 
	~<f°ªam
>

35 
	~<s°ªam
>

36 
	~<c°dio
>

37 
	~<f˙é.h
>

38 
	~<uni°d.h
>

39 
	~<as£π.h
>

40 
	~<omp.h
>

41 
	~<ve˘‹
>

42 
	~<sys/time.h
>

44 
	~"≠i/chifûíames.hµ
"

45 
	~"≠i/gøph_obje˘s.hµ
"

46 
	~"≠i/gøphchi_c⁄ãxt.hµ
"

47 
	~"≠i/gøphchi_¥ogøm.hµ
"

48 
	~"ígöe/auxd©a/degªe_d©a.hµ
"

49 
	~"ígöe/auxd©a/vîãx_d©a.hµ
"

50 
	~"ígöe/bô£t_scheduÀr.hµ
"

51 
	~"io/°rùedio.hµ
"

52 
	~"loggî/loggî.hµ
"

53 
	~"mërics/mërics.hµ
"

54 
	~"sh¨ds/mem‹ysh¨d.hµ
"

55 
	~"sh¨ds/¶idögsh¨d.hµ
"

56 
	~"utû/±hªad_toﬁs.hµ
"

57 
	~"ouçut/ouçut.hµ
"

59 
«me•a˚
 
	ggøphchi
 {

62 
	gãm∂©e
 <
ty≥«me
 
	gVîãxD©aTy≥
,Åy≥«mê
	gEdgeD©aTy≥
,

63 
ty≥«me
 
	gsvîãx_t
 = 
gøphchi_vîãx
<
VîãxD©aTy≥
, 
	gEdgeD©aTy≥
> >

65 ˛as†
	cgøphchi_ígöe
 {

66 
	gpublic
:

67 
¶idög_sh¨d
<
	tVîãxD©aTy≥
, 
	tEdgeD©aTy≥
, 
	tsvîãx_t
> 
	t¶idögsh¨d_t
;

68 
	gmem‹y_sh¨d
<
	tVîãxD©aTy≥
, 
	tEdgeD©aTy≥
, 
	tsvîãx_t
> 
	tmemsh¨d_t
;

70 
	g¥Ÿe˘ed
:

71 
°d
::
°rög
 
ba£_fûíame
;

72 
	gnsh¨ds
;

75 
°rùedio
 * 
	giomgr
;

78 
	g°d
::
ve˘‹
<
¶idögsh¨d_t
 *> 
¶idög_sh¨ds
;

79 
memsh¨d_t
 * 
	gmem‹ysh¨d
;

80 
	g°d
::
ve˘‹
<
°d
::
∑ú
<
vid_t
, 
	gvid_t
> > 
	göãrvÆs
;

83 
degªe_d©a
 * 
	gdegªe_h™dÀr
;

84 
	gvîãx_d©a_°‹e
<
	gVîãxD©aTy≥
> * 
	gvîãx_d©a_h™dÀr
;

87 
gøphchi_c⁄ãxt
 
	gchic⁄ãxt
;

90 
bô£t_scheduÀr
 * 
	gscheduÀr
;

93 
boﬁ
 
	gmodifõs_ouãdges
;

94 
boﬁ
 
	gmodifõs_öedges
;

95 
boﬁ
 
	gdißbÀ_ouãdges
;

96 
boﬁ
 
	g⁄ly_adja˚ncy
;

97 
boﬁ
 
	gu£_£À˘ive_schedulög
;

98 
boﬁ
 
	gíabÀ_dëîmöi°ic_∑øŒñism
;

99 
boﬁ
 
	g°‹e_öedges
;

100 
boﬁ
 
	gdißbÀ_vîãxd©a_°‹age
;

102 
boﬁ
 
	gøndomiz©i⁄
;

103 
boﬁ
 
	göôülize_edges_bef‹e_run
;

105 
size_t
 
	gblocksize
;

106 
	gmembudgë_mb
;

107 
	glﬂd_thªads
;

108 
	gexec_thªads
;

111 
vid_t
 
	gsub_öãrvÆ_°
;

112 
vid_t
 
	gsub_öãrvÆ_í
;

113 
	gôî
;

114 
	gnôîs
;

115 
	gexec_öãrvÆ
;

116 
size_t
 
	gnupd©es
;

117 
size_t
 
	g√dges
;

118 
size_t
 
	gw‹k
;

119 
	gmaxwödow
;

120 
muãx
 
	gmodifiˇti⁄_lock
;

122 
boﬁ
 
	gª£t_vîãxd©a
;

123 
boﬁ
 
	gßve_edgesfûes_a·î_ömemmode
;

126 
	g°d
::
ve˘‹
<
iouçut
<
VîãxD©aTy≥
, 
	gEdgeD©aTy≥
> *> 
	gouçuts
;

129 
	gmërics
 &
	gm
;

131 
¥öt_c⁄fig
() {

132 
log°ªam
(
LOG_INFO
Ë<< "Engöêc⁄figuøti⁄: " << 
	g°d
::
ídl
;

133 
log°ªam
(
LOG_INFO
Ë<< "Éxec_thªad†" << 
	gexec_thªads
 << 
	g°d
::
ídl
;

134 
log°ªam
(
LOG_INFO
Ë<< "Üﬂd_thªad†" << 
	glﬂd_thªads
 << 
	g°d
::
ídl
;

135 
log°ªam
(
LOG_INFO
Ë<< " membudgë_mb = " << 
	gmembudgë_mb
 << 
	g°d
::
ídl
;

136 
log°ªam
(
LOG_INFO
Ë<< " blocksizê" << 
	gblocksize
 << 
	g°d
::
ídl
;

137 
log°ªam
(
LOG_INFO
Ë<< " scheduÀ∏" << 
	gu£_£À˘ive_schedulög
 << 
	g°d
::
ídl
;

140 
	gpublic
:

148 
gøphchi_ígöe
(
°d
::
°rög
 
_ba£_fûíame
, 
_nsh¨ds
, 
boﬁ
 
_£À˘ive_schedulög
, 
mërics
 &
_m
Ë: 
ba£_fûíame
(_ba£_fûíame), 
nsh¨ds
(_nsh¨ds), 
u£_£À˘ive_schedulög
(_£À˘ive_schedulög), 
m
(_m) {

150 
	gm
.
°¨t_time
("iomgr_init");

151 
	giomgr
 = 
√w
 
°rùedio
(
m
);

152 
	gm
.
°›_time
("iomgr_init");

153 #i‚de‡
DYNAMICEDATA


154 
log°ªam
(
LOG_INFO
Ë<< "Inôülizög gøphchi_ígöe. Thi†ígöêex≥˘†" << (
	gEdgeD©aTy≥
)

155 << "-byãÉdgêd©a. " << 
	g°d
::
ídl
;

157 
log°ªam
(
LOG_INFO
) << "Initializing graphchi_engine with dynamicÉdge-data. ThisÉngineÉxpects " << ()

158 << "-byãÉdgêd©a. " << 
	g°d
::
ídl
;

162 i‡(
	gnsh¨ds
 < 1) {

163 
	gnsh¨ds
 = 
gë_›ti⁄_öt
("nshards", 0);

164 i‡(
	gnsh¨ds
 < 1) {

165 
log°ªam
(
LOG_WARNING
Ë<< "Numbî o‡sh¨d†wa†nŸ s≥cifõd (comm™d-löê¨gumíà'nsh¨ds'). TryögÅÿdëe˘. " << 
	g°d
::
ídl
;

166 
	gnsh¨ds
 = 
discovî_sh¨d_num
();

171 
	gmem‹ysh¨d
 = 
NULL
;

172 
	gmodifõs_ouãdges
 = 
åue
;

173 
	gmodifõs_öedges
 = 
åue
;

174 
	gßve_edgesfûes_a·î_ömemmode
 = 
Ál£
;

176 
	g⁄ly_adja˚ncy
 = 
Ál£
;

177 
	gdißbÀ_ouãdges
 = 
Ál£
;

178 
	gª£t_vîãxd©a
 = 
Ál£
;

179 
	göôülize_edges_bef‹e_run
 = 
Ál£
;

180 
	gblocksize
 = 1024 * 1024;

181 #i‚de‡
DYNAMICEDATA


182 
	gblocksize
 % (
	gEdgeD©aTy≥
Ë!0Ë
blocksize
++;

185 
	gdißbÀ_vîãxd©a_°‹age
 = 
Ál£
;

187 
	gmembudgë_mb
 = 
gë_›ti⁄_öt
("membudget_mb", 1024);

188 
	gnupd©es
 = 0;

189 
	gôî
 = 0;

190 
	gw‹k
 = 0;

191 
	g√dges
 = 0;

192 
	gscheduÀr
 = 
NULL
;

193 
	g°‹e_öedges
 = 
åue
;

194 
	gdegªe_h™dÀr
 = 
NULL
;

195 
	gvîãx_d©a_h™dÀr
 = 
NULL
;

196 
	gíabÀ_dëîmöi°ic_∑øŒñism
 = 
åue
;

197 
	glﬂd_thªads
 = 
gë_›ti⁄_öt
("loadthreads", 2);

198 
	gexec_thªads
 = 
gë_›ti⁄_öt
("exe˘hªads", 
omp_gë_max_thªads
());

199 
	gmaxwödow
 = 40000000;

202 
_lﬂd_vîãx_öãrvÆs
();

204 
	g_m
.
£t
("fûe", 
_ba£_fûíame
);

205 
	g_m
.
£t
("engine", "default");

206 
	g_m
.
£t
("nsh¨ds", (
size_t
)
nsh¨ds
);

209 
	gvútuÆ
 ~
gøphchi_ígöe
() {

210 i‡(
	gdegªe_h™dÀr
 !
NULL
Ë
dñëe
 
degªe_h™dÀr
;

211 i‡(
	gvîãx_d©a_h™dÀr
 !
NULL
Ë
dñëe
 
vîãx_d©a_h™dÀr
;

212 i‡(
	gmem‹ysh¨d
 !
NULL
) {

213 
dñëe
 
mem‹ysh¨d
;

214 
	gmem‹ysh¨d
 = 
NULL
;

216 
	gi
=0; i < ()
	g¶idög_sh¨ds
.
size
(); i++) {

217 i‡(
	g¶idög_sh¨ds
[
i
] !
NULL
) {

218 
dñëe
 
¶idög_sh¨ds
[
i
];

220 
	g¶idög_sh¨ds
[
i
] = 
NULL
;

222 
	gdegªe_h™dÀr
 = 
NULL
;

223 
	gvîãx_d©a_h™dÀr
 = 
NULL
;

224 
dñëe
 
	giomgr
;

229 
	g¥Ÿe˘ed
:

231 
vútuÆ
 
degªe_d©a
 * 
¸óã_degªe_h™dÀr
() {

232  
√w
 
degªe_d©a
(
ba£_fûíame
, 
iomgr
);

241 
discovî_sh¨d_num
() {

242 #i‚de‡
DYNAMICEDATA


243 
	g_nsh¨ds
 = 
föd_sh¨ds
<
EdgeD©aTy≥
>(
ba£_fûíame
);

245 
	g_nsh¨ds
 = 
föd_sh¨ds
<>(
ba£_fûíame
);

247 i‡(
	g_nsh¨ds
 == 0) {

248 
log°ªam
(
LOG_ERROR
Ë<< "CouldÇŸ föd suôabÀ sh¨d†- maybêyouÇìdÅÿru¿sh¨dîÅÿ¸óãÅhem?" << 
°d
::
ídl
;

249 
log°ªam
(
LOG_ERROR
Ë<< "Wa†lookög wôh fûíamê[" << 
	gba£_fûíame
 << "]" << 
	g°d
::
ídl
;

250 
log°ªam
(
LOG_ERROR
Ë<< "YouÇìdÅÿ¸óãÅhêsh¨d†wôhÉdgêd©a-ty≥ o‡sizê" << (
	gEdgeD©aTy≥
Ë<< " byãs." << 
	g°d
::
ídl
;

251 
log°ªam
(
LOG_ERROR
Ë<< "Tÿ•ecifyÅhênumbî o‡sh¨ds, u£ comm™d-löê∑ømëî 'nsh¨ds'" << 
	g°d
::
ídl
;

252 
as£π
(0);

254  
	g_nsh¨ds
;

258 
vútuÆ
 
öôülize_¶idög_sh¨ds
() {

259 
as£π
(
¶idög_sh¨ds
.
size
() == 0);

260 
	gp
=0;Ö < 
	gnsh¨ds
;Ö++) {

261 #i‚de‡
DYNAMICEDATA


262 
	g°d
::
°rög
 
ed©a_fûíame
 = 
fûíame_sh¨d_ed©a
<
EdgeD©aTy≥
>(
ba£_fûíame
, 
	gp
, 
	gnsh¨ds
);

263 
	g°d
::
°rög
 
adj_fûíame
 = 
fûíame_sh¨d_adj
(
ba£_fûíame
, 
p
, 
nsh¨ds
);

265 
	g°d
::
°rög
 
ed©a_fûíame
 = 
fûíame_sh¨d_ed©a
<>(
ba£_fûíame
, 
	gp
, 
	gnsh¨ds
);

266 
	g°d
::
°rög
 
adj_fûíame
 = 
fûíame_sh¨d_adj
(
ba£_fûíame
, 
p
, 
nsh¨ds
);

270 
	g¶idög_sh¨ds
.
push_back
(

271 
√w
 
¶idögsh¨d_t
(
iomgr
, 
ed©a_fûíame
,

272 
adj_fûíame
,

273 
öãrvÆs
[
p
].
fú°
,

274 
öãrvÆs
[
p
].
£c⁄d
,

275 
blocksize
,

276 
m
,

277 !
modifõs_ouãdges
,

278 
⁄ly_adja˚ncy
));

279 i‡(!
	g⁄ly_adja˚ncy
)

280 
	g√dges
 +
¶idög_sh¨ds
[¶idög_sh¨ds.
size
(Ë- 1]->
num_edges
();

285 
vútuÆ
 
öôülize_scheduÀr
() {

286 i‡(
	gu£_£À˘ive_schedulög
) {

287 i‡(
	gscheduÀr
 !
NULL
Ë
dñëe
 
scheduÀr
;

288 
	gscheduÀr
 = 
√w
 
bô£t_scheduÀr
((Ë
num_vîti˚s
());

289 
	gscheduÀr
->
add_èsk_to_Æl
();

291 
	gscheduÀr
 = 
NULL
;

299 
vútuÆ
 
boﬁ
 
is_ömem‹y_mode
() {

300  (
	gnsh¨ds
 =1 && 
num_vîti˚s
(Ë< 2 * 
maxwödow
);

307 
vútuÆ
 
vid_t
 
dëîmöe_√xt_wödow
(vid_à
iöãrvÆ
, vid_à
‰omvid
, vid_à
maxvid
, 
size_t
 
membudgë
) {

309 
	gdegªe_h™dÀr
->
lﬂd
(
‰omvid
, 
maxvid
);

312 i‡(
is_ömem‹y_mode
(Ë|| 
svîãx_t
().
compuèti⁄Æ_edges
()) {

313  
	gmaxvid
;

315 
size_t
 
	gmemªq
 = 0;

316 
	gmax_öãrvÆ
 = 
maxvid
 - 
‰omvid
;

317 
	gi
=0; i < 
	gmax_öãrvÆ
; i++) {

318 
degªe
 
	gdeg
 = 
degªe_h™dÀr
->
gë_degªe
(
‰omvid
 + 
i
);

319 
	göc
 = 
deg
.
ödegªe
;

320 
	goutc
 = 
deg
.
outdegªe
 * (!
dißbÀ_ouãdges
);

323 
	gmemªq
 +(
svîãx_t
Ë+ ((
EdgeD©aTy≥
Ë+ (
vid_t
Ë+ (
gøphchi_edge
<EdgeD©aTy≥>))*(
outc
 + 
öc
);

324 i‡(
	gmemªq
 > 
	gmembudgë
) {

325 
log°ªam
(
LOG_DEBUG
Ë<< "Mem‹y budgëÉx˚eded wôh " << 
	gmemªq
 << " byãs." << 
	g°d
::
ídl
;

326  
	g‰omvid
 + 
	gi
 - 1;

329  
	gmaxvid
;

337 
size_t
 
num_edges_suböãrvÆ
(
vid_t
 
°
, vid_à
í
) {

338 
size_t
 
	gnum_edges
 = 0;

339 
	gnvîti˚s
 = 
í
 - 
°
 + 1;

340 i‡(
	gscheduÀr
 !
NULL
) {

341 
i
=0; 
	gi
 < 
	gnvîti˚s
; i++) {

342 
boﬁ
 
	gis_sched
 = 
scheduÀr
->
is_scheduÀd
(
°
 + 
i
);

343 i‡(
	gis_sched
) {

344 
degªe
 
	gd
 = 
degªe_h™dÀr
->
gë_degªe
(
°
 + 
i
);

345 
	gnum_edges
 +
d
.
ödegªe
 * 
°‹e_öedges
 + d.
outdegªe
;

349 
	gi
=0; i < 
	gnvîti˚s
; i++) {

350 
degªe
 
	gd
 = 
degªe_h™dÀr
->
gë_degªe
(
°
 + 
i
);

351 
	gnum_edges
 +
d
.
ödegªe
 * 
°‹e_öedges
 + d.
outdegªe
;

354  
	gnum_edges
;

357 
vútuÆ
 
lﬂd_bef‹e_upd©es
(
°d
::
ve˘‹
<
svîãx_t
> &
vîti˚s
) {

358 
omp_£t_num_thªads
(
lﬂd_thªads
);

362 #¥agm®
omp
 
∑øŒñ
 
scheduÀ
(
dy«mic
, 1)

363 
	gp
=-1;Ö < 
	gnsh¨ds
;Ö++) {

364 i‡(
	gp
==(-1)) {

366 i‡(!
mem‹ysh¨d
->
lﬂded
()) {

367 
mem‹ysh¨d
->
lﬂd
();

371 
	gmem‹ysh¨d
->
lﬂd_vîti˚s
(
sub_öãrvÆ_°
, 
sub_öãrvÆ_í
, 
vîti˚s
, 
åue
, !
dißbÀ_ouãdges
);

374 i‡(!
	gdißbÀ_vîãxd©a_°‹age
) {

375 
	gvîãx_d©a_h™dÀr
->
lﬂd
(
sub_öãrvÆ_°
, 
sub_öãrvÆ_í
);

379 i‡(!
	gdißbÀ_ouãdges
) {

380 i‡(
	gp
 !
exec_öãrvÆ
) {

381 i‡(
øndomiz©i⁄
) {

382 
¶idög_sh¨ds
[
p
]->
£t_dißbÀ_async_wrôes
(
åue
);

384 
	g¶idög_sh¨ds
[
p
]->
ªad_√xt_vîti˚s
((Ë
vîti˚s
.
size
(), 
sub_öãrvÆ_°
, vertices,

385 (
øndomiz©i⁄
 || 
scheduÀr
 !
NULL
Ë&& 
chic⁄ãxt
.
ôî©i⁄
 == 0);

393 
	giomgr
->
waô_f‹_ªads
();

396 
vútuÆ
 
exec_upd©es
(
GøphChiProgøm
<
VîãxD©aTy≥
, 
EdgeD©aTy≥
, 
svîãx_t
> &
u£Ωrogøm
,

397 
°d
::
ve˘‹
<
svîãx_t
> &
vîti˚s
) {

398 
mërics_íåy
 
me
 = 
m
.
°¨t_time
();

399 
size_t
 
	gnvîti˚s
 = 
vîti˚s
.
size
();

400 i‡(!
	gíabÀ_dëîmöi°ic_∑øŒñism
) {

401 
	gi
=0; i < ()
	gnvîti˚s
; i++Ë
	gvîti˚s
[
i
].
	g∑øŒñ_ß„
 = 
åue
;

403 
	gsub_öãrvÆ_Àn
 = 
sub_öãrvÆ_í
 - 
sub_öãrvÆ_°
;

405 
	g°d
::
ve˘‹
<
vid_t
> 
øndom_‹dî
(
øndomiz©i⁄
 ? 
sub_öãrvÆ_Àn
 + 1 : 0);

406 i‡(
	gøndomiz©i⁄
) {

408 
	gidx
=0; idx <()
sub_öãrvÆ_Àn
; idx++Ë
	gøndom_‹dî
[
idx
] = idx;

409 
	g°d
::
øndom_shufÊe
(
øndom_‹dî
.
begö
(),Ñ™dom_‹dî.
íd
());

413 
omp_£t_num_thªads
(
exec_thªads
);

415 #¥agm®
omp
 
∑øŒñ
 
£˘i⁄s


417 #¥agm®
omp
 
£˘i⁄


419 #¥agm®
omp
 
∑øŒñ
 

420 
	gidx
=0; idx <()
sub_öãrvÆ_Àn
; idx++) {

421 
vid_t
 
	gvid
 = 
sub_öãrvÆ_°
 + (
øndomiz©i⁄
 ? 
øndom_‹dî
[
idx
] : idx);

422 
	gsvîãx_t
 & 
	gv
 = 
vîti˚s
[
vid
 - 
sub_öãrvÆ_°
];

424 i‡(
	gexec_thªads
 =1 || 
v
.
∑øŒñ_ß„
) {

425 i‡(!
dißbÀ_vîãxd©a_°‹age
)

426 
v
.
d©≠å
 = 
vîãx_d©a_h™dÀr
->
vîãx_d©a_±r
(
vid
);

427 i‡(
	gv
.
	gscheduÀd
)

428 
	gu£Ωrogøm
.
upd©e
(
v
, 
chic⁄ãxt
);

432 #¥agm®
omp
 
£˘i⁄


434 i‡(
	gexec_thªads
 > 1 && 
	gíabÀ_dëîmöi°ic_∑øŒñism
) {

435 
	gn⁄ß„_cou¡
 = 0;

436 
	gidx
=0; idx <()
sub_öãrvÆ_Àn
; idx++) {

437 
vid_t
 
	gvid
 = 
sub_öãrvÆ_°
 + (
øndomiz©i⁄
 ? 
øndom_‹dî
[
idx
] : idx);

438 
	gsvîãx_t
 & 
	gv
 = 
vîti˚s
[
vid
 - 
sub_öãrvÆ_°
];

439 i‡(!
	gv
.
	g∑øŒñ_ß„
 && v.
	gscheduÀd
) {

440 i‡(!
	gdißbÀ_vîãxd©a_°‹age
)

441 
	gv
.
	gd©≠å
 = 
vîãx_d©a_h™dÀr
->
vîãx_d©a_±r
(
vid
);

442 
	gu£Ωrogøm
.
upd©e
(
v
, 
chic⁄ãxt
);

443 
	gn⁄ß„_cou¡
++;

447 
	gm
.
add
("£rülized-upd©es", 
n⁄ß„_cou¡
);

451 } 
	gu£Ωrogøm
.
ª≥©_upd©es
(
chic⁄ãxt
));

453 
	gm
.
°›_time
(
me
, "execute-updates");

465 
vútuÆ
 
exec_upd©es_ömem‹y_mode
(
GøphChiProgøm
<
VîãxD©aTy≥
, 
EdgeD©aTy≥
, 
svîãx_t
> &
u£Ωrogøm
,

466 
°d
::
ve˘‹
<
svîãx_t
> &
vîti˚s
) {

467 
w‹k
 = 
nupd©es
 = 0;

469 
	gôî
=0; iãr<
	gnôîs
; iter++) {

470 
log°ªam
(
LOG_INFO
Ë<< "In-mem‹y mode: Iãøti⁄ " << 
	gôî
 << " sèπs. (" << 
	gchic⁄ãxt
.
ru¡ime
(Ë<< " secs)" << 
	g°d
::
ídl
;

471 
	gchic⁄ãxt
.
	gôî©i⁄
 = 
ôî
;

472 i‡(
	gôî
 > 0)

473 
	gu£Ωrogøm
.
bef‹e_ôî©i⁄
(
ôî
, 
chic⁄ãxt
);

474 
	gu£Ωrogøm
.
bef‹e_exec_öãrvÆ
(0, ()
num_vîti˚s
(), 
chic⁄ãxt
);

476 i‡(
	gu£_£À˘ive_schedulög
) {

477 i‡(
	gôî
 > 0 && !
	gscheduÀr
->
	ghas_√w_èsks
) {

478 
log°ªam
(
LOG_INFO
Ë<< "Nÿ√wÅask†tÿrun!" << 
	g°d
::
ídl
;

479 
	gnôîs
 = 
ôî
;

482 
	gscheduÀr
->
√w_ôî©i⁄
(
ôî
);

484 
boﬁ
 
	g√wèsks
 = 
Ál£
;

485 
	gi
=0; i < ()
	gvîti˚s
.
size
(); i++) {

486 i‡(
	gôî
 =0 || 
scheduÀr
->
is_scheduÀd
(
i
)) {

487 
vîti˚s
[
i
].
scheduÀd
 = 
åue
;

488 
	g√wèsks
 = 
åue
;

489 
	gnupd©es
++;

490 
	gw‹k
 +
vîti˚s
[
i
].
öc
 + vîti˚s[i].
outc
;

492 
	gvîti˚s
[
i
].
	gscheduÀd
 = 
Ál£
;

495 i‡(!
	g√wèsks
) {

497 
	gnôîs
 = 
ôî
;

501 
	gscheduÀr
->
	ghas_√w_èsks
 = 
Ál£
;

503 
	gnupd©es
 +
num_vîti˚s
();

504 i‡(!
	g⁄ly_adja˚ncy
) {

505 
	gw‹k
 +
num_edges
();

509 
	gm
.
°¨t_time
("inmem-exec");

511 
exec_upd©es
(
u£Ωrogøm
, 
vîti˚s
);

513 
	gm
.
°›_time
("inmem-exec");

515 
lﬂd_a·î_upd©es
(
vîti˚s
);

517 
	gu£Ωrogøm
.
a·î_exec_öãrvÆ
(0, ()
num_vîti˚s
(), 
chic⁄ãxt
);

518 
	gu£Ωrogøm
.
a·î_ôî©i⁄
(
ôî
, 
chic⁄ãxt
);

519 i‡(
	gchic⁄ãxt
.
	gœ°_ôî©i⁄
 > 0 && chic⁄ãxt.œ°_ôî©i⁄ <
ôî
){

520 
log°ªam
(
LOG_INFO
)<<"St›pögÉngöêsö˚Üa° iãøti⁄ wa†£àto: " << 
chic⁄ãxt
.
œ°_ôî©i⁄
 << 
°d
::
ídl
;

526 i‡(
	gßve_edgesfûes_a·î_ömemmode
) {

527 
log°ªam
(
LOG_INFO
Ë<< "Savög mem‹y sh¨d..." << 
	g°d
::
ídl
;

533 
vútuÆ
 
öô_vîti˚s
(
°d
::
ve˘‹
<
svîãx_t
> &
vîti˚s
, 
gøphchi_edge
<
EdgeD©aTy≥
> * &
ed©a
) {

534 
size_t
 
	gnvîti˚s
 = 
vîti˚s
.
size
();

537 
size_t
 
	gnum_edges
 = 
num_edges_suböãrvÆ
(
sub_öãrvÆ_°
, 
sub_öãrvÆ_í
);

540 
	ged©a
 = (
gøphchi_edge
<
EdgeD©aTy≥
>*Ë
mÆloc
(
num_edges
 * (graphchi_edge<EdgeDataType>));

543 
size_t
 
	gecou¡î
 = 0;

544 
	gi
=0; i < ()
	gnvîti˚s
; i++) {

545 
degªe
 
	gd
 = 
degªe_h™dÀr
->
gë_degªe
(
sub_öãrvÆ_°
 + 
i
);

546 
	göc
 = 
d
.
ödegªe
;

547 
	goutc
 = 
d
.
outdegªe
 * (!
dißbÀ_ouãdges
);

548 
	gvîti˚s
[
i
] = 
svîãx_t
(
sub_öãrvÆ_°
 + i, &
ed©a
[
ecou¡î
],

549 &
ed©a
[
ecou¡î
 + 
öc
 * 
°‹e_öedges
], inc, 
outc
);

552 i‡(
	gdißbÀ_ouãdges
) {

553 
	gvîti˚s
[
i
].
	goutc
 = 
d
.
outdegªe
;

556 i‡(
	gscheduÀr
 !
NULL
) {

557 
boﬁ
 
is_sched
 = ( 
scheduÀr
->
is_scheduÀd
(
sub_öãrvÆ_°
 + 
i
));

558 i‡(
	gis_sched
) {

559 
	gvîti˚s
[
i
].
	gscheduÀd
 = 
åue
;

560 
	gnupd©es
++;

561 
	gecou¡î
 +
öc
 * 
°‹e_öedges
 + 
outc
;

564 
	gnupd©es
++;

565 
	gvîti˚s
[
i
].
	gscheduÀd
 = 
åue
;

566 
	gecou¡î
 +
öc
 * 
°‹e_öedges
 + 
outc
;

569 
	gw‹k
 +
ecou¡î
;

570 
as£π
(
ecou¡î
 <
num_edges
);

574 
ßve_vîti˚s
(
°d
::
ve˘‹
<
svîãx_t
> &
vîti˚s
) {

575 i‡(
dißbÀ_vîãxd©a_°‹age
) ;

576 
size_t
 
	gnvîti˚s
 = 
vîti˚s
.
size
();

577 
boﬁ
 
	gmodifõd_™y_vîãx
 = 
Ál£
;

578 
	gi
=0; i < ()
	gnvîti˚s
; i++) {

579 i‡(
	gvîti˚s
[
i
].
	gmodifõd
) {

580 
	gmodifõd_™y_vîãx
 = 
åue
;

584 i‡(
	gmodifõd_™y_vîãx
) {

585 
	gvîãx_d©a_h™dÀr
->
ßve
();

589 
vútuÆ
 
lﬂd_a·î_upd©es
(
°d
::
ve˘‹
<
svîãx_t
> &
vîti˚s
) {

593 
vútuÆ
 
wrôe_dñè_log
() {

595 
°d
::
°rög
 
dñè‚ame
 = 
iomgr
->
mu…ùÀx¥efix
(0Ë+ 
ba£_fûíame
 + ".deltalog";

596 
FILE
 * 
	gdf
 = 
f›í
(
dñè‚ame
.
c_°r
(), (
chic⁄ãxt
.
ôî©i⁄
 == 0 ? "w" : "a"));

597 
Ârötf
(
df
, "%d,%lu,%lu,%lf\n", 
chic⁄ãxt
.
ôî©i⁄
, 
nupd©es
, 
w‹k
, chic⁄ãxt.
gë_dñè
());

598 
f˛o£
(
df
);

601 
	gpublic
:

603 
vútuÆ
 
°d
::
ve˘‹
< std::
∑ú
<
vid_t
, 
	gvid_t
> > 
gë_öãrvÆs
() {

604  
	göãrvÆs
;

607 
vútuÆ
 
	g°d
::
∑ú
<
vid_t
, 
	gvid_t
> 
gë_öãrvÆ
(
i
) {

608  
	göãrvÆs
[
i
];

614 
vid_t
 
gë_öãrvÆ_°¨t
(
i
) {

615  
gë_öãrvÆ
(
i
).
	gfú°
;

621 
vid_t
 
gë_öãrvÆ_íd
(
i
) {

622  
gë_öãrvÆ
(
i
).
	g£c⁄d
;

625 
vútuÆ
 
size_t
 
num_vîti˚s
() {

626  1 + 
	göãrvÆs
[
nsh¨ds
 - 1].
	g£c⁄d
;

629 
	ggøphchi_c⁄ãxt
 &
gë_c⁄ãxt
() {

630  
	gchic⁄ãxt
;

633 
vútuÆ
 
gë_nsh¨ds
() {

634  
	gnsh¨ds
;

637 
size_t
 
num_upd©es
() {

638  
	gnupd©es
;

644 
vútuÆ
 
size_t
 
num_edges_ß„
() {

645  
num_edges
();

648 
vútuÆ
 
size_t
 
num_buf„ªd_edges
() {

655 
vútuÆ
 
size_t
 
num_edges
() {

656 i‡(
	g¶idög_sh¨ds
.
size
() == 0) {

657 
log°ªam
(
LOG_ERROR
Ë<< "ígöe.num_edges(Ëˇ¿bêˇŒed o∆yá·îÉngöêha†bì¿°¨ãd. TÿbêfixedÜ©î. A†®w‹k¨ound,Öuàthêígöêötÿ®globÆ v¨übÀ,ánd quîyÅhênumbîá·îw¨d†ö begö_ôî©i⁄(), f‹Éxam∂e." << 
°d
::
ídl
;

658 
as£π
(
Ál£
);

660 i‡(
	g⁄ly_adja˚ncy
) {

662 
log°ªam
(
LOG_ERROR
Ë<< "AskedÇumbî o‡edges, buàígöêwa†ru¿wôhouàedge-d©a." << 
	g°d
::
ídl
;

665  
	g√dges
;

673 
boﬁ
 
is_™y_vîãx_scheduÀd
(
vid_t
 
°
, vid_à
í
) {

674 i‡(
	gscheduÀr
 =
NULL
Ë 
åue
;

675 
vid_t
 
	gv
=
°
; v<=
í
; v++) {

676 i‡(
	gscheduÀr
->
is_scheduÀd
(
v
)) {

677  
	gåue
;

680  
	gÁl£
;

683 
vútuÆ
 
öôülize_ôî
() {

687 
vútuÆ
 
öôülize_bef‹e_run
() {

688 i‡(
	gª£t_vîãxd©a
 && 
	gvîãx_d©a_h™dÀr
 !
NULL
) {

689 
vîãx_d©a_h™dÀr
->
˛ór
(
num_vîti˚s
());

693 
vútuÆ
 
memsh¨d_t
 * 
¸óã_memsh¨d
(
vid_t
 
öãrvÆ_°
, vid_à
öãrvÆ_í
) {

694 #i‚de‡
DYNAMICEDATA


695  
√w
 
memsh¨d_t
(
this
->
iomgr
,

696 
fûíame_sh¨d_ed©a
<
EdgeD©aTy≥
>(
ba£_fûíame
, 
exec_öãrvÆ
, 
nsh¨ds
),

697 
fûíame_sh¨d_adj
(
ba£_fûíame
, 
exec_öãrvÆ
, 
nsh¨ds
),

698 
öãrvÆ_°
,

699 
öãrvÆ_í
,

700 
blocksize
,

701 
m
);

703  
√w
 
memsh¨d_t
(
this
->
iomgr
,

704 
fûíame_sh¨d_ed©a
<>(
ba£_fûíame
, 
exec_öãrvÆ
, 
nsh¨ds
),

705 
fûíame_sh¨d_adj
(
ba£_fûíame
, 
exec_öãrvÆ
, 
nsh¨ds
),

706 
öãrvÆ_°
,

707 
öãrvÆ_í
,

708 
blocksize
,

709 
m
);

718 
run
(
GøphChiProgøm
<
VîãxD©aTy≥
, 
EdgeD©aTy≥
, 
svîãx_t
> &
u£Ωrogøm
, 
_nôîs
) {

719 
	gm
.
°¨t_time
("runtime");

720 i‡(
	gdegªe_h™dÀr
 =
NULL
)

721 
degªe_h™dÀr
 = 
¸óã_degªe_h™dÀr
();

722 
	giomgr
->
£t_ˇche_budgë
(
gë_›ti⁄_l⁄g
("cachesize_mb", 0) * 1024L * 1024L);

724 
	gm
.
£t
("ˇchesize_mb", 
gë_›ti⁄_öt
("cachesize_mb", 0));

725 
	gm
.
£t
("membudgë_mb", 
gë_›ti⁄_öt
("membudget_mb", 0));

727 
	gøndomiz©i⁄
 = 
gë_›ti⁄_öt
("randomization", 0) == 1;

729 i‡(
svîãx_t
().
compuèti⁄Æ_edges
()) {

731 
£t_maxwödow
(
membudgë_mb
 * 1024 * 1024 / 3 / 100);

732 
log°ªam
(
LOG_INFO
Ë<< "Së maxwödow:" << 
	gmaxwödow
 << 
	g°d
::
ídl
;

735 i‡(
	gøndomiz©i⁄
) {

736 
timevÆ
 
	gâ
;

737 
gëtimeofday
(&
â
, 
NULL
);

738 
uöt32_t
 
	g£ed
 = (uöt32_tË
gë_›ti⁄_öt
("£ed", ()
â
.
tv_u£c
);

739 
	g°d
::
cout
 << "SEED: " << 
£ed
 << 
°d
::
ídl
;

740 
§™d
(
£ed
);

743 
	gnôîs
 = 
_nôîs
;

744 
log°ªam
(
LOG_INFO
Ë<< "GøphChò°¨tög" << 
	g°d
::
ídl
;

745 
log°ªam
(
LOG_INFO
Ë<< "Li˚n£d undîÅhêA∑chêLi˚n£ 2.0" << 
	g°d
::
ídl
;

746 
log°ªam
(
LOG_INFO
Ë<< "C›yrighàA≠ÿKyrﬁ®ëál., C¨√gõ Mñl⁄ Univîsôy (2012)" << 
	g°d
::
ídl
;

748 i‡(
	gvîãx_d©a_h™dÀr
 =
NULL
 && !
dißbÀ_vîãxd©a_°‹age
)

749 
vîãx_d©a_h™dÀr
 = 
√w
 
vîãx_d©a_°‹e
<
VîãxD©aTy≥
>(
ba£_fûíame
, 
num_vîti˚s
(), 
	giomgr
);

751 
öôülize_bef‹e_run
();

755 i‡(
	g¶idög_sh¨ds
.
size
() == 0) {

756 
öôülize_¶idög_sh¨ds
();

757 i‡(
	göôülize_edges_bef‹e_run
) {

758 
	gj
=0; j<()
	g¶idög_sh¨ds
.
size
(); j++Ë¶idög_sh¨ds[
j
]->
öôd©a
();

761 
log°ªam
(
LOG_DEBUG
Ë<< "EngöêbeögÑe°¨ãd, dÿnŸÑeöôülize." << 
	g°d
::
ídl
;

764 
öôülize_scheduÀr
();

765 
omp_£t_√°ed
(1);

769 
	gchic⁄ãxt
.
	gscheduÀr
 = 
scheduÀr
;

770 i‡(
	gscheduÀr
 =
NULL
) {

771 
chic⁄ãxt
.
scheduÀr
 = 
√w
 
n⁄_scheduÀr
();

775 
¥öt_c⁄fig
();

779 
	gôî
=0; iã∏< 
	gnôîs
; iter++) {

780 
log°ªam
(
LOG_INFO
Ë<< "Sèπ iãøti⁄: " << 
	gôî
 << 
	g°d
::
ídl
;

782 
öôülize_ôî
();

785 i‡(!
	gdißbÀ_vîãxd©a_°‹age
)

786 
	gvîãx_d©a_h™dÀr
->
check_size
(
num_vîti˚s
());

789 
	gchic⁄ãxt
.
	gfûíame
 = 
ba£_fûíame
;

790 
	gchic⁄ãxt
.
	gôî©i⁄
 = 
ôî
;

791 
	gchic⁄ãxt
.
	gnum_ôî©i⁄s
 = 
nôîs
;

792 
	gchic⁄ãxt
.
	gnvîti˚s
 = 
num_vîti˚s
();

793 i‡(!
	g⁄ly_adja˚ncy
Ë
	gchic⁄ãxt
.
	g√dges
 = 
num_edges
();

795 
	gchic⁄ãxt
.
	gexe˘hªads
 = 
exec_thªads
;

796 
	gchic⁄ãxt
.
ª£t_dñès
(
exec_thªads
);

799 
	gu£Ωrogøm
.
bef‹e_ôî©i⁄
(
ôî
, 
chic⁄ãxt
);

802 i‡(
	gu£_£À˘ive_schedulög
) {

803 i‡(
	gscheduÀr
 !
NULL
) {

804 i‡(!
scheduÀr
->
has_√w_èsks
) {

805 
log°ªam
(
LOG_INFO
Ë<< "Nÿ√wÅask†tÿrun!" << 
°d
::
ídl
;

808 
	gscheduÀr
->
	ghas_√w_èsks
 = 
Ál£
;

813 i‡(
	gscheduÀr
 !
NULL
)

814 
scheduÀr
->
√w_ôî©i⁄
(
ôî
);

817 
	g°d
::
ve˘‹
<> 
ötshufÊe
(
nsh¨ds
);

819 i‡(
	gøndomiz©i⁄
) {

820 
	gi
=0; i<
	gnsh¨ds
; i++Ë
	götshufÊe
[
i
] = i;

821 
	g°d
::
øndom_shufÊe
(
ötshufÊe
.
begö
(), i¡shufÊe.
íd
());

825 
	göãrvÆ_idx
=0; i¡îvÆ_idx < 
	gnsh¨ds
; ++interval_idx) {

826 
	gexec_öãrvÆ
 = 
öãrvÆ_idx
;

828 i‡(
	gøndomiz©i⁄
 && 
	gôî
 > 0) {

829 
	gexec_öãrvÆ
 = 
ötshufÊe
[
öãrvÆ_idx
];

832 
	gp
=0;Ö<
	gnsh¨ds
;Ö++) {

833 
	g¶idög_sh¨ds
[
p
]->
Êush
();

834 
	g¶idög_sh¨ds
[
p
]->
£t_off£t
(0, 0, 0);

840 
vid_t
 
	göãrvÆ_°
 = 
gë_öãrvÆ_°¨t
(
exec_öãrvÆ
);

841 
vid_t
 
	göãrvÆ_í
 = 
gë_öãrvÆ_íd
(
exec_öãrvÆ
);

843 i‡(
	göãrvÆ_°
 > 
	göãrvÆ_í
) ;

845 i‡(!
is_ömem‹y_mode
())

846 
	gu£Ωrogøm
.
bef‹e_exec_öãrvÆ
(
öãrvÆ_°
, 
öãrvÆ_í
, 
chic⁄ãxt
);

849 
	g¶idög_sh¨ds
[
exec_öãrvÆ
]->
Êush
();

850 
	giomgr
->
waô_f‹_wrôes
();

853 i‡(
	gmem‹ysh¨d
 !
NULL
Ë
dñëe
 
mem‹ysh¨d
;

854 
	gmem‹ysh¨d
 = 
¸óã_memsh¨d
(
öãrvÆ_°
, 
öãrvÆ_í
);

855 
	gmem‹ysh¨d
->
	g⁄ly_adja˚ncy
 = 
⁄ly_adja˚ncy
;

856 
	gmem‹ysh¨d
->
£t_dißbÀ_async_wrôes
(
øndomiz©i⁄
);

858 
	gsub_öãrvÆ_°
 = 
öãrvÆ_°
;

859 
log°ªam
(
LOG_INFO
Ë<< 
	gchic⁄ãxt
.
ru¡ime
() << "s: Starting: "

860 << 
	gsub_öãrvÆ_°
 << " -- " << 
	göãrvÆ_í
 << 
	g°d
::
ídl
;

862 
	gsub_öãrvÆ_°
 <
öãrvÆ_í
) {

864 
modifiˇti⁄_lock
.
lock
();

866 
	gsub_öãrvÆ_í
 = 
dëîmöe_√xt_wödow
(
exec_öãrvÆ
,

867 
sub_öãrvÆ_°
,

868 
°d
::
mö
(
öãrvÆ_í
, (
is_ömem‹y_mode
(Ë? i¡îvÆ_í : 
sub_öãrvÆ_°
 + 
maxwödow
)),

869 
size_t
(
membudgë_mb
) * 1024 * 1024);

870 
as£π
(
sub_öãrvÆ_í
 >
sub_öãrvÆ_°
);

872 
log°ªam
(
LOG_INFO
Ë<< "Iãøti⁄ " << 
	gôî
 << "/" << (
	gnôîs
 - 1Ë<< ", suböãrvÆ: " << 
	gsub_öãrvÆ_°
 << " - " << 
	gsub_öãrvÆ_í
 << 
	g°d
::
ídl
;

874 
boﬁ
 
	g™y_vîãx_scheduÀd
 = 
is_™y_vîãx_scheduÀd
(
sub_öãrvÆ_°
, 
sub_öãrvÆ_í
);

875 i‡(!
	g™y_vîãx_scheduÀd
) {

876 
log°ªam
(
LOG_INFO
Ë<< "Nÿvîti˚†scheduÀd, skù." << 
	g°d
::
ídl
;

877 
	gsub_öãrvÆ_°
 = 
sub_öãrvÆ_í
 + 1;

878 
	gmodifiˇti⁄_lock
.
u∆ock
();

883 
	gnvîti˚s
 = 
sub_öãrvÆ_í
 - 
sub_öãrvÆ_°
 + 1;

884 
	ggøphchi_edge
<
	gEdgeD©aTy≥
> * 
	ged©a
 = 
NULL
;

886 
	g°d
::
ve˘‹
<
svîãx_t
> 
vîti˚s
(
nvîti˚s
, svertex_t());

887 
log°ªam
(
LOG_DEBUG
Ë<< "AŒoˇti⁄ " << 
	gnvîti˚s
 << " vîti˚s, sizeof:" << (
	gsvîãx_t
)

888 << "ÅŸÆ:" << 
nvîti˚s
 * (
	gsvîãx_t
Ë<< 
	g°d
::
ídl
;

889 
öô_vîti˚s
(
vîti˚s
, 
ed©a
);

892 
lﬂd_bef‹e_upd©es
(
vîti˚s
);

894 
	gmodifiˇti⁄_lock
.
u∆ock
();

896 
log°ªam
(
LOG_INFO
Ë<< "Sèπ upd©es" << 
	g°d
::
ídl
;

898 i‡(!
is_ömem‹y_mode
()) {

899 
exec_upd©es
(
u£Ωrogøm
, 
vîti˚s
);

901 
lﬂd_a·î_upd©es
(
vîti˚s
);

904 
exec_upd©es_ömem‹y_mode
(
u£Ωrogøm
, 
vîti˚s
);

906 
log°ªam
(
LOG_INFO
Ë<< "Föished upd©es" << 
	g°d
::
ídl
;

910 i‡(!
	gdißbÀ_vîãxd©a_°‹age
) {

911 
ßve_vîti˚s
(
vîti˚s
);

913 
	gsub_öãrvÆ_°
 = 
sub_öãrvÆ_í
 + 1;

916 i‡(
	ged©a
 !
NULL
) {

917 
dñëe
 
ed©a
;

918 
	ged©a
 = 
NULL
;

923 i‡(
	gmem‹ysh¨d
->
lﬂded
(Ë&& (
	gßve_edgesfûes_a·î_ömemmode
 || !
is_ömem‹y_mode
())) {

924 
	gmem‹ysh¨d
->
commô
(
modifõs_öedges
, 
modifõs_ouãdges
 & !
dißbÀ_ouãdges
);

926 i‡(!
	gøndomiz©i⁄
) {

927 
	g¶idög_sh¨ds
[
exec_öãrvÆ
]->
£t_off£t
(
mem‹ysh¨d
->
off£t_f‹_°ªam_c⁄t
(), mem‹ysh¨d->
off£t_vid_f‹_°ªam_c⁄t
(),

928 
mem‹ysh¨d
->
ed©a_±r_f‹_°ªam_c⁄t
());

930 
dñëe
 
	gmem‹ysh¨d
;

931 
	gmem‹ysh¨d
 = 
NULL
;

933 i‡(!
is_ömem‹y_mode
())

934 
	gu£Ωrogøm
.
a·î_exec_öãrvÆ
(
öãrvÆ_°
, 
öãrvÆ_í
, 
chic⁄ãxt
);

938 i‡(!
is_ömem‹y_mode
())

939 
	gu£Ωrogøm
.
a·î_ôî©i⁄
(
ôî
, 
chic⁄ãxt
);

943 
	gp
=0;Ö<
	gnsh¨ds
;Ö++) {

944 
	g¶idög_sh¨ds
[
p
]->
Êush
();

945 
	g¶idög_sh¨ds
[
p
]->
£t_off£t
(0, 0, 0);

947 
	giomgr
->
waô_f‹_wrôes
();

950 
wrôe_dñè_log
();

953 i‡(
	gchic⁄ãxt
.
	gœ°_ôî©i⁄
 >= 0) {

954 
nôîs
 = 
chic⁄ãxt
.
œ°_ôî©i⁄
 + 1;

955 
log°ªam
(
LOG_DEBUG
Ë<< "La° iãøti⁄ i†now: " << (
	gnôîs
-1Ë<< 
	g°d
::
ídl
;

957 
ôî©i⁄_föished
();

958 
	giomgr
->
fú°_∑ss_föished
();

961 
	gm
.
°›_time
("runtime");

963 
	gm
.
£t
("upd©es", 
nupd©es
);

964 
	gm
.
£t
("w‹k", 
w‹k
);

965 
	gm
.
£t
("nvîti˚s", 
num_vîti˚s
());

966 
	gm
.
£t
("exe˘hªads", (
size_t
)
exec_thªads
);

967 
	gm
.
£t
("lﬂdthªads", (
size_t
)
lﬂd_thªads
);

968 #i‚de‡
GRAPHCHI_DISABLE_COMPRESSION


969 
	gm
.
£t
("compression", 1);

971 
	gm
.
£t
("compression", 0);

974 
	gm
.
£t
("scheduÀr", (
size_t
)
u£_£À˘ive_schedulög
);

975 
	gm
.
£t
("nôîs", 
nôîs
);

978 
	gi
=0; i< ()
	gouçuts
.
size
(); i++) {

979 
	gouçuts
[
i
]->
˛o£
();

981 
	gouçuts
.
˛ór
();

984 i‡(
	gvîãx_d©a_h™dÀr
 !
NULL
) {

985 
dñëe
 
vîãx_d©a_h™dÀr
;

986 
	gvîãx_d©a_h™dÀr
 = 
NULL
;

989 i‡(
	gmodifõs_öedges
 || 
	gmodifõs_ouãdges
) {

990 
	giomgr
->
commô_ˇched_blocks
();

994 
vútuÆ
 
ôî©i⁄_föished
() {

998 
°rùedio
 * 
gë_iom™agî
() {

999  
	giomgr
;

1002 
vútuÆ
 
£t_modifõs_öedges
(
boﬁ
 
b
) {

1003 
	gmodifõs_öedges
 = 
b
;

1006 
vútuÆ
 
£t_modifõs_ouãdges
(
boﬁ
 
b
) {

1007 
	gmodifõs_ouãdges
 = 
b
;

1010 
vútuÆ
 
£t_⁄ly_adja˚ncy
(
boﬁ
 
b
) {

1011 
	g⁄ly_adja˚ncy
 = 
b
;

1014 
vútuÆ
 
£t_dißbÀ_ouãdges
(
boﬁ
 
b
) {

1015 
	gdißbÀ_ouãdges
 = 
b
;

1023 
£t_blocksize
(
size_t
 
blocksize_ö_byãs
) {

1024 
	gblocksize
 = 
blocksize_ö_byãs
;

1032 
£t_membudgë_mb
(
mbs
) {

1033 
	gmembudgë_mb
 = 
mbs
;

1036 
gë_membudgë_mb
() {

1037  
	gmembudgë_mb
;

1040 
£t_lﬂd_thªads
(
…
) {

1041 
	glﬂd_thªads
 = 
…
;

1044 
£t_exec_thªads
(
ë
) {

1045 
	gexec_thªads
 = 
ë
;

1052 
£t_íabÀ_dëîmöi°ic_∑øŒñism
(
boﬁ
 
b
) {

1053 #ifde‡
DYNAMICEDATA


1054 i‡(!
	gb
) {

1055 
log°ªam
(
LOG_ERROR
Ë<< "Wôh dy«mi¯edgêd©a, you c™nŸ dißbÀ dëîmöi¯∑øŒñism." << 
	g°d
::
ídl
;

1056 
log°ªam
(
LOG_ERROR
Ë<< "Othîwi£Ña˚ c⁄dôi⁄†would c‹ru±Åhê°ru˘uª o‡thêd©a." << 
	g°d
::
ídl
;

1057 
as£π
(
b
);

1061 
	gíabÀ_dëîmöi°ic_∑øŒñism
 = 
b
;

1064 
	gpublic
:

1065 
£t_dißbÀ_vîãxd©a_°‹age
() {

1066 
this
->
dißbÀ_vîãxd©a_°‹age
 = 
åue
;

1069 
£t_íabÀ_vîãxd©a_°‹age
() {

1070 
	gthis
->
	gdißbÀ_vîãxd©a_°‹age
 = 
Ál£
;

1073 
£t_maxwödow
(
_maxwödow
){

1074 
	gmaxwödow
 = 
_maxwödow
;

1079 
size_t
 
add_ouçut
(
iouçut
<
VîãxD©aTy≥
, 
EdgeD©aTy≥
> * 
ouçut
) {

1080 
	gouçuts
.
push_back
(
ouçut
);

1081  (
	gouçuts
.
size
() - 1);

1084 
	giouçut
<
	gVîãxD©aTy≥
, 
	gEdgeD©aTy≥
> * 
ouçut
(
size_t
 
idx
) {

1085 i‡(
	gidx
 >
ouçuts
.
size
()) {

1086 
log°ªam
(
LOG_FATAL
Ë<< "TrõdÅÿgë ouçuàwôh index " << 
idx
 << ", buà⁄ly " << 
ouçuts
.
size
(Ë<< " ouçut†wîêöôülized!" << 
°d
::
ídl
;

1088 
as£π
(
idx
 < 
ouçuts
.
size
());

1089  
	gouçuts
[
idx
];

1092 
	g¥Ÿe˘ed
:

1094 
vútuÆ
 
_lﬂd_vîãx_öãrvÆs
() {

1095 
lﬂd_vîãx_öãrvÆs
(
ba£_fûíame
, 
nsh¨ds
, 
öãrvÆs
);

1098 
	g¥Ÿe˘ed
:

1099 
muãx
 
hâ∂ock
;

1100 
	g°d
::
m≠
<
°d
::
°rög
, std::°rög> 
js⁄_∑øms
;

1102 
	gpublic
:

1107 
ãm∂©e
<
ty≥«me
 
ET
>

1108 
ªöôülize_edge_d©a
(
ET
 
zîovÆue
) {

1110 
p
=0; 
	gp
 < 
	gnsh¨ds
;Ö++) {

1111 
	g°d
::
°rög
 
ed©ash¨d«me
 = 
fûíame_sh¨d_ed©a
<
ET
>(
ba£_fûíame
, 
	gp
, 
	gnsh¨ds
);

1112 
	g°d
::
°rög
 
dú«me
 = 
dú«me_sh¨d_ed©a_block
(
ed©ash¨d«me
, 
blocksize
);

1113 
size_t
 
	ged©asize
 = 
gë_sh¨d_ed©a_fûesize
<
ET
>(
ed©ash¨d«me
);

1114 
log°ªam
(
LOG_INFO
Ë<< "CÀ¨ög d©a: " << 
	ged©ash¨d«me
 << " byãs: " << 
	ged©asize
 << 
	g°d
::
ídl
;

1115 
	gnblocks
 = (Ë((
ed©asize
 / 
blocksize
) + (edatasize % blocksize == 0 ? 0 : 1));

1116 
	gi
=0; i < 
	gnblocks
; i++) {

1117 
	g°d
::
°rög
 
block_fûíame
 = 
fûíame_sh¨d_ed©a_block
(
ed©ash¨d«me
, 
i
, 
blocksize
);

1118 
	gÀn
 = (Ë
°d
::
mö
(
ed©asize
 - 
i
 * 
blocksize
, blocksize);

1119 
	gf
 = 
›í
(
block_fûíame
.
c_°r
(), 
O_RDWR
 | 
O_CREAT
, 
S_IROTH
 | 
S_IWOTH
 | 
S_IWUSR
 | 
S_IRUSR
);

1120 
ET
 * 
	gbuf
 = (ET *Ë
mÆloc
(
Àn
);

1121 
	gi
=0; i < (Ë(
	gÀn
 / (
	gET
)); i++) {

1122 
	gbuf
[
i
] = 
zîovÆue
;

1124 
wrôe_com¥es£d
(
f
, 
buf
, 
Àn
);

1125 
˛o£
(
f
);

1127 #ifde‡
DYNAMICEDATA


1128 
wrôe_block_uncom¥es£d_size
(
block_fûíame
, 
Àn
);

1140 
£t_ª£t_vîãxd©a
(
boﬁ
 
ª£t
) {

1141 
	gª£t_vîãxd©a
 = 
ª£t
;

1148 
vútuÆ
 
£t_ßve_edgesfûes_a·î_ömemmode
(
boﬁ
 
b
) {

1149 
	gthis
->
	gßve_edgesfûes_a·î_ömemmode
 = 
b
;

1152 
vútuÆ
 
£t_öôülize_edges_bef‹e_run
(
boﬁ
 
b
) {

1153 
	gthis
->
	göôülize_edges_bef‹e_run
 = 
b
;

1161 
£t_js⁄
(
°d
::
°rög
 
key
, std::°rög 
vÆue
) {

1162 
hâ∂ock
.
lock
();

1163 
	gjs⁄_∑øms
[
key
] = 
vÆue
;

1164 
	ghâ∂ock
.
u∆ock
();

1167 
	gãm∂©e
 <
ty≥«me
 
	gT
>

1168 
£t_js⁄
(
°d
::
°rög
 
key
, 
T
 
vÆ
) {

1169 
	g°d
::
°rög°ªam
 
ss
;

1170 
	gss
 << 
	gvÆ
;

1171 
£t_js⁄
(
key
, 
ss
.
°r
());

1174 
	g°d
::
°rög
 
gë_öfo_js⁄
() {

1175 
°d
::
°rög°ªam
 
js⁄
;

1176 
	gjs⁄
 << "{";

1177 
	gjs⁄
 << "\"fûe\" : \"" << 
	gba£_fûíame
 << "\",\n";

1178 
	gjs⁄
 << "\"numOfSh¨ds\": " << 
	gnsh¨ds
 << ",\n";

1179 
	gjs⁄
 << "\"ôî©i⁄\": " << 
	gchic⁄ãxt
.
	gôî©i⁄
 << ",\n";

1180 
	gjs⁄
 << "\"numIãøti⁄s\": " << 
	gchic⁄ãxt
.
	gnum_ôî©i⁄s
 << ",\n";

1181 
	gjs⁄
 << "\"runTime\": " << 
	gchic⁄ãxt
.
ru¡ime
() << ",\n";

1183 
	gjs⁄
 << "\"upd©es\": " << 
	gnupd©es
 << ",\n";

1184 
	gjs⁄
 << "\"nvîti˚s\": " << 
	gchic⁄ãxt
.
	gnvîti˚s
 << ",\n";

1185 
	gjs⁄
 << "\"öãrvÆ\":" << 
	gexec_öãrvÆ
 << ",\n";

1186 
	gjs⁄
 << "\"wödowSèπ\":" << 
	gsub_öãrvÆ_°
 << ",";

1187 
	gjs⁄
 << "\"wödowEnd\": " << 
	gsub_öãrvÆ_í
 << ",";

1188 
	gjs⁄
 << "\"shards\": [";

1190 
	gp
=0;Ö < ()
	gnsh¨ds
;Ö++) {

1191 i‡(
	gp
>0Ë
	gjs⁄
 << ",";

1193 
	gjs⁄
 << "{";

1194 
	gjs⁄
 << "\"p\": " << 
	gp
 << ", ";

1195 
	gjs⁄
 << 
	g¶idög_sh¨ds
[
p
]->
gë_öfo_js⁄
();

1196 
	gjs⁄
 << "}";

1199 
	gjs⁄
 << "]";

1200 
	gjs⁄
 << "}";

1201  
	gjs⁄
.
°r
();

	@external/vpiotr-mongoose-cpp/examples/chat.c

13 
	~<°dio.h
>

14 
	~<°dlib.h
>

15 
	~<as£π.h
>

16 
	~<°rög.h
>

17 
	~<time.h
>

18 
	~<°d¨g.h
>

19 
	~<±hªad.h
>

21 
	~"m⁄goo£.h
"

23 
	#MAX_USER_LEN
 20

	)

24 
	#MAX_MESSAGE_LEN
 100

	)

25 
	#MAX_MESSAGES
 5

	)

26 
	#MAX_SESSIONS
 2

	)

27 
	#SESSION_TTL
 120

	)

29 c⁄° *
	gauth‹ize_uæ
 = "/authorize";

30 c⁄° *
	glogö_uæ
 = "/login.html";

31 c⁄° *
	gajax_ª∂y_°¨t
 =

39 
	smesßge
 {

40 
	mid
;

41 
	mu£r
[
MAX_USER_LEN
];

42 
	mãxt
[
MAX_MESSAGE_LEN
];

43 
time_t
 
	mtime°amp
;

47 
	s£ssi⁄
 {

48 
	m£ssi⁄_id
[33];

49 
	møndom
[20];

50 
	mu£r
[
MAX_USER_LEN
];

51 
time_t
 
	mexpúe
;

54 
mesßge
 
	gmesßges
[
MAX_MESSAGES
];

55 
£ssi⁄
 
	g£ssi⁄s
[
MAX_SESSIONS
];

56 
	gœ°_mesßge_id
;

59 
±hªad_rwlock_t
 
	grwlock
 = 
PTHREAD_RWLOCK_INITIALIZER
;

62 
£ssi⁄
 *
	$gë_£ssi⁄
(c⁄° 
mg_c⁄√˘i⁄
 *
c⁄n
) {

63 
i
;

64 
£ssi⁄_id
[33];

65 
time_t
 
now
 = 
	`time
(
NULL
);

66 
	`mg_gë_cookõ
(
c⁄n
, "£ssi⁄", 
£ssi⁄_id
, (session_id));

67 
i
 = 0; i < 
MAX_SESSIONS
; i++) {

68 i‡(
£ssi⁄s
[
i
].
expúe
 != 0 &&

69 
£ssi⁄s
[
i
].
expúe
 > 
now
 &&

70 
	`°rcmp
(
£ssi⁄s
[
i
].
£ssi⁄_id
, session_id) == 0) {

74  
i
 =
MAX_SESSIONS
 ? 
NULL
 : &
£ssi⁄s
[i];

75 
	}
}

77 
	$gë_qsv¨
(c⁄° 
mg_ªque°_öfo
 *
ªque°_öfo
,

78 c⁄° *
«me
, *
d°
, 
size_t
 
d°_Àn
) {

79 c⁄° *
qs
 = 
ªque°_öfo
->
quîy_°rög
;

80 
	`mg_gë_v¨
(
qs
, 
	`°æí
(q†=
NULL
 ? "" : qs), 
«me
, 
d°
, 
d°_Àn
);

81 
	}
}

87 *
	$mesßges_to_js⁄
(
œ°_id
) {

88 c⁄° 
mesßge
 *message;

89 
max_msgs
, 
Àn
;

90 
buf
[(
mesßges
)];

93 
	`±hªad_rwlock_rdlock
(&
rwlock
);

94 
Àn
 = 0;

95 
max_msgs
 = (
mesßges
) / (messages[0]);

97 i‡(
œ°_mesßge_id
 - 
œ°_id
 > 
max_msgs
) {

98 
œ°_id
 = 
œ°_mesßge_id
 - 
max_msgs
;

100 ; 
œ°_id
 < 
œ°_mesßge_id
;Üast_id++) {

101 
mesßge
 = &
mesßges
[
œ°_id
 % 
max_msgs
];

102 i‡(
mesßge
->
time°amp
 == 0) {

108 
Àn
 +
	`¢¥ötf
(
buf
 +Üen, (buf) -Üen,

110 
mesßge
->
u£r
, mesßge->
ãxt
, mesßge->
time°amp
, mesßge->
id
);

111 
	`as£π
(
Àn
 > 0);

112 
	`as£π
((
size_t
Ë
Àn
 < (
buf
));

114 
	`±hªad_rwlock_u∆ock
(&
rwlock
);

116  
Àn
 =0 ? 
NULL
 : 
	`°rdup
(
buf
);

117 
	}
}

122 
	$h™dÀ_js⁄p
(
mg_c⁄√˘i⁄
 *
c⁄n
,

123 c⁄° 
mg_ªque°_öfo
 *
ªque°_öfo
) {

124 
cb
[64];

126 
	`gë_qsv¨
(
ªque°_öfo
, "ˇŒback", 
cb
, (cb));

127 i‡(
cb
[0] != '\0') {

128 
	`mg_¥ötf
(
c⁄n
, "%s(", 
cb
);

131  
cb
[0] == '\0' ? 0 : 1;

132 
	}
}

136 
	$ajax_gë_mesßges
(
mg_c⁄√˘i⁄
 *
c⁄n
,

137 c⁄° 
mg_ªque°_öfo
 *
ªque°_öfo
) {

138 
œ°_id
[32], *
js⁄
;

139 
is_js⁄p
;

141 
	`mg_¥ötf
(
c⁄n
, "%s", 
ajax_ª∂y_°¨t
);

142 
is_js⁄p
 = 
	`h™dÀ_js⁄p
(
c⁄n
, 
ªque°_öfo
);

144 
	`gë_qsv¨
(
ªque°_öfo
, "œ°_id", 
œ°_id
, (last_id));

145 i‡((
js⁄
 = 
	`mesßges_to_js⁄
(
	`°πoul
(
œ°_id
, 
NULL
, 10))) != NULL) {

146 
	`mg_¥ötf
(
c⁄n
, "[%s]", 
js⁄
);

147 
	`‰ì
(
js⁄
);

150 i‡(
is_js⁄p
) {

151 
	`mg_¥ötf
(
c⁄n
, "%s", ")");

153 
	}
}

156 
mesßge
 *
	$√w_mesßge
() {

157 
size
 = (
mesßges
) / (messages[0]);

158 
mesßge
 *mesßgê&
mesßges
[
œ°_mesßge_id
 % 
size
];

159 
mesßge
->
id
 = 
œ°_mesßge_id
++;

160 
mesßge
->
time°amp
 = 
	`time
(0);

161  
mesßge
;

162 
	}
}

164 
	$my_°æ˝y
(*
d°
, c⁄° *
§c
, 
size_t
 
Àn
) {

165 
	`°∫˝y
(
d°
, 
§c
, 
Àn
);

166 
d°
[
Àn
 - 1] = '\0';

167 
	}
}

170 
	$ajax_£nd_mesßge
(
mg_c⁄√˘i⁄
 *
c⁄n
,

171 c⁄° 
mg_ªque°_öfo
 *
ªque°_öfo
) {

172 
mesßge
 *message;

173 
£ssi⁄
 *session;

174 
ãxt
[(
mesßge
->text) - 1];

175 
is_js⁄p
;

177 
	`mg_¥ötf
(
c⁄n
, "%s", 
ajax_ª∂y_°¨t
);

178 
is_js⁄p
 = 
	`h™dÀ_js⁄p
(
c⁄n
, 
ªque°_öfo
);

180 
	`gë_qsv¨
(
ªque°_öfo
, "ãxt", 
ãxt
, (text));

181 i‡(
ãxt
[0] != '\0') {

184 
	`±hªad_rwlock_wæock
(&
rwlock
);

185 
mesßge
 = 
	`√w_mesßge
();

187 
£ssi⁄
 = 
	`gë_£ssi⁄
(
c⁄n
);

188 
	`as£π
(
£ssi⁄
 !
NULL
);

189 
	`my_°æ˝y
(
mesßge
->
ãxt
,Åext, (text));

190 
	`my_°æ˝y
(
mesßge
->
u£r
, 
£ssi⁄
->user, (message->user));

191 
	`±hªad_rwlock_u∆ock
(&
rwlock
);

194 
	`mg_¥ötf
(
c⁄n
, "%s", 
ãxt
[0] == '\0' ? "false" : "true");

196 i‡(
is_js⁄p
) {

197 
	`mg_¥ötf
(
c⁄n
, "%s", ")");

199 
	}
}

203 
	$ªdúe˘_to_logö
(
mg_c⁄√˘i⁄
 *
c⁄n
,

204 c⁄° 
mg_ªque°_öfo
 *
ªque°_öfo
) {

205 
	`mg_¥ötf
(
c⁄n
, "HTTP/1.1 302 Found\r\n"

208 
ªque°_öfo
->
uri
, 
logö_uæ
);

209 
	}
}

212 
	$check_∑ssw‹d
(c⁄° *
u£r
, c⁄° *
∑ssw‹d
) {

216  (
u£r
[0] && 
∑ssw‹d
[0]);

217 
	}
}

220 
£ssi⁄
 *
	$√w_£ssi⁄
() {

221 
i
;

222 
time_t
 
now
 = 
	`time
(
NULL
);

223 
	`±hªad_rwlock_wæock
(&
rwlock
);

224 
i
 = 0; i < 
MAX_SESSIONS
; i++) {

225 i‡(
£ssi⁄s
[
i
].
expúe
 =0 || sessi⁄s[i].expúê< 
now
) {

226 
£ssi⁄s
[
i
].
expúe
 = 
	`time
(0Ë+ 
SESSION_TTL
;

230 
	`±hªad_rwlock_u∆ock
(&
rwlock
);

231  
i
 =
MAX_SESSIONS
 ? 
NULL
 : &
£ssi⁄s
[i];

232 
	}
}

237 
	$gíî©e_£ssi⁄_id
(*
buf
, c⁄° *
øndom
,

238 c⁄° *
u£r
) {

239 
	`mg_md5
(
buf
, 
øndom
, 
u£r
, 
NULL
);

240 
	}
}

242 
	$£nd_£rvî_mesßge
(c⁄° *
fmt
, ...) {

243 
va_li°
 
≠
;

244 
mesßge
 *message;

246 
	`±hªad_rwlock_wæock
(&
rwlock
);

247 
mesßge
 = 
	`√w_mesßge
();

248 
mesßge
->
u£r
[0] = '\0';

249 
	`va_°¨t
(
≠
, 
fmt
);

250 
	`v¢¥ötf
(
mesßge
->
ãxt
, (mesßge->ãxt), 
fmt
, 
≠
);

251 
	`va_íd
(
≠
);

253 
	`±hªad_rwlock_u∆ock
(&
rwlock
);

254 
	}
}

258 
	$auth‹ize
(
mg_c⁄√˘i⁄
 *
c⁄n
,

259 c⁄° 
mg_ªque°_öfo
 *
ªque°_öfo
) {

260 
u£r
[
MAX_USER_LEN
], 
∑ssw‹d
[MAX_USER_LEN];

261 
£ssi⁄
 *session;

264 
	`gë_qsv¨
(
ªque°_öfo
, "u£r", 
u£r
, (user));

265 
	`gë_qsv¨
(
ªque°_öfo
, "∑ssw‹d", 
∑ssw‹d
, (password));

267 i‡(
	`check_∑ssw‹d
(
u£r
, 
∑ssw‹d
Ë&& (
£ssi⁄
 = 
	`√w_£ssi⁄
()Ë!
NULL
) {

279 
	`my_°æ˝y
(
£ssi⁄
->
u£r
, user, (session->user));

280 
	`¢¥ötf
(
£ssi⁄
->
øndom
, (£ssi⁄->øndom), "%d", 
	`ønd
());

281 
	`gíî©e_£ssi⁄_id
(
£ssi⁄
->
£ssi⁄_id
, sessi⁄->
øndom
, sessi⁄->
u£r
);

282 
	`£nd_£rvî_mesßge
("<%s> joöed", 
£ssi⁄
->
u£r
);

283 
	`mg_¥ötf
(
c⁄n
, "HTTP/1.1 302 Found\r\n"

288 
£ssi⁄
->
£ssi⁄_id
, sessi⁄->
u£r
);

291 
	`ªdúe˘_to_logö
(
c⁄n
, 
ªque°_öfo
);

293 
	}
}

296 
	$is_auth‹ized
(c⁄° 
mg_c⁄√˘i⁄
 *
c⁄n
,

297 c⁄° 
mg_ªque°_öfo
 *
ªque°_öfo
) {

298 
£ssi⁄
 *session;

299 
vÆid_id
[33];

300 
auth‹ized
 = 0;

303 i‡(!
	`°rcmp
(
ªque°_öfo
->
uri
, 
logö_uæ
) ||

304 !
	`°rcmp
(
ªque°_öfo
->
uri
, 
auth‹ize_uæ
)) {

308 
	`±hªad_rwlock_rdlock
(&
rwlock
);

309 i‡((
£ssi⁄
 = 
	`gë_£ssi⁄
(
c⁄n
)Ë!
NULL
) {

310 
	`gíî©e_£ssi⁄_id
(
vÆid_id
, 
£ssi⁄
->
øndom
, sessi⁄->
u£r
);

311 i‡(
	`°rcmp
(
vÆid_id
, 
£ssi⁄
->
£ssi⁄_id
) == 0) {

312 
£ssi⁄
->
expúe
 = 
	`time
(0Ë+ 
SESSION_TTL
;

313 
auth‹ized
 = 1;

316 
	`±hªad_rwlock_u∆ock
(&
rwlock
);

318  
auth‹ized
;

319 
	}
}

321 
	$ªdúe˘_to_s¶
(
mg_c⁄√˘i⁄
 *
c⁄n
,

322 c⁄° 
mg_ªque°_öfo
 *
ªque°_öfo
) {

323 c⁄° *
p
, *
ho°
 = 
	`mg_gë_hódî
(
c⁄n
, "Host");

324 i‡(
ho°
 !
NULL
 && (
p
 = 
	`°rchr
(host, ':')) != NULL) {

325 
	`mg_¥ötf
(
c⁄n
, "HTTP/1.1 302 Found\r\n"

327 
p
 - 
ho°
, ho°, 
ªque°_öfo
->
uri
);

329 
	`mg_¥ötf
(
c⁄n
, "%s", "HTTP/1.1 500 Error\r\n\r\nHost: header isÇot set");

331 
	}
}

333 *
	$evít_h™dÀr
(
mg_evít
 
evít
,

334 
mg_c⁄√˘i⁄
 *
c⁄n
,

335 c⁄° 
mg_ªque°_öfo
 *
ªque°_öfo
) {

336 *
¥o˚s£d
 = "yes";

338 i‡(
evít
 =
MG_NEW_REQUEST
) {

339 i‡(!
ªque°_öfo
->
is_s¶
) {

340 
	`ªdúe˘_to_s¶
(
c⁄n
, 
ªque°_öfo
);

341 } i‡(!
	`is_auth‹ized
(
c⁄n
, 
ªque°_öfo
)) {

342 
	`ªdúe˘_to_logö
(
c⁄n
, 
ªque°_öfo
);

343 } i‡(
	`°rcmp
(
ªque°_öfo
->
uri
, 
auth‹ize_uæ
) == 0) {

344 
	`auth‹ize
(
c⁄n
, 
ªque°_öfo
);

345 } i‡(
	`°rcmp
(
ªque°_öfo
->
uri
, "/ajax/get_messages") == 0) {

346 
	`ajax_gë_mesßges
(
c⁄n
, 
ªque°_öfo
);

347 } i‡(
	`°rcmp
(
ªque°_öfo
->
uri
, "/ajax/send_message") == 0) {

348 
	`ajax_£nd_mesßge
(
c⁄n
, 
ªque°_öfo
);

352 
¥o˚s£d
 = 
NULL
;

355 
¥o˚s£d
 = 
NULL
;

358  
¥o˚s£d
;

359 
	}
}

361 c⁄° *
	g›ti⁄s
[] = {

366 
NULL


369 
	$maö
() {

370 
mg_c⁄ãxt
 *
˘x
;

374 
	`§™d
((Ë
	`time
(0));

377 
˘x
 = 
	`mg_°¨t
(&
evít_h™dÀr
, 
NULL
, 
›ti⁄s
);

378 
	`as£π
(
˘x
 !
NULL
);

381 
	`¥ötf
("Chat server started onÖorts %s,ÖressÉnterÅo quit.\n",

382 
	`mg_gë_›ti⁄
(
˘x
, "listening_ports"));

383 
	`gëch¨
();

384 
	`mg_°›
(
˘x
);

385 
	`¥ötf
("%s\n", "Chat server stopped.");

387  
EXIT_SUCCESS
;

388 
	}
}

	@external/vpiotr-mongoose-cpp/main.c

21 #i‡
deföed
(
_WIN32
)

22 
	#_CRT_SECURE_NO_WARNINGS


23 #ñ£

	)

24 
	#_XOPEN_SOURCE
 600

26 

	)

27 
	~<sys/°©.h
>

28 
	~<°dio.h
>

29 
	~<°dlib.h
>

30 
	~<sig«l.h
>

31 
	~<°rög.h
>

32 
	~<î∫o.h
>

33 
	~<limôs.h
>

34 
	~<°ddef.h
>

35 
	~<°d¨g.h
>

37 
	~"m⁄goo£.h
"

39 #ifde‡
_WIN32


40 
	~<wödows.h
>

41 
	~<wösvc.h
>

42 
	#PATH_MAX
 
MAX_PATH


	)

43 
	#S_ISDIR
(
x
Ë((xË& 
_S_IFDIR
)

	)

44 
	#DIRSEP
 '\\'

	)

45 
	#¢¥ötf
 
_¢¥ötf


	)

46 
	#v¢¥ötf
 
_v¢¥ötf


	)

47 
	#¶ìp
(
x
Ë
	`SÀï
((xË* 1000)

	)

48 
	#WINCDECL
 
__cde˛


	)

50 
	~<sys/waô.h
>

51 
	~<uni°d.h
>

52 
	#DIRSEP
 '/'

	)

53 
	#WINCDECL


	)

56 
	#MAX_OPTIONS
 40

	)

58 
	gexô_Êag
;

59 
	g£rvî_«me
[40];

60 
	gc⁄fig_fûe
[
PATH_MAX
];

61 
mg_c⁄ãxt
 *
	g˘x
;

63 #i‡!
deföed
(
CONFIG_FILE
)

64 
	#CONFIG_FILE
 "m⁄goo£.c⁄f"

	)

67 
WINCDECL
 
	$sig«l_h™dÀr
(
sig_num
) {

68 
exô_Êag
 = 
sig_num
;

69 
	}
}

71 
	$dõ
(c⁄° *
fmt
, ...) {

72 
va_li°
 
≠
;

73 
msg
[200];

75 
	`va_°¨t
(
≠
, 
fmt
);

76 
	`v¢¥ötf
(
msg
, (msg), 
fmt
, 
≠
);

77 
	`va_íd
(
≠
);

79 #i‡
	`deföed
(
_WIN32
)

80 
	`MesßgeBox
(
NULL
, 
msg
, "Eº‹", 
MB_OK
);

82 
	`Ârötf
(
°dîr
, "%s\n", 
msg
);

85 
	`exô
(
EXIT_FAILURE
);

86 
	}
}

91 
	$mg_edô_∑ssw‹ds
(c⁄° *
‚ame
, c⁄° *
domaö
,

92 c⁄° *
u£r
, c⁄° *
∑ss
) {

93 
mg_c⁄ãxt
 *
˘x
;

94 c⁄° *
›ti⁄s
[] = {"authítiˇti⁄_domaö", 
NULL
, NULL};

95 
suc˚ss
;

97 
›ti⁄s
[1] = 
domaö
;

98 
˘x
 = 
	`mg_°¨t
(
NULL
, NULL, 
›ti⁄s
);

99 
suc˚ss
 = 
	`mg_modify_∑ssw‹ds_fûe
(
˘x
, 
‚ame
, 
u£r
, 
∑ss
);

100 
	`mg_°›
(
˘x
);

102  
suc˚ss
;

103 
	}
}

105 
	$show_ußge_™d_exô
() {

106 c⁄° **
«mes
;

107 
i
;

109 
	`Ârötf
(
°dîr
, "M⁄goo£ vîsi⁄ %†(cËSîgey Lyubka\n", 
	`mg_vîsi⁄
());

110 
	`Ârötf
(
°dîr
, "Usage:\n");

111 
	`Ârötf
(
°dîr
, " mongoose -A <htpasswd_file> <realm> <user> <passwd>\n");

112 
	`Ârötf
(
°dîr
, " mongoose <config_file>\n");

113 
	`Ârötf
(
°dîr
, " mongoose [-option value ...]\n");

114 
	`Ârötf
(
°dîr
, "OPTIONS:\n");

116 
«mes
 = 
	`mg_gë_vÆid_›ti⁄_«mes
();

117 
i
 = 0; 
«mes
[i] !
NULL
; i += 3) {

118 
	`Ârötf
(
°dîr
, " -%s %s (default: \"%s\")\n",

119 
«mes
[
i
],Çames[ò+ 1],Çames[ò+ 2] =
NULL
 ? "" :Çames[i + 2]);

121 
	`Ârötf
(
°dîr
, "See http://code.google.com/p/mongoose/wiki/MongooseManual"

123 
	`Ârötf
(
°dîr
, "Example:\n mongoose -s cert.pem -p 80,443s -dÇo\n");

124 
	`exô
(
EXIT_FAILURE
);

125 
	}
}

127 
	$vîify_documít_roŸ
(c⁄° *
roŸ
) {

128 c⁄° *
p
, *
∑th
;

129 
buf
[
PATH_MAX
];

130 
°©
 
°
;

132 
∑th
 = 
roŸ
;

133 i‡((
p
 = 
	`°rchr
(
roŸ
, ',')Ë!
NULL
 && (
size_t
Ë’ -ÑoŸË< (
buf
)) {

134 
	`°∫˝y
(
buf
, 
roŸ
, 
p
 -Ñoot);

135 
∑th
 = 
buf
;

138 i‡(
	`°©
(
∑th
, &
°
Ë!0 || !
	`S_ISDIR
(°.
°_mode
)) {

139 
	`dõ
("InvÆidÑoŸ dúe˘‹y: \"%s\"", 
roŸ
);

141 
	}
}

143 *
	$sdup
(c⁄° *
°r
) {

144 *
p
;

145 i‡((
p
 = 
	`mÆloc
(
	`°æí
(
°r
Ë+ 1)Ë!
NULL
) {

146 
	`°r˝y
(
p
, 
°r
);

148  
p
;

149 
	}
}

151 
	$£t_›ti⁄
(**
›ti⁄s
, c⁄° *
«me
, c⁄° *
vÆue
) {

152 
i
;

154 i‡(!
	`°rcmp
(
«me
, "document_root") || !(strcmp(name, "r"))) {

155 
	`vîify_documít_roŸ
(
vÆue
);

158 
i
 = 0; i < 
MAX_OPTIONS
 - 3; i++) {

159 i‡(
›ti⁄s
[
i
] =
NULL
) {

160 
›ti⁄s
[
i
] = 
	`sdup
(
«me
);

161 
›ti⁄s
[
i
 + 1] = 
	`sdup
(
vÆue
);

162 
›ti⁄s
[
i
 + 2] = 
NULL
;

167 i‡(
i
 =
MAX_OPTIONS
 - 3) {

168 
	`dõ
("%s", "Too many options specified");

170 
	}
}

172 
	$¥o˚ss_comm™d_löe_¨gumíts
(*
¨gv
[], **
›ti⁄s
) {

173 
löe
[512], 
›t
[512], 
vÆ
[512], *
p
;

174 
FILE
 *
Â
 = 
NULL
;

175 
size_t
 
i
, 
löe_no
 = 0;

177 
›ti⁄s
[0] = 
NULL
;

180 i‡(
¨gv
[1] !
NULL
 &&árgv[2] == NULL) {

181 
	`¢¥ötf
(
c⁄fig_fûe
, (c⁄fig_fûe), "%s", 
¨gv
[1]);

182 } i‡((
p
 = 
	`°ºchr
(
¨gv
[0], 
DIRSEP
)Ë=
NULL
) {

184 
	`¢¥ötf
(
c⁄fig_fûe
, (c⁄fig_fûe), "%s", 
CONFIG_FILE
);

186 
	`¢¥ötf
(
c⁄fig_fûe
, (config_file), "%.*s%c%s",

187 (Ë(
p
 - 
¨gv
[0]),árgv[0], 
DIRSEP
, 
CONFIG_FILE
);

190 
Â
 = 
	`f›í
(
c⁄fig_fûe
, "r");

193 i‡(
¨gv
[1] !
NULL
 &&árgv[2] =NULL && 
Â
 == NULL) {

194 
	`dõ
("C™nŸ o≥¿c⁄fig fûê%s: %s", 
c⁄fig_fûe
, 
	`°ªº‹
(
î∫o
));

198 i‡(
Â
 !
NULL
) {

199 
	`Ârötf
(
°dîr
, "Lﬂdög c⁄fig fûê%s\n", 
c⁄fig_fûe
);

202 
	`fgës
(
löe
, ÷öe), 
Â
Ë!
NULL
) {

204 
löe_no
++;

207 i‡(
löe
[0] == '#' ||Üine[0] == '\n')

210 i‡(
	`ssˇnf
(
löe
, "%†%[^\r\n#]", 
›t
, 
vÆ
) != 2) {

211 
	`dõ
("%s:Üöê%d i†övÆid", 
c⁄fig_fûe
, (Ë
löe_no
);

213 
	`£t_›ti⁄
(
›ti⁄s
, 
›t
, 
vÆ
);

216 (Ë
	`f˛o£
(
Â
);

220 
i
 = 1; 
¨gv
[i] !
NULL
; i += 2) {

221 i‡(
¨gv
[
i
][0] !'-' ||árgv[ò+ 1] =
NULL
) {

222 
	`show_ußge_™d_exô
();

224 
	`£t_›ti⁄
(
›ti⁄s
, &
¨gv
[
i
][1],árgv[i + 1]);

226 
	}
}

228 
	$öô_£rvî_«me
() {

229 
	`¢¥ötf
(
£rvî_«me
, (server_name), "Mongoose web server v.%s",

230 
	`mg_vîsi⁄
());

231 
	}
}

233 
	$°¨t_m⁄goo£
(
¨gc
, *
¨gv
[]) {

234 *
›ti⁄s
[
MAX_OPTIONS
];

235 
i
;

238 i‡(
¨gc
 > 1 && 
¨gv
[1][0] == '-' &&árgv[1][1] == 'A') {

239 i‡(
¨gc
 != 6) {

240 
	`show_ußge_™d_exô
();

242 
	`exô
(
	`mg_edô_∑ssw‹ds
(
¨gv
[2],árgv[3],árgv[4],árgv[5]) ?

243 
EXIT_SUCCESS
 : 
EXIT_FAILURE
);

247 i‡(
¨gc
 =2 && (!
	`°rcmp
(
¨gv
[1], "-h") || !strcmp(argv[1], "--help"))) {

248 
	`show_ußge_™d_exô
();

252 
	`¥o˚ss_comm™d_löe_¨gumíts
(
¨gv
, 
›ti⁄s
);

255 
	`sig«l
(
SIGTERM
, 
sig«l_h™dÀr
);

256 
	`sig«l
(
SIGINT
, 
sig«l_h™dÀr
);

259 
˘x
 = 
	`mg_°¨t
(
NULL
, NULL, (c⁄° **Ë
›ti⁄s
);

260 
i
 = 0; 
›ti⁄s
[i] !
NULL
; i++) {

261 
	`‰ì
(
›ti⁄s
[
i
]);

264 i‡(
˘x
 =
NULL
) {

265 
	`dõ
("%s", "FailedÅo start Mongoose. Maybe some optionsáre "

269 
	}
}

271 #ifde‡
_WIN32


272 
SERVICE_STATUS
 
	gss
;

273 
SERVICE_STATUS_HANDLE
 
	ghSètus
;

274 c⁄° *
	g£rvi˚_magic_¨gumít
 = "--";

276 
WINAPI
 
	$C⁄åﬁH™dÀr
(
DWORD
 
code
) {

277 i‡(
code
 =
SERVICE_CONTROL_STOP
 || codê=
SERVICE_CONTROL_SHUTDOWN
) {

278 
ss
.
dwWö32ExôCode
 = 0;

279 
ss
.
dwCuºítSèã
 = 
SERVICE_STOPPED
;

281 
	`SëSîvi˚Sètus
(
hSètus
, &
ss
);

282 
	}
}

284 
WINAPI
 
	$Sîvi˚Maö
() {

285 
ss
.
dwSîvi˚Ty≥
 = 
SERVICE_WIN32
;

286 
ss
.
dwCuºítSèã
 = 
SERVICE_RUNNING
;

287 
ss
.
dwC⁄åﬁsAc˚±ed
 = 
SERVICE_ACCEPT_STOP
 | 
SERVICE_ACCEPT_SHUTDOWN
;

289 
hSètus
 = 
	`Regi°îSîvi˚CålH™dÀr
(
£rvî_«me
, 
C⁄åﬁH™dÀr
);

290 
	`SëSîvi˚Sètus
(
hSètus
, &
ss
);

292 
ss
.
dwCuºítSèã
 =
SERVICE_RUNNING
) {

293 
	`SÀï
(1000);

295 
	`mg_°›
(
˘x
);

297 
ss
.
dwCuºítSèã
 = 
SERVICE_STOPPED
;

298 
ss
.
dwWö32ExôCode
 = (
DWORD
) -1;

299 
	`SëSîvi˚Sètus
(
hSètus
, &
ss
);

300 
	}
}

302 
	#ID_TRAYICON
 100

	)

303 
	#ID_QUIT
 101

	)

304 
	#ID_EDIT_CONFIG
 102

	)

305 
	#ID_SEPARATOR
 103

	)

306 
	#ID_INSTALL_SERVICE
 104

	)

307 
	#ID_REMOVE_SERVICE
 105

	)

308 
	#ID_ICON
 200

	)

309 
NOTIFYICONDATA
 
	gTøyIc⁄
;

311 
	$edô_c⁄fig_fûe
() {

312 c⁄° **
«mes
, *
vÆue
;

313 
FILE
 *
Â
;

314 
i
;

315 
cmd
[200];

318 i‡((
Â
 = 
	`f›í
(
c⁄fig_fûe
, "r")Ë!
NULL
) {

319 
	`f˛o£
(
Â
);

320 } i‡((
Â
 = 
	`f›í
(
c⁄fig_fûe
, "a+")Ë!
NULL
) {

321 
	`Ârötf
(
Â
,

326 
«mes
 = 
	`mg_gë_vÆid_›ti⁄_«mes
();

327 
i
 = 0; 
«mes
[i] !
NULL
; i += 3) {

328 
vÆue
 = 
	`mg_gë_›ti⁄
(
˘x
, 
«mes
[
i
]);

329 
	`Ârötf
(
Â
, "# %†%s\n", 
«mes
[
i
 + 1], *
vÆue
 ? value : "<value>");

331 
	`f˛o£
(
Â
);

334 
	`¢¥ötf
(
cmd
, (cmd), "nŸïad.exê%s", 
c⁄fig_fûe
);

335 
	`WöExec
(
cmd
, 
SW_SHOW
);

336 
	}
}

338 
	$show_îr‹
() {

339 
buf
[256];

340 
	`F‹m©Mesßge
(
FORMAT_MESSAGE_FROM_SYSTEM
 | 
FORMAT_MESSAGE_IGNORE_INSERTS
,

341 
NULL
, 
	`GëLa°Eº‹
(),

342 
	`MAKELANGID
(
LANG_NEUTRAL
, 
SUBLANG_DEFAULT
),

343 
buf
, (buf), 
NULL
);

344 
	`MesßgeBox
(
NULL
, 
buf
, "Eº‹", 
MB_OK
);

345 
	}
}

347 
	$m™age_£rvi˚
(
a˘i⁄
) {

348 c⁄° *
£rvi˚_«me
 = "Mongoose";

349 
SC_HANDLE
 
hSCM
 = 
NULL
, 
hSîvi˚
 = NULL;

350 
SERVICE_DESCRIPTION
 
des¸
 = {
£rvî_«me
};

351 
∑th
[
PATH_MAX
 + 20];

352 
suc˚ss
 = 1;

354 i‡((
hSCM
 = 
	`O≥nSCM™agî
(
NULL
, NULL, 
a˘i⁄
 =
ID_INSTALL_SERVICE
 ?

355 
GENERIC_WRITE
 : 
GENERIC_READ
)Ë=
NULL
) {

356 
suc˚ss
 = 0;

357 
	`show_îr‹
();

358 } i‡(
a˘i⁄
 =
ID_INSTALL_SERVICE
) {

359 
	`GëModuÀFûeName
(
NULL
, 
∑th
, (path));

360 
	`°∫ˇt
(
∑th
, " ", (path));

361 
	`°∫ˇt
(
∑th
, 
£rvi˚_magic_¨gumít
, (path));

362 
hSîvi˚
 = 
	`Cª©eSîvi˚
(
hSCM
, 
£rvi˚_«me
, service_name,

363 
SERVICE_ALL_ACCESS
, 
SERVICE_WIN32_OWN_PROCESS
,

364 
SERVICE_AUTO_START
, 
SERVICE_ERROR_NORMAL
,

365 
∑th
, 
NULL
, NULL, NULL, NULL, NULL);

366 i‡(
hSîvi˚
) {

367 
	`Ch™geSîvi˚C⁄fig2
(
hSîvi˚
, 
SERVICE_CONFIG_DESCRIPTION
, &
des¸
);

369 
	`show_îr‹
();

371 } i‡(
a˘i⁄
 =
ID_REMOVE_SERVICE
) {

372 i‡((
hSîvi˚
 = 
	`O≥nSîvi˚
(
hSCM
, 
£rvi˚_«me
, 
DELETE
)Ë=
NULL
 ||

373 !
	`DñëeSîvi˚
(
hSîvi˚
)) {

374 
	`show_îr‹
();

376 } i‡((
hSîvi˚
 = 
	`O≥nSîvi˚
(
hSCM
, 
£rvi˚_«me
,

377 
SERVICE_QUERY_STATUS
)Ë=
NULL
) {

378 
suc˚ss
 = 0;

381 
	`Clo£Sîvi˚H™dÀ
(
hSîvi˚
);

382 
	`Clo£Sîvi˚H™dÀ
(
hSCM
);

384  
suc˚ss
;

385 
	}
}

387 
LRESULT
 
CALLBACK
 
	$WödowProc
(
HWND
 
hWnd
, 
UINT
 
msg
, 
WPARAM
 
wP¨am
,

388 
LPARAM
 
lP¨am
) {

389 
SERVICE_TABLE_ENTRY
 
£rvi˚_èbÀ
[] = {

390 {
£rvî_«me
, (
LPSERVICE_MAIN_FUNCTION
Ë
Sîvi˚Maö
},

391 {
NULL
, NULL}

393 
£rvi˚_ö°ÆÀd
;

394 
buf
[200], *
£rvi˚_¨gv
[] = {
__¨gv
[0], 
NULL
};

395 
POINT
 
±
;

396 
HMENU
 
hMíu
;

398 
msg
) {

399 
WM_CREATE
:

400 i‡(
__¨gv
[1] !
NULL
 &&

401 !
	`°rcmp
(
__¨gv
[1], 
£rvi˚_magic_¨gumít
)) {

402 
	`°¨t_m⁄goo£
(1, 
£rvi˚_¨gv
);

403 
	`SèπSîvi˚CålDi•©chî
(
£rvi˚_èbÀ
);

404 
	`exô
(
EXIT_SUCCESS
);

406 
	`°¨t_m⁄goo£
(
__¨gc
, 
__¨gv
);

409 
WM_COMMAND
:

410 
	`LOWORD
(
wP¨am
)) {

411 
ID_QUIT
:

412 
	`mg_°›
(
˘x
);

413 
	`Shñl_NŸifyIc⁄
(
NIM_DELETE
, &
TøyIc⁄
);

414 
	`Po°QuôMesßge
(0);

416 
ID_EDIT_CONFIG
:

417 
	`edô_c⁄fig_fûe
();

419 
ID_INSTALL_SERVICE
:

420 
ID_REMOVE_SERVICE
:

421 
	`m™age_£rvi˚
(
	`LOWORD
(
wP¨am
));

425 
WM_USER
:

426 
lP¨am
) {

427 
WM_RBUTTONUP
:

428 
WM_LBUTTONUP
:

429 
WM_LBUTTONDBLCLK
:

430 
hMíu
 = 
	`Cª©eP›upMíu
();

431 
	`AµídMíu
(
hMíu
, 
MF_STRING
 | 
MF_GRAYED
, 
ID_SEPARATOR
, 
£rvî_«me
);

432 
	`AµídMíu
(
hMíu
, 
MF_SEPARATOR
, 
ID_SEPARATOR
, "");

433 
£rvi˚_ö°ÆÀd
 = 
	`m™age_£rvi˚
(0);

434 
	`¢¥ötf
(
buf
, (buf), "NT service: %s installed",

435 
£rvi˚_ö°ÆÀd
 ? "" : "not");

436 
	`AµídMíu
(
hMíu
, 
MF_STRING
 | 
MF_GRAYED
, 
ID_SEPARATOR
, 
buf
);

437 
	`AµídMíu
(
hMíu
, 
MF_STRING
 | (
£rvi˚_ö°ÆÀd
 ? 
MF_GRAYED
 : 0),

438 
ID_INSTALL_SERVICE
, "Install");

439 
	`AµídMíu
(
hMíu
, 
MF_STRING
 | (!
£rvi˚_ö°ÆÀd
 ? 
MF_GRAYED
 : 0),

440 
ID_REMOVE_SERVICE
, "Deinstall");

441 
	`AµídMíu
(
hMíu
, 
MF_SEPARATOR
, 
ID_SEPARATOR
, "");

442 
	`AµídMíu
(
hMíu
, 
MF_STRING
, 
ID_EDIT_CONFIG
, "Edit config file");

443 
	`AµídMíu
(
hMíu
, 
MF_STRING
, 
ID_QUIT
, "Exit");

444 
	`GëCurs‹Pos
(&
±
);

445 
	`SëF‹egroundWödow
(
hWnd
);

446 
	`TøckP›upMíu
(
hMíu
, 0, 
±
.
x
,Öt.
y
, 0, 
hWnd
, 
NULL
);

447 
	`Po°Mesßge
(
hWnd
, 
WM_NULL
, 0, 0);

448 
	`De°royMíu
(
hMíu
);

454  
	`DefWödowProc
(
hWnd
, 
msg
, 
wP¨am
, 
lP¨am
);

455 
	}
}

457 
WINAPI
 
	$WöMaö
(
HINSTANCE
 
hIn°
, HINSTANCE 
hPªv
, 
LPSTR
 
cmdlöe
, 
show
) {

458 
WNDCLASS
 
˛s
;

459 
HWND
 
hWnd
;

460 
MSG
 
msg
;

462 
	`öô_£rvî_«me
();

463 
	`mem£t
(&
˛s
, 0, (cls));

464 
˛s
.
Õ‚WndProc
 = (
WNDPROC
Ë
WödowProc
;

465 
˛s
.
hIc⁄
 = 
	`LﬂdIc⁄
(
NULL
, 
IDI_APPLICATION
);

466 
˛s
.
ÕszCœssName
 = 
£rvî_«me
;

468 
	`Regi°îCœss
(&
˛s
);

469 
hWnd
 = 
	`Cª©eWödow
(
˛s
.
ÕszCœssName
, 
£rvî_«me
, 
WS_OVERLAPPEDWINDOW
,

470 0, 0, 0, 0, 
NULL
, NULL, NULL, NULL);

471 
	`ShowWödow
(
hWnd
, 
SW_HIDE
);

473 
TøyIc⁄
.
cbSize
 = (TrayIcon);

474 
TøyIc⁄
.
uID
 = 
ID_TRAYICON
;

475 
TøyIc⁄
.
uFœgs
 = 
NIF_ICON
 | 
NIF_MESSAGE
 | 
NIF_TIP
;

476 
TøyIc⁄
.
hIc⁄
 = 
	`LﬂdImage
(
	`GëModuÀH™dÀ
(
NULL
), 
	`MAKEINTRESOURCE
(
ID_ICON
),

477 
IMAGE_ICON
, 16, 16, 0);

478 
TøyIc⁄
.
hWnd
 = hWnd;

479 
	`¢¥ötf
(
TøyIc⁄
.
szTù
, (TøyIc⁄.szTù), "%s", 
£rvî_«me
);

480 
TøyIc⁄
.
uCÆlbackMesßge
 = 
WM_USER
;

481 
	`Shñl_NŸifyIc⁄
(
NIM_ADD
, &
TøyIc⁄
);

483 
	`GëMesßge
(&
msg
, 
hWnd
, 0, 0)) {

484 
	`Tøn¶©eMesßge
(&
msg
);

485 
	`Di•©chMesßge
(&
msg
);

487 
	}
}

489 
	$maö
(
¨gc
, *
¨gv
[]) {

490 
	`öô_£rvî_«me
();

491 
	`°¨t_m⁄goo£
(
¨gc
, 
¨gv
);

492 
	`¥ötf
("%s started onÖort(s) %s with webÑoot [%s]\n",

493 
£rvî_«me
, 
	`mg_gë_›ti⁄
(
˘x
, "listening_ports"),

494 
	`mg_gë_›ti⁄
(
˘x
, "document_root"));

495 
exô_Êag
 == 0) {

496 
	`¶ìp
(1);

498 
	`¥ötf
("Exiting on signal %d, waiting forállÅhreadsÅo finish...",

499 
exô_Êag
);

500 
	`fÊush
(
°dout
);

501 
	`mg_°›
(
˘x
);

502 
	`¥ötf
("%s", " done.\n");

504  
EXIT_SUCCESS
;

505 
	}
}

	@external/vpiotr-mongoose-cpp/mongcpp.cpp

12 
	~"m⁄g˝p.h
"

14 
	~<s°ªam
>

15 
	~<c°rög
>

17 
usög
 
«me•a˚
 
	gm⁄goo£
;

19 
MëhodM≠Gu¨d
 
	gM⁄goo£Sîvî
::
m_mëhodM≠
;

21 
	gãm∂©e
 <
˛ass
 
	gT
>

22 
ölöe
 
	g°d
::
°rög
 
	$toSåög
 (c⁄° 
T
& 
t
)

24 
°d
::
°rög°ªam
 
ss
;

25 
ss
 << 
t
;

26  
ss
.
	`°r
();

27 
	}
}

29 
ölöe
 
°rögToUI¡Def
(c⁄° 
°d
::
°rög
 &
°r
, 
defVÆ
)

31 
usög
 
«me•a˚
 
	g°d
;

32 
	gªs
;

33 
i°rög°ªam
 
cSåóm
(
°r
);

34 i‡(!(
	gcSåóm
 >> 
	gªs
)) {

35 
	gªs
 = 
defVÆ
;

37  
	gªs
;

40 
	gM⁄goo£C⁄√˘i⁄
::
	$M⁄goo£C⁄√˘i⁄
(
mg_c⁄√˘i⁄
 *
c⁄n
): 
	$m_c⁄n
(
c⁄n
)

42 
	}
}

44 
M⁄goo£C⁄√˘i⁄
::~
	$M⁄goo£C⁄√˘i⁄
()

46 
	}
}

48 
M⁄goo£C⁄√˘i⁄
::
	$wrôe
(c⁄° *
buf
, 
size_t
 
Àn
)

50  
	`mg_wrôe
(
m_c⁄n
, 
buf
, 
Àn
);

51 
	}
}

53 
	gM⁄goo£C⁄√˘i⁄
::
wrôe
(c⁄° 
°d
::
°rög
 &
ãxt
)

55  
wrôe
(
ãxt
.
c_°r
(),Åext.
Àngth
());

58 
	gM⁄goo£C⁄√˘i⁄
::
	$ªad
(*
buf
, 
size_t
 
Àn
)

60  
	`mg_ªad
(
m_c⁄n
, 
buf
, 
Àn
);

61 
	}
}

63 
	gM⁄goo£C⁄√˘i⁄
::
£ndAuth‹iz©i⁄Reque°
(c⁄° 
°d
::
°rög
 &
n⁄˚
)

65 i‡(
n⁄˚
.
em±y
())

66 
mg_£nd_auth‹iz©i⁄_ªque°
(
m_c⁄n
, 
NULL
);

68 
mg_£nd_auth‹iz©i⁄_ªque°
(
m_c⁄n
, 
n⁄˚
.
c_°r
());

71 
boﬁ
 
	gM⁄goo£C⁄√˘i⁄
::
gëHódî
(c⁄° 
°d
::
°rög
 &
«me
, std::°rög &
ouçut
) const

73 c⁄° *
vÆue
 = 
mg_gë_hódî
(
m_c⁄n
, 
«me
.
c_°r
());

74 i‡(
	gvÆue
 !
NULL
)

76 
ouçut
 = 
°d
::
°rög
(
vÆue
);

77  
	gåue
;

79 
	gouçut
 = "";

80  
	gÁl£
;

84 
boﬁ
 
	gM⁄goo£C⁄√˘i⁄
::
gëCookõ
(c⁄° 
°d
::
°rög
 &
«me
, std::°rög &
ouçut
) const

86 c⁄° 
BUF_LEN
 = 4096;

87 
	gbuf„r
[
BUF_LEN
];

89 
	gªadC¡
 = 
mg_gë_cookõ
(
m_c⁄n
, 
«me
.
c_°r
(), 
buf„r
, 
BUF_LEN
 - 1);

91 i‡(
	gªadC¡
 >= 0) {

92 
buf„r
[
BUF_LEN
 - 1] = '\0';

93 
	gouçut
 = 
buf„r
;

94  
	gåue
;

96 
	gouçut
 = "";

97  
	gÁl£
;

101 
mg_c⁄√˘i⁄
 *
	gM⁄goo£C⁄√˘i⁄
::
	$gëInfo
()

103  
m_c⁄n
;

104 
	}
}

107 
	gM⁄goo£Reque°
::
	$M⁄goo£Reque°
(
mg_c⁄√˘i⁄
 *
c⁄n
, 
mg_ªque°_öfo
* 
öfo
):

108 
	`m_c⁄n
(
c⁄n
), 
	$m_öfo
(
öfo
)

110 
	}
}

112 
	gM⁄goo£Reque°
::~
	$M⁄goo£Reque°
()

114 
	}
}

116 c⁄° 
°d
::
°rög
 
M⁄goo£Reque°
::
	$gëReque°Mëhod
() const

118  
°d
::
	`°rög
(
m_öfo
->
ªque°_mëhod
);

119 
	}
}

121 
M⁄goo£Reque°MëhodCode
 
	gM⁄goo£Reque°
::
	$gëReque°MëhodCode
() const

124  
M⁄goo£Sîvî
::
	`mëhodTextToCode
(
	`gëReque°Mëhod
());

125 
	}
}

127 c⁄° 
	g°d
::
°rög
 
M⁄goo£Reque°
::
	$gëUri
() const

129  
°d
::
	`°rög
(
m_öfo
->
uri
);

130 
	}
}

132 c⁄° 
	g°d
::
°rög
 
M⁄goo£Reque°
::
	$gëHâpVîsi⁄
() const

134  
°d
::
	`°rög
(
m_öfo
->
hâp_vîsi⁄
);

135 
	}
}

138 c⁄° 
	g°d
::
°rög
 
M⁄goo£Reque°
::
	$gëQuîySåög
() const

140 i‡(
m_öfo
->
quîy_°rög
 !
NULL
)

141  
°d
::
	`°rög
(
m_öfo
->
quîy_°rög
);

144 
	}
}

147 c⁄° 
	g°d
::
°rög
 
M⁄goo£Reque°
::
	$ªadQuîySåög
() const

149 c⁄° *
˛
 = 
	`mg_gë_hódî
(
m_c⁄n
, "Content-Length");

150 
size_t
 
buf_Àn
;

151 i‡(
˛
 !
NULL
)

152 
buf_Àn
 = 
	`°rögToUI¡Def
(
°d
::
	`°rög
(
˛
), 0);

154 
buf_Àn
 = 0;

156 
°d
::
°rög
 
ªs
;

158 i‡(
buf_Àn
 > 0)

160 *
buf
 = 
√w
 [
buf_Àn
+1];

164 i‡(
buf_Àn
 > 2) {

165 
	`mg_ªad
(
m_c⁄n
, 
buf
, 2);

166 
	`mg_ªad
(
m_c⁄n
, 
buf
 + 2, 
buf_Àn
 - 2);

168 
	`mg_ªad
(
m_c⁄n
, 
buf
, 
buf_Àn
);

171 
buf
[
buf_Àn
] = '\0';

172 
ªs
 = 
°d
::
	`°rög
(
buf
);

173 
dñëe
[] 
buf
;

176  
ªs
;

177 
	}
}

179 c⁄° 
	g°d
::
°rög
 
M⁄goo£Reque°
::
	$gëRemŸeU£r
() const

181  
°d
::
	`°rög
(
m_öfo
->
ªmŸe_u£r
);

182 
	}
}

184 c⁄° 
	g°d
::
°rög
 
M⁄goo£Reque°
::
	$gëLogMesßge
() const

186  
°d
::
	`°rög
(
m_öfo
->
log_mesßge
);

187 
	}
}

189 
	gM⁄goo£Reque°
::
	$gëRemŸeIp
() const

191  
m_öfo
->
ªmŸe_ù
;

192 
	}
}

194 
	gM⁄goo£Reque°
::
	$gëRemŸeP‹t
() const

196  
m_öfo
->
ªmŸe_p‹t
;

197 
	}
}

199 
	gM⁄goo£Reque°
::
	$gëSètusCode
() const

201  
m_öfo
->
°©us_code
;

202 
	}
}

204 
boﬁ
 
	gM⁄goo£Reque°
::
	$isS¶
() const

206  (
m_öfo
->
is_s¶
 > 0);

207 
	}
}

209 
mg_ªque°_öfo
* 
	gM⁄goo£Reque°
::
	$gëInfo
() const

211  
m_öfo
;

212 
	}
}

214 
boﬁ
 
	gM⁄goo£Reque°
::
gëV¨
(c⁄° 
°d
::
°rög
 &
«me
, std::°rög &
ouçut
) const

216 c⁄° 
MAX_VAR_LEN
 = 4096;

217 
	gbuf„r
[
MAX_VAR_LEN
];

218 c⁄° *
	gqs
 = 
m_öfo
->
quîy_°rög
;

219 
	gªadC¡
 = 
mg_gë_v¨
(
qs
, 
°æí
(q†=
NULL
 ? "" : qs), 
«me
.
c_°r
(), 
buf„r
, 
MAX_VAR_LEN
 - 1);

220 i‡(
	gªadC¡
 >= 0) {

221 
buf„r
[
MAX_VAR_LEN
 - 1] = '\0';

222 
	gouçut
 = 
buf„r
;

223  
	gåue
;

225 
	gouçut
.
˛ór
();

226  
	gÁl£
;

231 
	gM⁄goo£Re•⁄£
::
	$M⁄goo£Re•⁄£
(
mg_c⁄√˘i⁄
 *
c⁄n
): 
	$m_c⁄n
(
c⁄n
)

233 
	}
}

235 
M⁄goo£Re•⁄£
::~
	$M⁄goo£Re•⁄£
()

237 
	}
}

239 
M⁄goo£Re•⁄£
::
	$wrôe
()

241 
	`mg_wrôe
(
m_c⁄n
, 
m_ãxt
.
	`c_°r
(), m_ãxt.
	`Àngth
());

242 
m_ãxt
.
	`˛ór
();

243 
	}
}

245 c⁄° *
	gM⁄goo£Re•⁄£
::
	$gëHâpSètusDesc
(
°©usCode
)

247 c⁄° *
ªs
;

249 
°©usCode
) {

250 100: 
ªs
 = "Continue";

252 101: 
ªs
 = "Switching Protocols";

255 200: 
ªs
 = "OK";

257 201: 
ªs
 = "Created";

259 202: 
ªs
 = "Accepted";

261 203: 
ªs
 = "Non-Authoritative Information";

263 204: 
ªs
 = "No Content";

265 205: 
ªs
 = "Reset Content";

267 206: 
ªs
 = "Partial Content";

270 300: 
ªs
 = "Multiple Choices";

272 301: 
ªs
 = "Moved Permanently";

274 302: 
ªs
 = "Found";

276 303: 
ªs
 = "See Other";

278 304: 
ªs
 = "Not Modified";

280 305: 
ªs
 = "Use Proxy";

282 306: 
ªs
 = "Switch Proxy";

284 307: 
ªs
 = "Temporary Redirect";

287 400: 
ªs
 = "Bad Request";

289 401: 
ªs
 = "Unauthorized";

291 402: 
ªs
 = "Payment Required";

293 403: 
ªs
 = "Forbidden";

295 404: 
ªs
 = "Not Found";

297 405: 
ªs
 = "Method Not Allowed";

299 406: 
ªs
 = "Not Acceptable";

301 407: 
ªs
 = "Proxy Authentication Required";

303 408: 
ªs
 = "Request Timeout";

305 409: 
ªs
 = "Conflict";

307 410: 
ªs
 = "Gone";

309 411: 
ªs
 = "Length Required";

311 412: 
ªs
 = "Precondition Failed";

313 413: 
ªs
 = "Request Entity Too Large";

315 414: 
ªs
 = "Request-URI Too Long";

317 415: 
ªs
 = "Unsupported Media Type";

319 416: 
ªs
 = "Requested Range Not Satisfiable";

321 417: 
ªs
 = "Expectation Failed";

324 500: 
ªs
 = "Internal Server Error";

326 501: 
ªs
 = "Not Implemented";

328 502: 
ªs
 = "Bad Gateway";

330 503: 
ªs
 = "Service Unavailable";

332 504: 
ªs
 = "Gateway Timeout";

334 505: 
ªs
 = "HTTP Version Not Supported";

337 
ªs
 = "";

340  
ªs
;

341 
	}
}

343 
	gM⁄goo£Re•⁄£
::
£tSètus
(
code
, c⁄° 
°d
::
°rög
 &
°©usDesc
, c⁄° std::°rög &
hâpVî
)

345 c⁄° *
ªÆSètusDesc
 = 
NULL
;

346 c⁄° *
	gªÆHâpVî
 = 
NULL
;

348 i‡(!
	ghâpVî
.
em±y
()) {

349 
	gªÆHâpVî
 = 
hâpVî
.
c_°r
();

352 
	gªÆHâpVî
 = "HTTP/1.1";

355 i‡(!
	g°©usDesc
.
em±y
()) {

356 
	gªÆSètusDesc
 = 
°©usDesc
.
c_°r
();

358 
	gªÆSètusDesc
 = 
M⁄goo£Re•⁄£
::
gëHâpSètusDesc
(
code
);

361 
	g°d
::
°rög
 
ouçut
 = 
°d
::°rög(
ªÆHâpVî
Ë+ " " + 
toSåög
(
code
Ë+ " " + std::°rög(
ªÆSètusDesc
);

362 
	gm_°©usText
.
ª£t
(
√w
 
°d
::
°rög
(
ouçut
));

365 
	gM⁄goo£Re•⁄£
::
£tSëCookõ
(c⁄° 
°d
::
°rög
 &
«me
, c⁄° std::°rög &
vÆue
)

367 
£tHódîVÆue
("Së-Cookõ", 
«me
+"="+
vÆue
);

370 
	gM⁄goo£Re•⁄£
::
£tLoˇti⁄
(c⁄° 
°d
::
°rög
 &
vÆue
)

372 
£tHódîVÆue
("Loˇti⁄", 
vÆue
);

375 
	gM⁄goo£Re•⁄£
::
£tC⁄ã¡Ty≥
(c⁄° 
°d
::
°rög
 &
vÆue
)

377 i‡(
vÆue
.
em±y
())

378 
£tHódîVÆue
("Content-type", "text/html");

380 
£tHódîVÆue
("C⁄ã¡-ty≥", 
vÆue
);

383 
boﬁ
 
	gM⁄goo£Re•⁄£
::
gëHódîVÆue
(c⁄° 
°d
::
°rög
 &
«me
, std::°rög &
ouçut
)

385 
¥ï¨eHódîVÆues
();

387 
	gRe•⁄£VÆueIndex
::
c⁄°_ôî©‹
 
cô
 = 
m_hódîVÆuesIndex
->
föd
(
«me
);

388 
boﬁ
 
	gªs
 = 
Ál£
;

390 i‡(
	gcô
 !
m_hódîVÆuesIndex
->
íd
()) {

391 
idx
 = 
cô
->
£c⁄d
;

392 
	gouçut
 = (*
m_hódîVÆues
)[
idx
].
£c⁄d
;

393 
	gªs
 = 
åue
;

395 
	gouçut
.
˛ór
();

398  
	gªs
;

402 
	gM⁄goo£Re•⁄£
::
addHódîVÆue
(c⁄° 
°d
::
°rög
 &
«me
, c⁄° std::°rög &
vÆue
)

404 
¥ï¨eHódîVÆues
();

406 
	gidx
 = 
m_hódîVÆues
->
size
();

408 
	gRe•⁄£VÆueIndex
::
ôî©‹
 
cô
 = 
m_hódîVÆuesIndex
->
föd
(
«me
);

409 i‡(
	gcô
 !
m_hódîVÆuesIndex
->
íd
()) {

410 
cô
->
£c⁄d
 = 
idx
;

412 
	gm_hódîVÆuesIndex
->
ö£π
(
°d
::
make_∑ú
<°d::
°rög
, >(
«me
, 
idx
));

415 
	gm_hódîVÆues
->
push_back
(
°d
::
make_∑ú
<°d::
°rög
, std::°rög>(
«me
, 
vÆue
));

418 
	gM⁄goo£Re•⁄£
::
£tHódîVÆue
(c⁄° 
°d
::
°rög
 &
«me
, c⁄° std::°rög &
vÆue
)

420 
¥ï¨eHódîVÆues
();

421 
	gRe•⁄£VÆueIndex
::
c⁄°_ôî©‹
 
cô
 = 
m_hódîVÆuesIndex
->
föd
(
«me
);

422 i‡(
	gcô
 !
m_hódîVÆuesIndex
->
íd
()) {

423 
idx
 = 
cô
->
£c⁄d
;

424 (*
	gm_hódîVÆues
)[
idx
].
	g£c⁄d
 = 
vÆue
;

426 
	gidx
 = 
m_hódîVÆues
->
size
();

427 
	gm_hódîVÆuesIndex
->
ö£π
(
°d
::
make_∑ú
<°d::
°rög
, >(
«me
, 
idx
));

428 
	gm_hódîVÆues
->
push_back
(
°d
::
make_∑ú
<°d::
°rög
, std::°rög>(
«me
, 
vÆue
));

432 
	gM⁄goo£Re•⁄£
::
addC⁄ã¡
(c⁄° 
°d
::
°rög
 &
ãxt
, 
boﬁ
 
addLí
)

434 i‡(
	gaddLí
) {

435 
£tHódîVÆue
("C⁄ã¡-Àngth", 
toSåög
(
ãxt
.
Àngth
()));

436 
addHódî
();

437 
addTextLöe
("");

438 
addText
(
ãxt
);

440 
addHódî
();

441 
addText
(
ãxt
);

445 
	gM⁄goo£Re•⁄£
::
	$£tC⁄√˘i⁄Alive
(
boﬁ
 
kìpAlive
)

447 i‡(
kìpAlive
)

448 
	`£tHódîVÆue
("Connection", "Keep-Alive");

450 
	`£tHódîVÆue
("Connection", "close");

451 
	}
}

453 
	gM⁄goo£Re•⁄£
::
	$£tCacheDißbÀd
()

455 
	`£tHódîVÆue
("Cache-Control", "no-cache, must-revalidate");

456 
	`£tHódîVÆue
("Expires", "Sat, 26 Jul 1997 05:00:00 GMT");

457 
	}
}

459 
	gM⁄goo£Re•⁄£
::
	$addHódî
()

461 i‡(
m_°©usText
.
	`gë
(Ë!
NULL
) {

462 
	`addTextLöe
(*
m_°©usText
);

463 
m_°©usText
.
	`ª£t
();

466 i‡(
m_hódîVÆues
.
	`gë
(Ë!
NULL
) {

467 
Re•⁄£VÆueLi°
::
c⁄°_ôî©‹
 
cô
 = 
m_hódîVÆues
->
	`begö
(), 
ïos
 = m_hódîVÆues->
	`íd
(); cit !=Épos; ++cit)

469 
	`addHódîVÆueToText
(
cô
->
fú°
, cô->
£c⁄d
);

473 
m_hódîVÆues
.
	`ª£t
();

474 
m_hódîVÆuesIndex
.
	`ª£t
();

475 
	}
}

477 
	gM⁄goo£Re•⁄£
::
addHódîVÆueToText
(c⁄° 
°d
::
°rög
 &
«me
, c⁄° std::°rög &
vÆue
)

479 
addTextLöe
(
«me
 + 
°d
::
°rög
(": "Ë+ 
vÆue
);

482 
	gM⁄goo£Re•⁄£
::
addText
(c⁄° 
°d
::
°rög
 &
ãxt
)

484 
m_ãxt
 +
ãxt
;

487 
	gM⁄goo£Re•⁄£
::
addTextLöe
(c⁄° 
°d
::
°rög
 &
ãxt
)

489 
addText
(
ãxt
+
°d
::
°rög
("\r\n"));

492 
Re•⁄£VÆueLi°
 *
	gM⁄goo£Re•⁄£
::
	$¥ï¨eHódîVÆues
()

494 i‡(
m_hódîVÆues
.
	`gë
(Ë=
NULL
) {

495 
m_hódîVÆues
.
	`ª£t
(
√w
 
Re•⁄£VÆueLi°
);

496 
m_hódîVÆuesIndex
.
	`ª£t
(
√w
 
Re•⁄£VÆueIndex
);

499  
m_hódîVÆues
.
	`gë
();

500 
	}
}

503 *
	$LoˇlM⁄goo£EvítH™dÀr
(
mg_evít
 
evítCode
,

504 
mg_c⁄√˘i⁄
 *
c⁄n
,

505 c⁄° 
mg_ªque°_öfo
 *
ªque°_öfo
)

507 
M⁄goo£Sîvî
* 
£rvî
 = (M⁄goo£Sîvî* )
	`mg_ªad_u£r_d©a
(
c⁄n
);

508  
£rvî
->
	`h™dÀEvít
(
evítCode
, 
c⁄n
, 
ªque°_öfo
);

509 
	}
}

512 
	gM⁄goo£Sîvî
::
	$M⁄goo£Sîvî
(): 
	`m_°©usRu¬ög
(
Ál£
), 
	`m_¥ï¨ed
(Ál£), 
	$m_˘x
(
NULL
)

514 
	}
}

516 
	gM⁄goo£Sîvî
::~
	$M⁄goo£Sîvî
()

518 
	`checkSt›≥d
();

519 
	}
}

522 
	gM⁄goo£Sîvî
::
	$£tO±i⁄s
(c⁄° 
SîvîO±i⁄Së
 &
›ti⁄s
)

524 
m_›ti⁄s
 = 
›ti⁄s
;

525 
	}
}

527 
	gM⁄goo£Sîvî
::
£tO±i⁄
(c⁄° 
°d
::
°rög
 &
«me
, c⁄° std::°rög &
vÆue
)

529 
m_›ti⁄s
[
«me
] = 
vÆue
;

532 
	gM⁄goo£Sîvî
::
	$gëO±i⁄s
(
SîvîO±i⁄Së
 &
›ti⁄s
) const

534 
›ti⁄s
 = 
m_›ti⁄s
;

535 
	}
}

537 
boﬁ
 
	gM⁄goo£Sîvî
::
gëO±i⁄VÆue
(c⁄° 
°d
::
°rög
 &
«me
, std::°rög &
vÆue
) const

539 
SîvîO±i⁄Së
::
c⁄°_ôî©‹
 
côî
 = 
m_›ti⁄s
.
föd
(
«me
);

540 i‡(
	gcôî
 !
m_›ti⁄s
.
íd
()) {

541 
vÆue
 = 
côî
->
£c⁄d
;

542  
	gåue
;

544 
	gvÆue
 = "";

545  
	gÁl£
;

549 
	gM⁄goo£Sîvî
::
gëO±i⁄VÆue
(c⁄° 
°d
::
°rög
 &
«me
, std::°rög &
vÆue
, c⁄° std::°rög &
defVÆue
) const

551 
boﬁ
 
found
 = 
gëO±i⁄VÆue
(
«me
, 
vÆue
);

552 i‡(!
	gfound
) {

553 
	gvÆue
 = 
defVÆue
;

557 
	gM⁄goo£Sîvî
::
	$gëVÆidO±i⁄s
(
SîvîO±i⁄Li°
 &
ouçut
)

559 c⁄° **
«mes
;

560 c⁄° 
SEP_CHAR
 = ';';

562 
«mes
 = 
	`mg_gë_vÆid_›ti⁄_«mes
();

564 
i
 = 0; 
«mes
[i] !
NULL
; i += 3) {

565 
ouçut
.
	`push_back
(

566 
°d
::
	`°rög
(
«mes
[
i
]Ë+ 
SEP_CHAR
 +

567 
°d
::
	`°rög
(
«mes
[
i
] + 1Ë+ 
SEP_CHAR
 +

568 
°d
::
	`°rög
(
«mes
[
i
 + 2] =
NULL
 ? "" :Çames[i + 2])

571 
	}
}

573 
	g°d
::
°rög
 
M⁄goo£Sîvî
::
	$gëVîsi⁄
()

575  
°d
::
	`°rög
(
	`mg_vîsi⁄
());

576 
	}
}

578 
	gM⁄goo£Sîvî
::
ˇlcMD5
(c⁄° 
°d
::
°rög
 &
ãxt
, std::°rög &
ouçut
)

580 
buf
[33];

581 
mg_md5
(
buf
, 
ãxt
.
c_°r
());

582 
	gouçut
 = 
buf
;

586 
	gM⁄goo£Sîvî
::
	$öô
()

588 
	`checkMëhodM≠
();

589 
	}
}

591 
	gM⁄goo£Sîvî
::
	$°¨t
()

593 i‡(!
m_¥ï¨ed
) {

594 
	`öô
();

595 
m_¥ï¨ed
 = 
åue
;

598 
	`checkSt›≥d
();

600 
m_˘x
 = 
	`mg_°¨t
(
LoˇlM⁄goo£EvítH™dÀr
, (*Ë
this
, 
	`¥ï¨eO±i⁄s
());

601 
m_°©usRu¬ög
 = 
åue
;

602 
	}
}

604 
	gM⁄goo£Sîvî
::
	$°›
()

606 i‡(!
	`isRu¬ög
())

608 
	`mg_°›
(
m_˘x
);

609 
	`u≈ª∑ªO±i⁄s
();

610 
m_˘x
 = 
NULL
;

611 
m_°©usRu¬ög
 = 
Ál£
;

612 
	}
}

614 
boﬁ
 
	gM⁄goo£Sîvî
::
	$isRu¬ög
()

616  
m_°©usRu¬ög
;

617 
	}
}

620 #¥agm®
w¨nög
–
dißbÀ
 : 4716 )

621 #¥agm®
w¨nög
–
dißbÀ
 : 4100 )

622 
boﬁ
 
	gM⁄goo£Sîvî
::
	$h™dÀEvít
(
SîvîH™dlögEvít
 
evítCode
, 
M⁄goo£C⁄√˘i⁄
 &
c⁄√˘i⁄
, c⁄° 
M⁄goo£Reque°
 &
ªque°
, 
M⁄goo£Re•⁄£
 &
ª•⁄£
)

624  
NULL
;

625 
	}
}

627 *
	gM⁄goo£Sîvî
::
	$h™dÀEvít
(
SîvîH™dlögEvít
 
evítCode
,

628 
mg_c⁄√˘i⁄
 *
c⁄n
,

629 c⁄° 
mg_ªque°_öfo
 *
ªque°_öfo
)

631 *
¥o˚s£d
 = 
ªöãΩªt_ˇ°
<*> (
c⁄°_ˇ°
<*>("yes"));

632 
°d
::
auto_±r
<
M⁄goo£C⁄√˘i⁄
> 
	`c⁄√˘i⁄
(
	`√wC⁄√˘i⁄
(
c⁄n
));

633 
°d
::
auto_±r
<
M⁄goo£Reque°
> 
	`ªque°
(
	`√wReque°
(
c⁄n
, 
ªque°_öfo
));

634 
°d
::
auto_±r
<
M⁄goo£Re•⁄£
> 
	`ª•⁄£
(
	`√wRe•⁄£
(
c⁄n
));

636 i‡(
	`h™dÀEvít
(
evítCode
, *
c⁄√˘i⁄
, *
ªque°
, *
ª•⁄£
))

637  
¥o˚s£d
;

639  
NULL
;

640 
	}
}

642 
M⁄goo£C⁄√˘i⁄
 *
	gM⁄goo£Sîvî
::
	$√wC⁄√˘i⁄
(
mg_c⁄√˘i⁄
 *
c⁄n
)

644  
√w
 
	`M⁄goo£C⁄√˘i⁄
(
c⁄n
);

645 
	}
}

647 
M⁄goo£Reque°
 *
	gM⁄goo£Sîvî
::
	$√wReque°
(
mg_c⁄√˘i⁄
 *
c⁄n
, c⁄° 
mg_ªque°_öfo
 *
ªque°
)

649  
√w
 
	`M⁄goo£Reque°
(
c⁄n
, 
c⁄°_ˇ°
<
mg_ªque°_öfo
 *>(
ªque°
));

650 
	}
}

652 
M⁄goo£Re•⁄£
 *
	gM⁄goo£Sîvî
::
	$√wRe•⁄£
(
mg_c⁄√˘i⁄
 *
c⁄n
)

654  
√w
 
	`M⁄goo£Re•⁄£
(
c⁄n
);

655 
	}
}

657 
	gM⁄goo£Sîvî
::
	$checkSt›≥d
()

659 i‡(
m_°©usRu¬ög
)

660 
	`°›
();

661 
	}
}

663 c⁄° **
	gM⁄goo£Sîvî
::
	$¥ï¨eO±i⁄s
()

665 
	`u≈ª∑ªO±i⁄s
();

666 
SîvîO±i⁄Së
::
c⁄°_ôî©‹
 
cô
 = 
m_›ti⁄s
.
	`begö
(), 
ïos
 = m_›ti⁄s.
	`íd
(); cit !=Épos; ++cit)

668 
m_›ti⁄St‹age
.
	`push_back
(
cô
->
fú°
.
	`c_°r
());

669 
m_›ti⁄St‹age
.
	`push_back
(
cô
->
£c⁄d
.
	`c_°r
());

671 
m_›ti⁄St‹age
.
	`push_back
(
NULL
);

672  &(*
m_›ti⁄St‹age
.
	`begö
());

673 
	}
}

675 
	gM⁄goo£Sîvî
::
	$u≈ª∑ªO±i⁄s
()

677 
m_›ti⁄St‹age
.
	`˛ór
();

678 
	}
}

680 
	gM⁄goo£Sîvî
::
	$checkMëhodM≠
()

682 i‡(
m_mëhodM≠
.
	`gë
(Ë=
NULL
)

684 
m_mëhodM≠
.
	`ª£t
(
√w
 
MëhodM≠
);

686 
m_mëhodM≠
->
	`ö£π
(
°d
::
	`make_∑ú
("GET", 
rmcGë
));

687 
m_mëhodM≠
->
	`ö£π
(
°d
::
	`make_∑ú
("POST", 
rmcPo°
));

688 
m_mëhodM≠
->
	`ö£π
(
°d
::
	`make_∑ú
("HEAD", 
rmcHód
));

689 
m_mëhodM≠
->
	`ö£π
(
°d
::
	`make_∑ú
("PUT", 
rmcPut
));

690 
m_mëhodM≠
->
	`ö£π
(
°d
::
	`make_∑ú
("DELETE", 
rmcDñëe
));

691 
m_mëhodM≠
->
	`ö£π
(
°d
::
	`make_∑ú
("TRACE", 
rmcTø˚
));

692 
m_mëhodM≠
->
	`ö£π
(
°d
::
	`make_∑ú
("OPTIONS", 
rmcO±i⁄s
));

694 
	}
}

696 
M⁄goo£Reque°MëhodCode
 
	gM⁄goo£Sîvî
::
mëhodTextToCode
(c⁄° 
°d
::
°rög
 &
ãxt
)

698 
MëhodM≠
::
c⁄°_ôî©‹
 
cô
 = 
m_mëhodM≠
->
föd
(
ãxt
);

699 i‡(
	gcô
 =
m_mëhodM≠
->
íd
())

700  
rmcUndef
;

702  
	gcô
->
	g£c⁄d
;

	@external/vpiotr-mongoose-cpp/mongcpp.h

12 #i‚de‡
_MONGCPP_H__


13 
	#_MONGCPP_H__


	)

25 
	~<c°ddef
>

26 
	~<c°dlib
>

28 
	~"m⁄goo£.h
"

30 
	~<°rög
>

31 
	~<m≠
>

32 
	~<ve˘‹
>

33 
	~<mem‹y
>

35 
«me•a˚
 
	gm⁄goo£


41 
	eM⁄goo£Reque°MëhodCode
 {

42 
	grmcUndef
,

43 
	grmcGë
,

44 
	grmcPo°
,

45 
	grmcHód
,

46 
	grmcPut
,

47 
	grmcDñëe
,

48 
	grmcTø˚
,

49 
	grmcO±i⁄s


52 
	g°d
::
	tm≠
<
	t°d
::
	t°rög
, std::°rög> 
	tSîvîO±i⁄Së
;

53 
	g°d
::
	tve˘‹
<
	t°d
::
	t°rög
> 
	tSîvîO±i⁄Li°
;

54 
	g°d
::
	tve˘‹
<c⁄° *> 
	tSîvîO±i⁄St‹age
;

55 
	g°d
::
	tm≠
<
	t°d
::
	t°rög
, std::°rög> 
	tReque°VÆueSë
;

56 
	g°d
::
	tm≠
<
	t°d
::
	t°rög
, > 
	tRe•⁄£VÆueIndex
;

57 
	g°d
::
	tve˘‹
< 
	t°d
::
	t∑ú
<°d::
	t°rög
, std::°rög> > 
	tRe•⁄£VÆueLi°
;

58 
mg_evít
 
	tSîvîH™dlögEvít
;

59 
	g°d
::
	tm≠
<
	t°d
::
	t°rög
, 
	tM⁄goo£Reque°MëhodCode
> 
	tMëhodM≠
;

60 
	g°d
::
	tauto_±r
<
	tMëhodM≠
> 
	tMëhodM≠Gu¨d
;

74 ˛as†
	cM⁄goo£C⁄√˘i⁄
 {

75 
	gpublic
:

76 
M⁄goo£C⁄√˘i⁄
(
mg_c⁄√˘i⁄
 *
c⁄n
);

77 
	gvútuÆ
 ~
M⁄goo£C⁄√˘i⁄
();

78 
wrôe
(c⁄° *
buf
, 
size_t
 
Àn
);

79 
wrôe
(c⁄° 
°d
::
°rög
 &
ãxt
);

80 
ªad
(*
buf
, 
size_t
 
Àn
);

81 
£ndAuth‹iz©i⁄Reque°
(c⁄° 
°d
::
°rög
 &
n⁄˚
 = "");

82 
boﬁ
 
gëHódî
(c⁄° 
°d
::
°rög
 &
«me
, std::°rög &
ouçut
) const;

83 
boﬁ
 
gëCookõ
(c⁄° 
°d
::
°rög
 &
«me
, std::°rög &
ouçut
) const;

84 
	g¥Ÿe˘ed
:

85 
mg_c⁄√˘i⁄
 *
gëInfo
();

86 
	g¥Ÿe˘ed
:

87 
mg_c⁄√˘i⁄
 *
m_c⁄n
;

90 ˛as†
	cM⁄goo£Reque°
 {

91 
	gpublic
:

92 
M⁄goo£Reque°
(
mg_c⁄√˘i⁄
 *
c⁄n
, 
mg_ªque°_öfo
* 
öfo
);

93 
	gvútuÆ
 ~
M⁄goo£Reque°
();

94 c⁄° 
	g°d
::
°rög
 
gëReque°Mëhod
() const;

95 
M⁄goo£Reque°MëhodCode
 
gëReque°MëhodCode
() const;

96 c⁄° 
	g°d
::
°rög
 
gëUri
() const;

97 c⁄° 
	g°d
::
°rög
 
gëHâpVîsi⁄
() const;

98 c⁄° 
	g°d
::
°rög
 
gëQuîySåög
() const;

99 c⁄° 
	g°d
::
°rög
 
ªadQuîySåög
() const;

100 c⁄° 
	g°d
::
°rög
 
gëRemŸeU£r
() const;

101 c⁄° 
	g°d
::
°rög
 
gëLogMesßge
() const;

102 
gëRemŸeIp
() const;

103 
gëRemŸeP‹t
() const;

104 
gëSètusCode
() const;

105 
boﬁ
 
isS¶
() const;

106 
boﬁ
 
gëV¨
(c⁄° 
°d
::
°rög
 &
«me
, std::°rög &
ouçut
) const;

107 
M⁄goo£Reque°MëhodCode
 
mëhodTextToCode
(c⁄° 
°d
::
°rög
 &
ãxt
);

108 
	g¥Ÿe˘ed
:

109 
mg_ªque°_öfo
* 
gëInfo
() const;

110 
	g¥Ÿe˘ed
:

111 
mg_ªque°_öfo
* 
m_öfo
;

112 
mg_c⁄√˘i⁄
 *
	gm_c⁄n
;

115 ˛as†
	cM⁄goo£Re•⁄£
 {

116 
	gpublic
:

117 
M⁄goo£Re•⁄£
(
mg_c⁄√˘i⁄
 *
c⁄n
);

118 
	gvútuÆ
 ~
M⁄goo£Re•⁄£
();

119 
vútuÆ
 
wrôe
();

120 
£tSètus
(
code
, c⁄° 
°d
::
°rög
 &
°©usDesc
 = "", c⁄° std::°rög &
hâpVî
 = "");

121 
£tSëCookõ
(c⁄° 
°d
::
°rög
 &
«me
, c⁄° std::°rög &
vÆue
);

122 
£tLoˇti⁄
(c⁄° 
°d
::
°rög
 &
vÆue
 = "");

123 
£tC⁄ã¡Ty≥
(c⁄° 
°d
::
°rög
 &
vÆue
 = "");

124 
boﬁ
 
gëHódîVÆue
(c⁄° 
°d
::
°rög
 &
«me
, std::°rög &
ouçut
);

125 
addHódîVÆue
(c⁄° 
°d
::
°rög
 &
«me
, c⁄° std::°rög &
vÆue
);

126 
£tHódîVÆue
(c⁄° 
°d
::
°rög
 &
«me
, c⁄° std::°rög &
vÆue
);

127 
£tC⁄√˘i⁄Alive
(
boﬁ
 
kìpAlive
 = 
Ál£
);

128 
£tCacheDißbÀd
();

129 
addHódî
();

130 
addC⁄ã¡
(c⁄° 
°d
::
°rög
 &
ãxt
, 
boﬁ
 
addLí
 = 
åue
);

131 
addText
(c⁄° 
°d
::
°rög
 &
ãxt
);

132 
addTextLöe
(c⁄° 
°d
::
°rög
 &
ãxt
);

133 c⁄° *
gëHâpSètusDesc
(
°©usCode
);

134 
	g¥Ÿe˘ed
:

135 
Re•⁄£VÆueLi°
 *
¥ï¨eHódîVÆues
();

136 
addHódîVÆueToText
(c⁄° 
°d
::
°rög
 &
«me
, c⁄° std::°rög &
vÆue
);

137 
	g¥Ÿe˘ed
:

138 
mg_c⁄√˘i⁄
 *
m_c⁄n
;

139 
	g°d
::
°rög
 
m_ãxt
;

140 
	g°d
::
auto_±r
<
Re•⁄£VÆueLi°
> 
m_hódîVÆues
;

141 
	g°d
::
auto_±r
<
Re•⁄£VÆueIndex
> 
m_hódîVÆuesIndex
;

142 
	g°d
::
auto_±r
<
°d
::
°rög
> 
m_°©usText
;

145 ˛as†
	cM⁄goo£Sîvî
 {

146 
	gpublic
:

148 
M⁄goo£Sîvî
();

149 
	gvútuÆ
 ~
M⁄goo£Sîvî
();

151 
£tO±i⁄s
(c⁄° 
SîvîO±i⁄Së
 &
›ti⁄s
);

152 
£tO±i⁄
(c⁄° 
°d
::
°rög
 &
«me
, c⁄° std::°rög &
vÆue
);

153 
gëO±i⁄s
(
SîvîO±i⁄Së
 &
›ti⁄s
) const;

154 
boﬁ
 
gëO±i⁄VÆue
(c⁄° 
°d
::
°rög
 &
«me
, std::°rög &
vÆue
) const;

155 
gëO±i⁄VÆue
(c⁄° 
°d
::
°rög
 &
«me
, std::°rög &
vÆue
, c⁄° std::°rög &
defVÆue
) const;

156 
gëVÆidO±i⁄s
(
SîvîO±i⁄Li°
 &
ouçut
);

157 
	g°d
::
°rög
 
gëVîsi⁄
();

158 
ˇlcMD5
(c⁄° 
°d
::
°rög
 &
ãxt
, std::°rög &
ouçut
);

159 
M⁄goo£Reque°MëhodCode
 
mëhodTextToCode
(c⁄° 
°d
::
°rög
 &
ãxt
);

161 
vútuÆ
 
öô
();

162 
°¨t
();

163 
°›
();

164 
boﬁ
 
isRu¬ög
();

165 
vútuÆ
 *
h™dÀEvít
(
SîvîH™dlögEvít
 
evítCode
,

166 
mg_c⁄√˘i⁄
 *
c⁄n
,

167 c⁄° 
mg_ªque°_öfo
 *
ªque°_öfo
);

168 
	g¥Ÿe˘ed
:

169 
vútuÆ
 
boﬁ
 
h™dÀEvít
(
SîvîH™dlögEvít
 
evítCode
, 
M⁄goo£C⁄√˘i⁄
 &
c⁄√˘i⁄
, c⁄° 
M⁄goo£Reque°
 &
ªque°
, 
M⁄goo£Re•⁄£
 &
ª•⁄£
);

170 
vútuÆ
 
M⁄goo£C⁄√˘i⁄
 *
√wC⁄√˘i⁄
(
mg_c⁄√˘i⁄
 *
c⁄n
);

171 
vútuÆ
 
M⁄goo£Reque°
 *
√wReque°
(
mg_c⁄√˘i⁄
 *
c⁄n
, c⁄° 
mg_ªque°_öfo
 *
ªque°
);

172 
vútuÆ
 
M⁄goo£Re•⁄£
 *
√wRe•⁄£
(
mg_c⁄√˘i⁄
 *
c⁄n
);

173 
checkSt›≥d
();

174 c⁄° **
¥ï¨eO±i⁄s
();

175 
u≈ª∑ªO±i⁄s
();

176 
checkMëhodM≠
();

177 
	g¥Ÿe˘ed
:

178 
SîvîO±i⁄Së
 
m_›ti⁄s
;

179 
SîvîO±i⁄St‹age
 
	gm_›ti⁄St‹age
;

180 
boﬁ
 
	gm_°©usRu¬ög
;

181 
boﬁ
 
	gm_¥ï¨ed
;

182 
mg_c⁄ãxt
 *
	gm_˘x
;

183 
MëhodM≠Gu¨d
 
	gm_mëhodM≠
;

	@external/vpiotr-mongoose-cpp/mongoose.c

21 #i‡
deföed
(
_WIN32
)

22 
	#_CRT_SECURE_NO_WARNINGS


23 #ñ£

	)

24 
	#_XOPEN_SOURCE
 600

25 
	#_LARGEFILE_SOURCE


27 

	)

28 #i‚de‡
_WIN32_WCE


29 
	~<sys/ty≥s.h
>

30 
	~<sys/°©.h
>

31 
	~<î∫o.h
>

32 
	~<sig«l.h
>

33 
	~<f˙é.h
>

36 
	~<time.h
>

37 
	~<°dlib.h
>

38 
	~<°d¨g.h
>

39 
	~<as£π.h
>

40 
	~<°rög.h
>

41 
	~<˘y≥.h
>

42 
	~<limôs.h
>

43 
	~<°ddef.h
>

44 
	~<°dio.h
>

46 #i‡
deföed
(
_WIN32
)

47 
	#_WIN32_WINNT
 0x0400

48 
	~<wödows.h
>

	)

50 #i‚de‡
PATH_MAX


51 
	#PATH_MAX
 
MAX_PATH


	)

54 #i‚de‡
_WIN32_WCE


55 
	~<¥o˚ss.h
>

56 
	~<dúe˘.h
>

57 
	~<io.h
>

59 
	~<wösock2.h
>

60 
	#NO_CGI


61 

	)

62 
	toff_t
;

63 
	#BUFSIZ
 128000

	)

65 
	#î∫o
 
	`GëLa°Eº‹
()

	)

66 
	#°ªº‹
(
x
Ë
	`_u…ﬂ
(x, (*Ë
	`_Æloˇ
((xË*3 ), 10)

	)

69 
	#MAKEUQUAD
(
lo
, 
hi
Ë((
uöt64_t
)(((
uöt32_t
)÷o)Ë| \

	)

70 ((
	guöt64_t
)((
	guöt32_t
)(
	ghi
))) << 32))

71 
	#RATE_DIFF
 10000000

72 
	#EPOCH_DIFF
 
	`MAKEUQUAD
(0xd53e8000, 0x019db1de)

	)

73 
	#SYS2UNIX_TIME
(
lo
, 
hi
Ë\

	)

74 (
	gtime_t
Ë((
MAKEUQUAD
((
lo
), (
hi
)Ë- 
	gEPOCH_DIFF
Ë/ 
	gRATE_DIFF
)

79 #i‡
deföed
(
_MSC_VER
) && _MSC_VER < 1300

80 
	#STRX
(
x
Ë#x

	)

81 
	#STR
(
x
Ë
	`STRX
(x)

	)

82 
	#__func__
 "löê" 
	`STR
(
__LINE__
)

	)

83 
	#°πouŒ
(
x
, 
y
, 
z
Ë
	`°πoul
(x, y, z)

	)

84 
	#°πﬁl
(
x
, 
y
, 
z
Ë
	`°πﬁ
(x, y, z)

	)

86 
	#__func__
 
__FUNCTION__


	)

87 
	#°πouŒ
(
x
, 
y
, 
z
Ë
	`_°πoui64
(x, y, z)

	)

88 
	#°πﬁl
(
x
, 
y
, 
z
Ë
	`_°πoi64
(x, y, z)

	)

91 
	#ERRNO
 
	`GëLa°Eº‹
()

	)

92 
	#NO_SOCKLEN_T


	)

93 
	#SSL_LIB
 "s¶óy32.dŒ"

	)

94 
	#CRYPTO_LIB
 "libóy32.dŒ"

	)

95 
	#DIRSEP
 '\\'

	)

96 
	#IS_DIRSEP_CHAR
(
c
Ë((cË='/' || (cË='\\')

	)

97 
	#O_NONBLOCK
 0

	)

98 #i‡!
deföed
(
EWOULDBLOCK
)

99 
	#EWOULDBLOCK
 
WSAEWOULDBLOCK


	)

101 
	#_POSIX_


	)

102 
	#INT64_FMT
 "I64d"

	)

104 
	#WINCDECL
 
__cde˛


	)

105 
	#SHUT_WR
 1

	)

106 
	#¢¥ötf
 
_¢¥ötf


	)

107 
	#v¢¥ötf
 
_v¢¥ötf


	)

108 
	#¶ìp
(
x
Ë
	`SÀï
((xË* 1000)

	)

110 
	#pùe
(
x
Ë
	`_pùe
(x, 
BUFSIZ
, 
_O_BINARY
)

	)

111 
	#p›í
(
x
, 
y
Ë
	`_p›í
(x, y)

	)

112 
	#p˛o£
(
x
Ë
	`_p˛o£
(x)

	)

113 
	#˛o£
(
x
Ë
	`_˛o£
(x)

	)

114 
	#dlsym
(
x
,
y
Ë
	`GëProcAddªss
((
HINSTANCE
Ë(x), (y))

	)

115 
	#RTLD_LAZY
 0

	)

116 
	#f£eko
(
x
, 
y
, 
z
Ë
	`f£ek
((x), (y), (z))

	)

117 
	#fd›í
(
x
, 
y
Ë
	`_fd›í
((x), (y))

	)

118 
	#wrôe
(
x
, 
y
, 
z
Ë
	`_wrôe
((x), (y), (Ëz)

	)

119 
	#ªad
(
x
, 
y
, 
z
Ë
	`_ªad
((x), (y), (Ëz)

	)

120 
	#Êockfûe
(
x
Ë(Ë0

	)

121 
	#fu∆ockfûe
(
x
Ë(Ë0

	)

123 #i‡!
deföed
(
fûío
)

124 
	#fûío
(
x
Ë
	`_fûío
(x)

	)

127 
HANDLE
 
	t±hªad_muãx_t
;

128 °ru˘ {
HANDLE
 
	msig«l
, 
	mbrﬂdˇ°
;} 
	t±hªad_c⁄d_t
;

129 
DWORD
 
	t±hªad_t
;

130 
	#pid_t
 
HANDLE


131 

	)

132 
	stime•ec
 {

133 
	mtv_n£c
;

134 
	mtv_£c
;

137 
±hªad_muãx_lock
(
±hªad_muãx_t
 *);

138 
±hªad_muãx_u∆ock
(
±hªad_muãx_t
 *);

139 
FILE
 *
mg_f›í
(c⁄° *
∑th
, c⁄° *
mode
);

141 #i‡
deföed
(
HAVE_STDINT
)

142 
	~<°döt.h
>

144 
	tuöt32_t
;

145 
	tuöt16_t
;

146 
	t__öt64
 
	tuöt64_t
;

147 
__öt64
 
	töt64_t
;

148 
	#INT64_MAX
 9223372036854775807

	)

152 
	sdúít
 {

153 
	md_«me
[
PATH_MAX
];

156 
	sDIR
 {

157 
HANDLE
 
	mh™dÀ
;

158 
WIN32_FIND_DATAW
 
	möfo
;

159 
dúít
 
	mªsu…
;

160 } 
	tDIR
;

163 
	~<sys/waô.h
>

164 
	~<sys/sockë.h
>

165 
	~<sys/£À˘.h
>

166 
	~<√töë/ö.h
>

167 
	~<¨∑/öë.h
>

168 
	~<sys/time.h
>

169 
	~<°döt.h
>

170 
	~<öây≥s.h
>

171 
	~<√tdb.h
>

173 
	~<pwd.h
>

174 
	~<uni°d.h
>

175 
	~<dúít.h
>

176 #i‡!
deföed
(
NO_SSL_DL
Ë&& !deföed(
NO_SSL
)

177 
	~<dlf˙.h
>

179 
	~<±hªad.h
>

180 #i‡
deföed
(
__MACH__
)

181 
	#SSL_LIB
 "libs¶.dylib"

	)

182 
	#CRYPTO_LIB
 "lib¸y±o.dylib"

	)

184 #i‡!
deföed
(
SSL_LIB
)

185 
	#SSL_LIB
 "libs¶.so"

	)

187 #i‡!
deföed
(
CRYPTO_LIB
)

188 
	#CRYPTO_LIB
 "lib¸y±o.so"

	)

191 
	#DIRSEP
 '/'

	)

192 
	#IS_DIRSEP_CHAR
(
c
Ë((cË='/')

	)

193 
	#O_BINARY
 0

	)

194 
	#˛o£sockë
(
a
Ë
	`˛o£
◊)

	)

195 
	#mg_f›í
(
x
, 
y
Ë
	`f›í
(x, y)

	)

196 
	#mg_mkdú
(
x
, 
y
Ë
	`mkdú
(x, y)

	)

197 
	#mg_ªmove
(
x
Ë
	`ªmove
(x)

	)

198 
	#mg_ª«me
(
x
, 
y
Ë
	`ª«me
(x, y)

	)

199 
	#ERRNO
 
î∫o


	)

200 
	#INVALID_SOCKET
 (-1)

	)

201 
	#INT64_FMT
 
PRId64


	)

202 
	tSOCKET
;

203 
	#WINCDECL


	)

207 
	~"m⁄goo£.h
"

209 
	#MONGOOSE_VERSION
 "3.0"

	)

210 
	#PASSWORDS_FILE_NAME
 ".hçasswd"

	)

211 
	#CGI_ENVIRONMENT_SIZE
 4096

	)

212 
	#MAX_CGI_ENVIR_VARS
 64

	)

213 
	#ARRAY_SIZE
(
¨øy
Ë(◊ºayË/ ◊ºay[0]))

	)

215 #i‡
deföed
(
DEBUG
)

216 
	#DEBUG_TRACE
(
x
Ëdÿ{ \

	)

217 
Êockfûe
(
°dout
); \

218 
¥ötf
("*** %lu.%p.%s.%d: ", \

219 (Ë
time
(
NULL
), (*Ë
±hªad_£lf
(), \

220 
__func__
, 
__LINE__
); \

221 
¥ötf
 
	gx
; \

222 
putch¨
('\n'); \

223 
fÊush
(
°dout
); \

224 
fu∆ockfûe
(
°dout
); \

227 
	#DEBUG_TRACE
(
x
)

	)

231 #ifde‡
NO_SOCKLEN_T


232 
	tsockÀn_t
;

235 * (*
	tmg_thªad_func_t
)(*);

237 c⁄° *
hâp_500_îr‹
 = "Internal Server Error";

242 
s¶_°
 
	tSSL
;

243 
s¶_mëhod_°
 
	tSSL_METHOD
;

244 
s¶_˘x_°
 
	tSSL_CTX
;

246 
	#SSL_ERROR_WANT_READ
 2

	)

247 
	#SSL_ERROR_WANT_WRITE
 3

	)

248 
	#SSL_FILETYPE_PEM
 1

	)

249 
	#CRYPTO_LOCK
 1

	)

251 #i‡
	`deföed
(
NO_SSL_DL
)

252 
	`SSL_‰ì
(
SSL
 *);

253 
	`SSL_ac˚±
(
SSL
 *);

254 
	`SSL_c⁄√˘
(
SSL
 *);

255 
	`SSL_ªad
(
SSL
 *, *, );

256 
	`SSL_wrôe
(
SSL
 *, const *, );

257 
	`SSL_gë_îr‹
(c⁄° 
SSL
 *, );

258 
	`SSL_£t_fd
(
SSL
 *, );

259 
SSL
 *
	`SSL_√w
(
SSL_CTX
 *);

260 
SSL_CTX
 *
	`SSL_CTX_√w
(
SSL_METHOD
 *);

261 
SSL_METHOD
 *
	`SSLv23_£rvî_mëhod
();

262 
	`SSL_libøry_öô
();

263 
	`SSL_lﬂd_îr‹_°rögs
();

264 
	`SSL_CTX_u£_Priv©eKey_fûe
(
SSL_CTX
 *, const *, );

265 
	`SSL_CTX_u£_˚πifiˇã_fûe
(
SSL_CTX
 *, const *, );

266 
	`SSL_CTX_u£_˚πifiˇã_chaö_fûe
(
SSL_CTX
 *, const *);

267 
	`SSL_CTX_£t_deÁu…_∑sswd_cb
(
SSL_CTX
 *, 
mg_ˇŒback_t
);

268 
	`SSL_CTX_‰ì
(
SSL_CTX
 *);

269 
	`ERR_gë_îr‹
();

270 *
	`ERR_îr‹_°rög
(, *);

271 
	`CRYPTO_num_locks
();

272 
	`CRYPTO_£t_lockög_ˇŒback
((*)(, , const *, ));

273 
	`CRYPTO_£t_id_ˇŒback
((*)());

276 
	ss¶_func
 {

277 c⁄° *
«me
;

278 (*
±r
)();

281 
	#SSL_‰ì
 (* ((*)(
SSL
 *)Ë
s¶_sw
[0].
±r
)

	)

282 
	#SSL_ac˚±
 (* ((*)(
SSL
 *)Ë
s¶_sw
[1].
±r
)

	)

283 
	#SSL_c⁄√˘
 (* ((*)(
SSL
 *)Ë
s¶_sw
[2].
±r
)

	)

284 
	#SSL_ªad
 (* ((*)(
SSL
 *, *, )Ë
s¶_sw
[3].
±r
)

	)

285 
	#SSL_wrôe
 (* ((*)(
SSL
 *, c⁄° *,)Ë
s¶_sw
[4].
±r
)

	)

286 
	#SSL_gë_îr‹
 (* ((*)(
SSL
 *, )Ë
s¶_sw
[5])

	)

287 
	#SSL_£t_fd
 (* ((*)(
SSL
 *, 
SOCKET
)Ë
s¶_sw
[6].
±r
)

	)

288 
	#SSL_√w
 (* (
SSL
 * (*)(
SSL_CTX
 *)Ë
s¶_sw
[7].
±r
)

	)

289 
	#SSL_CTX_√w
 (* (
SSL_CTX
 * (*)(
SSL_METHOD
 *)Ë
s¶_sw
[8].
±r
)

	)

290 
	#SSLv23_£rvî_mëhod
 (* (
SSL_METHOD
 * (*)()Ë
s¶_sw
[9].
±r
)

	)

291 
	#SSL_libøry_öô
 (* ((*)()Ë
s¶_sw
[10].
±r
)

	)

292 
	#SSL_CTX_u£_Priv©eKey_fûe
 (* ((*)(
SSL_CTX
 *, \

	)

293 c⁄° *, )Ë
s¶_sw
[11].
±r
)

294 
	#SSL_CTX_u£_˚πifiˇã_fûe
 (* ((*)(
SSL_CTX
 *, \

	)

295 c⁄° *, )Ë
s¶_sw
[12].
±r
)

296 
	#SSL_CTX_£t_deÁu…_∑sswd_cb
 \

	)

297 (* ((*)(
SSL_CTX
 *, 
mg_ˇŒback_t
)Ë
s¶_sw
[13].
±r
)

298 
	#SSL_CTX_‰ì
 (* ((*)(
SSL_CTX
 *)Ë
s¶_sw
[14].
±r
)

	)

299 
	#SSL_lﬂd_îr‹_°rögs
 (* ((*)()Ë
s¶_sw
[15].
±r
)

	)

300 
	#SSL_CTX_u£_˚πifiˇã_chaö_fûe
 \

	)

301 (* ((*)(
SSL_CTX
 *, c⁄° *)Ë
s¶_sw
[16].
±r
)

303 
	#CRYPTO_num_locks
 (* ((*)()Ë
¸y±o_sw
[0].
±r
)

	)

304 
	#CRYPTO_£t_lockög_ˇŒback
 \

	)

305 (* ((*)((*)(, , c⁄° *, ))Ë
¸y±o_sw
[1].
±r
)

306 
	#CRYPTO_£t_id_ˇŒback
 \

	)

307 (* ((*)((*)())Ë
¸y±o_sw
[2].
±r
)

308 
	#ERR_gë_îr‹
 (* ((*)()Ë
s¶_sw
[3].
±r
)

	)

309 
	#ERR_îr‹_°rög
 (* (* (*)(, *)Ë
s¶_sw
[4].
±r
)

	)

315 
s¶_func
 
s¶_sw
[] = {

316 {"SSL_‰ì", 
NULL
},

317 {"SSL_ac˚±", 
NULL
},

318 {"SSL_c⁄√˘", 
NULL
},

319 {"SSL_ªad", 
NULL
},

320 {"SSL_wrôe", 
NULL
},

321 {"SSL_gë_îr‹", 
NULL
},

322 {"SSL_£t_fd", 
NULL
},

323 {"SSL_√w", 
NULL
},

324 {"SSL_CTX_√w", 
NULL
},

325 {"SSLv23_£rvî_mëhod", 
NULL
},

326 {"SSL_libøry_öô", 
NULL
},

327 {"SSL_CTX_u£_Priv©eKey_fûe", 
NULL
},

328 {"SSL_CTX_u£_˚πifiˇã_fûe",
NULL
},

329 {"SSL_CTX_£t_deÁu…_∑sswd_cb",
NULL
},

330 {"SSL_CTX_‰ì", 
NULL
},

331 {"SSL_lﬂd_îr‹_°rögs", 
NULL
},

332 {"SSL_CTX_u£_˚πifiˇã_chaö_fûe", 
NULL
},

333 {
NULL
, NULL}

334 
	}
};

337 
s¶_func
 
	g¸y±o_sw
[] = {

338 {"CRYPTO_num_locks", 
NULL
},

339 {"CRYPTO_£t_lockög_ˇŒback", 
NULL
},

340 {"CRYPTO_£t_id_ˇŒback", 
NULL
},

341 {"ERR_gë_îr‹", 
NULL
},

342 {"ERR_îr‹_°rög", 
NULL
},

343 {
NULL
, NULL}

347 c⁄° *
	gm⁄th_«mes
[] = {

354 
	suß
 {

355 
sockÀn_t
 
	mÀn
;

357 
sockaddr
 
	mß
;

358 
sockaddr_ö
 
	msö
;

359 } 
	mu
;

363 
	svec
 {

364 c⁄° *
	m±r
;

365 
size_t
 
	mÀn
;

369 
	smg°©
 {

370 
	mis_dúe˘‹y
;

371 
öt64_t
 
	msize
;

372 
time_t
 
	mmtime
;

377 
	ssockë
 {

378 
sockë
 *
	m√xt
;

379 
SOCKET
 
	msock
;

380 
uß
 
	mlß
;

381 
uß
 
	mrß
;

382 
	mis_s¶
;

383 
	mis_¥oxy
;

387 
	mCGI_EXTENSIONS
, 
	mCGI_ENVIRONMENT
, 
	mPUT_DELETE_PASSWORDS_FILE
, 
	mCGI_INTERPRETER
,

388 
	mPROTECT_URI
, 
	mAUTHENTICATION_DOMAIN
, 
	mSSI_EXTENSIONS
, 
	mACCESS_LOG_FILE
,

389 
	mSSL_CHAIN_FILE
, 
	mENABLE_DIRECTORY_LISTING
, 
	mERROR_LOG_FILE
,

390 
	mGLOBAL_PASSWORDS_FILE
, 
	mINDEX_FILES
,

391 
	mENABLE_KEEP_ALIVE
, 
	mACCESS_CONTROL_LIST
, 
	mMAX_REQUEST_SIZE
,

392 
	mEXTRA_MIME_TYPES
, 
	mLISTENING_PORTS
,

393 
	mDOCUMENT_ROOT
, 
	mSSL_CERTIFICATE
, 
	mNUM_THREADS
, 
	mRUN_AS_USER
,

394 
	mNUM_OPTIONS


397 c⁄° *
	gc⁄fig_›ti⁄s
[] = {

399 "E", "cgi_ívú⁄mít", 
NULL
,

400 "G", "put_dñëe_∑ssw‹ds_fûe", 
NULL
,

401 "I", "cgi_öãΩªãr", 
NULL
,

402 "P", "¥Ÿe˘_uri", 
NULL
,

405 "a", "ac˚ss_log_fûe", 
NULL
,

406 "c", "s¶_chaö_fûe", 
NULL
,

408 "e", "îr‹_log_fûe", 
NULL
,

409 "g", "globÆ_∑ssw‹ds_fûe", 
NULL
,

412 "l", "ac˚ss_c⁄åﬁ_li°", 
NULL
,

414 "m", "exåa_mime_ty≥s", 
NULL
,

417 "s", "s¶_˚πifiˇã", 
NULL
,

419 "u", "run_as_u£r", 
NULL
,

420 
NULL


422 
	#ENTRIES_PER_CONFIG_OPTION
 3

	)

424 
	smg_c⁄ãxt
 {

425 
	m°›_Êag
;

426 
SSL_CTX
 *
	ms¶_˘x
;

427 *
	mc⁄fig
[
NUM_OPTIONS
];

428 
mg_ˇŒback_t
 
	mu£r_ˇŒback
;

429 *
	mu£r_d©a
;

431 
sockë
 *
	mli°íög_sockës
;

433 
	mnum_thªads
;

434 
±hªad_muãx_t
 
	mmuãx
;

435 
±hªad_c⁄d_t
 
	mc⁄d
;

437 
sockë
 
	mqueue
[20];

438 
	msq_hód
;

439 
	msq_èû
;

440 
±hªad_c⁄d_t
 
	msq_fuŒ
;

441 
±hªad_c⁄d_t
 
	msq_em±y
;

444 
	smg_c⁄√˘i⁄
 {

445 
mg_c⁄√˘i⁄
 *
	m≥î
;

446 
mg_ªque°_öfo
 
	mªque°_öfo
;

447 
mg_c⁄ãxt
 *
	m˘x
;

448 
SSL
 *
	ms¶
;

449 
sockë
 
	m˛õ¡
;

450 
time_t
 
	mbúth_time
;

451 
öt64_t
 
	mnum_byãs_£¡
;

452 
öt64_t
 
	mc⁄ã¡_Àn
;

453 
öt64_t
 
	mc⁄sumed_c⁄ã¡
;

454 *
	mbuf
;

455 
	mbuf_size
;

456 
	mªque°_Àn
;

457 
	md©a_Àn
;

458 *
	mauth_hódî
;

461 c⁄° **
	$mg_gë_vÆid_›ti⁄_«mes
() {

462  
c⁄fig_›ti⁄s
;

463 
	}
}

465 *
	$ˇŒ_u£r
(
mg_c⁄√˘i⁄
 *
c⁄n
, 
mg_evít
 
evít
) {

466 
c⁄n
->
ªque°_öfo
.
u£r_d©a
 = c⁄n->
˘x
->user_data;

467  
c⁄n
->
˘x
->
u£r_ˇŒback
 =
NULL
 ? NULL :

468 
c⁄n
->
˘x
->
	`u£r_ˇŒback
(
evít
, c⁄n, &c⁄n->
ªque°_öfo
);

469 
	}
}

471 
	$gë_›ti⁄_ödex
(c⁄° *
«me
) {

472 
i
;

474 
i
 = 0; 
c⁄fig_›ti⁄s
[i] !
NULL
; i +
ENTRIES_PER_CONFIG_OPTION
) {

475 i‡(
	`°rcmp
(
c⁄fig_›ti⁄s
[
i
], 
«me
) == 0 ||

476 
	`°rcmp
(
c⁄fig_›ti⁄s
[
i
 + 1], 
«me
) == 0) {

477  
i
 / 
ENTRIES_PER_CONFIG_OPTION
;

481 
	}
}

483 c⁄° *
	$mg_gë_›ti⁄
(c⁄° 
mg_c⁄ãxt
 *
˘x
, c⁄° *
«me
) {

484 
i
;

485 i‡((
i
 = 
	`gë_›ti⁄_ödex
(
«me
)) == -1) {

486  
NULL
;

487 } i‡(
˘x
->
c⁄fig
[
i
] =
NULL
) {

490  
˘x
->
c⁄fig
[
i
];

492 
	}
}

495 
	$¸y
(
mg_c⁄√˘i⁄
 *
c⁄n
, c⁄° *
fmt
, ...) {

496 
buf
[
BUFSIZ
];

497 
va_li°
 
≠
;

498 
FILE
 *
Â
;

499 
time_t
 
time°amp
;

501 
	`va_°¨t
(
≠
, 
fmt
);

502 (Ë
	`v¢¥ötf
(
buf
, (buf), 
fmt
, 
≠
);

503 
	`va_íd
(
≠
);

508 
c⁄n
->
ªque°_öfo
.
log_mesßge
 = 
buf
;

509 i‡(
	`ˇŒ_u£r
(
c⁄n
, 
MG_EVENT_LOG
Ë=
NULL
) {

510 
Â
 = 
c⁄n
->
˘x
->
c⁄fig
[
ERROR_LOG_FILE
] =
NULL
 ? NULL :

511 
	`mg_f›í
(
c⁄n
->
˘x
->
c⁄fig
[
ERROR_LOG_FILE
], "a+");

513 i‡(
Â
 !
NULL
) {

514 
	`Êockfûe
(
Â
);

515 
time°amp
 = 
	`time
(
NULL
);

517 (Ë
	`Ârötf
(
Â
,

519 (Ë
time°amp
,

520 
	`öë_¡ﬂ
(
c⁄n
->
˛õ¡
.
rß
.
u
.
sö
.
sö_addr
));

522 i‡(
c⁄n
->
ªque°_öfo
.
ªque°_mëhod
 !
NULL
) {

523 (Ë
	`Ârötf
(
Â
, "%s %s: ",

524 
c⁄n
->
ªque°_öfo
.
ªque°_mëhod
,

525 
c⁄n
->
ªque°_öfo
.
uri
);

528 (Ë
	`Ârötf
(
Â
, "%s", 
buf
);

529 
	`Âutc
('\n', 
Â
);

530 
	`fu∆ockfûe
(
Â
);

531 i‡(
Â
 !
°dîr
) {

532 
	`f˛o£
(
Â
);

536 
c⁄n
->
ªque°_öfo
.
log_mesßge
 = 
NULL
;

537 
	}
}

540 c⁄° *
	$s¶_îr‹
() {

541 
îr
;

542 
îr
 = 
	`ERR_gë_îr‹
();

543  
îr
 =0 ? "" : 
	`ERR_îr‹_°rög
”º, 
NULL
);

544 
	}
}

548 
mg_c⁄√˘i⁄
 *
	$fc
(
mg_c⁄ãxt
 *
˘x
) {

549 
mg_c⁄√˘i⁄
 
Áke_c⁄√˘i⁄
;

550 
Áke_c⁄√˘i⁄
.
˘x
 = ctx;

551  &
Áke_c⁄√˘i⁄
;

552 
	}
}

554 c⁄° *
	$mg_vîsi⁄
() {

555  
MONGOOSE_VERSION
;

556 
	}
}

558 
	$mg_°æ˝y
(*
d°
, c⁄° *
§c
, 
size_t
 
n
) {

559 ; *
§c
 !'\0' && 
n
 > 1;Ç--) {

560 *
d°
++ = *
§c
++;

562 *
d°
 = '\0';

563 
	}
}

565 
	$lowîˇ£
(c⁄° *
s
) {

566  
	`tﬁowî
(* (c⁄° *Ë
s
);

567 
	}
}

569 
	$mg_°∫ˇ£cmp
(c⁄° *
s1
, c⁄° *
s2
, 
size_t
 
Àn
) {

570 
diff
 = 0;

572 i‡(
Àn
 > 0)

574 
diff
 = 
	`lowîˇ£
(
s1
++Ë-Üowîˇ£(
s2
++);

575 } 
diff
 =0 && 
s1
[-1] !'\0' && --
Àn
 > 0);

577  
diff
;

578 
	}
}

580 
	$mg_°rˇ£cmp
(c⁄° *
s1
, c⁄° *
s2
) {

581 
diff
;

584 
diff
 = 
	`lowîˇ£
(
s1
++Ë-Üowîˇ£(
s2
++);

585 } 
diff
 =0 && 
s1
[-1] != '\0');

587  
diff
;

588 
	}
}

590 * 
	$mg_°∫dup
(c⁄° *
±r
, 
size_t
 
Àn
) {

591 *
p
;

593 i‡((
p
 = (*Ë
	`mÆloc
(
Àn
 + 1)Ë!
NULL
) {

594 
	`mg_°æ˝y
(
p
, 
±r
, 
Àn
 + 1);

597  
p
;

598 
	}
}

600 * 
	$mg_°rdup
(c⁄° *
°r
) {

601  
	`mg_°∫dup
(
°r
, 
	`°æí
(str));

602 
	}
}

608 
	$mg_v¢¥ötf
(
mg_c⁄√˘i⁄
 *
c⁄n
, *
buf
, 
size_t
 
buÊí
,

609 c⁄° *
fmt
, 
va_li°
 
≠
) {

610 
n
;

612 i‡(
buÊí
 == 0)

615 
n
 = 
	`v¢¥ötf
(
buf
, 
buÊí
, 
fmt
, 
≠
);

617 i‡(
n
 < 0) {

618 
	`¸y
(
c⁄n
, "vsnprintfÉrror");

619 
n
 = 0;

620 } i‡(
n
 >(Ë
buÊí
) {

621 
	`¸y
(
c⁄n
, "truncating vsnprintf buffer: [%.*s]",

622 
n
 > 200 ? 200 :Ç, 
buf
);

623 
n
 = (Ë
buÊí
 - 1;

625 
buf
[
n
] = '\0';

627  
n
;

628 
	}
}

630 
	$mg_¢¥ötf
(
mg_c⁄√˘i⁄
 *
c⁄n
, *
buf
, 
size_t
 
buÊí
,

631 c⁄° *
fmt
, ...) {

632 
va_li°
 
≠
;

633 
n
;

635 
	`va_°¨t
(
≠
, 
fmt
);

636 
n
 = 
	`mg_v¢¥ötf
(
c⁄n
, 
buf
, 
buÊí
, 
fmt
, 
≠
);

637 
	`va_íd
(
≠
);

639  
n
;

640 
	}
}

646 *
	$skù_quŸed
(**
buf
, c⁄° *
dñimôîs
, c⁄° *
whôe•a˚
, 
quŸech¨
) {

647 *
p
, *
begö_w‹d
, *
íd_w‹d
, *
íd_whôe•a˚
;

649 
begö_w‹d
 = *
buf
;

650 
íd_w‹d
 = 
begö_w‹d
 + 
	`°rc•n
(begö_w‹d, 
dñimôîs
);

653 i‡(
íd_w‹d
 > 
begö_w‹d
) {

654 
p
 = 
íd_w‹d
 - 1;

655 *
p
 =
quŸech¨
) {

657 i‡(*
íd_w‹d
 == '\0') {

658 *
p
 = '\0';

661 
size_t
 
íd_off
 = 
	`°rc•n
(
íd_w‹d
 + 1, 
dñimôîs
);

662 
	`memmove
 (
p
, 
íd_w‹d
, 
íd_off
 + 1);

663 
p
 +
íd_off
;

664 
íd_w‹d
 +
íd_off
 + 1;

667 
p
++;Ö < 
íd_w‹d
;Ö++) {

668 *
p
 = '\0';

672 i‡(*
íd_w‹d
 == '\0') {

673 *
buf
 = 
íd_w‹d
;

675 
íd_whôe•a˚
 = 
íd_w‹d
 + 1 + 
	`°r•n
”nd_w‹d + 1, 
whôe•a˚
);

677 
p
 = 
íd_w‹d
;Ö < 
íd_whôe•a˚
;Ö++) {

678 *
p
 = '\0';

681 *
buf
 = 
íd_whôe•a˚
;

684  
begö_w‹d
;

685 
	}
}

688 *
	$skù
(**
buf
, c⁄° *
dñimôîs
) {

689  
	`skù_quŸed
(
buf
, 
dñimôîs
, delimiters, 0);

690 
	}
}

694 c⁄° *
	$gë_hódî
(c⁄° 
mg_ªque°_öfo
 *
ri
,

695 c⁄° *
«me
) {

696 
i
;

698 
i
 = 0; i < 
ri
->
num_hódîs
; i++)

699 i‡(!
	`mg_°rˇ£cmp
(
«me
, 
ri
->
hâp_hódîs
[
i
].name))

700  
ri
->
hâp_hódîs
[
i
].
vÆue
;

702  
NULL
;

703 
	}
}

705 c⁄° *
	$mg_gë_hódî
(c⁄° 
mg_c⁄√˘i⁄
 *
c⁄n
, c⁄° *
«me
) {

706  
	`gë_hódî
(&
c⁄n
->
ªque°_öfo
, 
«me
);

707 
	}
}

715 c⁄° *
	$√xt_›ti⁄
(c⁄° *
li°
, 
vec
 *
vÆ
,

716 
vec
 *
eq_vÆ
) {

717 i‡(
li°
 =
NULL
 || *list == '\0') {

719 
li°
 = 
NULL
;

721 
vÆ
->
±r
 = 
li°
;

722 i‡((
li°
 = 
	`°rchr
(
vÆ
->
±r
, ',')Ë!
NULL
) {

724 
vÆ
->
Àn
 = 
li°
 - vÆ->
±r
;

725 
li°
++;

728 
li°
 = 
vÆ
->
±r
 + 
	`°æí
(val->ptr);

729 
vÆ
->
Àn
 = 
li°
 - vÆ->
±r
;

732 i‡(
eq_vÆ
 !
NULL
) {

737 
eq_vÆ
->
Àn
 = 0;

738 
eq_vÆ
->
±r
 = (c⁄° *Ë
	`memchr
(
vÆ
->±r, '=', vÆ->
Àn
);

739 i‡(
eq_vÆ
->
±r
 !
NULL
) {

740 
eq_vÆ
->
±r
++;

741 
eq_vÆ
->
Àn
 = 
vÆ
->
±r
 + val->len -Éq_val->ptr;

742 
vÆ
->
Àn
 = (
eq_vÆ
->
±r
 - val->ptr) - 1;

747  
li°
;

748 
	}
}

750 #i‡!
deföed
(
NO_CGI
)

751 
	$m©ch_exãnsi⁄
(c⁄° *
∑th
, c⁄° *
ext_li°
) {

752 
vec
 
ext_vec
;

753 
size_t
 
∑th_Àn
;

755 
∑th_Àn
 = 
	`°æí
(
∑th
);

757 (
ext_li°
 = 
	`√xt_›ti⁄
”xt_li°, &
ext_vec
, 
NULL
)) != NULL)

758 i‡(
ext_vec
.
Àn
 < 
∑th_Àn
 &&

759 
	`mg_°∫ˇ£cmp
(
∑th
 + 
∑th_Àn
 - 
ext_vec
.
Àn
,

760 
ext_vec
.
±r
,Éxt_vec.
Àn
) == 0)

764 
	}
}

770 
	$should_kìp_Æive
(c⁄° 
mg_c⁄√˘i⁄
 *
c⁄n
) {

771 c⁄° *
hâp_vîsi⁄
 = 
c⁄n
->
ªque°_öfo
.http_version;

772 c⁄° *
hódî
 = 
	`mg_gë_hódî
(
c⁄n
, "Connection");

773  (
hódî
 =
NULL
 && 
hâp_vîsi⁄
 && !
	`°rcmp
(http_version, "1.1")) ||

774 (
hódî
 !
NULL
 && !
	`mg_°rˇ£cmp
(header, "keep-alive"));

775 
	}
}

777 c⁄° *
	$sugge°_c⁄√˘i⁄_hódî
(c⁄° 
mg_c⁄√˘i⁄
 *
c⁄n
) {

778  
	`should_kìp_Æive
(
c⁄n
) ? "keep-alive" : "close";

779 
	}
}

781 
	$£nd_hâp_îr‹
(
mg_c⁄√˘i⁄
 *
c⁄n
, 
°©us
,

782 c⁄° *
ªas⁄
, c⁄° *
fmt
, ...) {

783 
buf
[
BUFSIZ
];

784 
va_li°
 
≠
;

785 
Àn
;

787 
c⁄n
->
ªque°_öfo
.
°©us_code
 = 
°©us
;

789 i‡(
	`ˇŒ_u£r
(
c⁄n
, 
MG_HTTP_ERROR
Ë=
NULL
) {

790 
buf
[0] = '\0';

791 
Àn
 = 0;

794 i‡(
°©us
 > 199 && status != 204 && status != 304) {

795 
Àn
 = 
	`mg_¢¥ötf
(
c⁄n
, 
buf
, (buf), "Eº‹ %d: %s", 
°©us
, 
ªas⁄
);

796 
	`¸y
(
c⁄n
, "%s", 
buf
);

797 
buf
[
Àn
++] = '\n';

799 
	`va_°¨t
(
≠
, 
fmt
);

800 
Àn
 +
	`mg_v¢¥ötf
(
c⁄n
, 
buf
 +Üí, (bufË-Üí, 
fmt
, 
≠
);

801 
	`va_íd
(
≠
);

803 
	`DEBUG_TRACE
(("[%s]", 
buf
));

805 
	`mg_¥ötf
(
c⁄n
, "HTTP/1.1 %d %s\r\n"

808 "C⁄√˘i⁄: %s\r\n\r\n", 
°©us
, 
ªas⁄
, 
Àn
,

809 
	`sugge°_c⁄√˘i⁄_hódî
(
c⁄n
));

810 
c⁄n
->
num_byãs_£¡
 +
	`mg_¥ötf
(c⁄n, "%s", 
buf
);

812 
	}
}

814 #ifde‡
_WIN32


815 
	$±hªad_muãx_öô
(
±hªad_muãx_t
 *
muãx
, *
unu£d
) {

816 
unu£d
 = 
NULL
;

817 *
muãx
 = 
	`Cª©eMuãx
(
NULL
, 
FALSE
, NULL);

818  *
muãx
 =
NULL
 ? -1 : 0;

819 
	}
}

821 
	$±hªad_muãx_de°roy
(
±hªad_muãx_t
 *
muãx
) {

822  
	`Clo£H™dÀ
(*
muãx
) == 0 ? -1 : 0;

823 
	}
}

825 
	$±hªad_muãx_lock
(
±hªad_muãx_t
 *
muãx
) {

826  
	`WaôF‹SögÀObje˘
(*
muãx
, 
INFINITE
Ë=
WAIT_OBJECT_0
? 0 : -1;

827 
	}
}

829 
	$±hªad_muãx_u∆ock
(
±hªad_muãx_t
 *
muãx
) {

830  
	`Rñó£Muãx
(*
muãx
) == 0 ? -1 : 0;

831 
	}
}

833 
	$±hªad_c⁄d_öô
(
±hªad_c⁄d_t
 *
cv
, c⁄° *
unu£d
) {

834 
unu£d
 = 
NULL
;

835 
cv
->
sig«l
 = 
	`Cª©eEvít
(
NULL
, 
FALSE
, FALSE, NULL);

836 
cv
->
brﬂdˇ°
 = 
	`Cª©eEvít
(
NULL
, 
TRUE
, 
FALSE
, NULL);

837  
cv
->
sig«l
 !
NULL
 && cv->
brﬂdˇ°
 != NULL ? 0 : -1;

838 
	}
}

840 
	$±hªad_c⁄d_waô
(
±hªad_c⁄d_t
 *
cv
, 
±hªad_muãx_t
 *
muãx
) {

841 
HANDLE
 
h™dÀs
[] = {
cv
->
sig«l
, cv->
brﬂdˇ°
};

842 
	`Rñó£Muãx
(*
muãx
);

843 
	`WaôF‹Mu…ùÀObje˘s
(2, 
h™dÀs
, 
FALSE
, 
INFINITE
);

844  
	`Rñó£Muãx
(*
muãx
) == 0 ? -1 : 0;

845 
	}
}

847 
	$±hªad_c⁄d_sig«l
(
±hªad_c⁄d_t
 *
cv
) {

848  
	`SëEvít
(
cv
->
sig«l
) == 0 ? -1 : 0;

849 
	}
}

851 
	$±hªad_c⁄d_brﬂdˇ°
(
±hªad_c⁄d_t
 *
cv
) {

854  
	`Pul£Evít
(
cv
->
brﬂdˇ°
) == 0 ? -1 : 0;

855 
	}
}

857 
	$±hªad_c⁄d_de°roy
(
±hªad_c⁄d_t
 *
cv
) {

858  
	`Clo£H™dÀ
(
cv
->
sig«l
Ë&& Clo£H™dÀ(cv->
brﬂdˇ°
) ? 0 : -1;

859 
	}
}

861 
±hªad_t
 
	$±hªad_£lf
() {

862  
	`GëCuºítThªadId
();

863 
	}
}

866 
	$ch™ge_¶ashes_to_back¶ashes
(*
∑th
) {

867 
i
;

869 
i
 = 0; 
∑th
[i] != '\0'; i++) {

870 i‡(
∑th
[
i
] == '/')

871 
∑th
[
i
] = '\\';

873 i‡(
∑th
[
i
] == '\\' && i > 0)

874 
∑th
[
i
 + 1] == '\\' ||Öath[i + 1] == '/')

875 (Ë
	`memmove
(
∑th
 + 
i
 + 1,

876 
∑th
 + 
i
 + 2, 
	`°æí
(path + i + 1));

878 
	}
}

882 
	$to_unicode
(c⁄° *
∑th
, 
wch¨_t
 *
wbuf
, 
size_t
 
wbuf_Àn
) {

883 
buf
[
PATH_MAX
], *
p
;

885 
	`mg_°æ˝y
(
buf
, 
∑th
, (buf));

886 
	`ch™ge_¶ashes_to_back¶ashes
(
buf
);

889 
p
 = 
buf
 + 
	`°æí
(buf) - 1;

892 
p
 > 
buf
 && *p == '\\' &&Ö[-1] != ':') {

893 *
p
-- = '\0';

900 i‡(*
p
 == 0x20 ||

901 (*
p
 =0x2ê&&Ö > 
buf
) ||

902 *
p
 == 0x2b ||

903 (*
p
 & ~0x7f)) {

904 (Ë
	`Ârötf
(
°dîr
, "Reje˘ög su•iciou†∑th: [%s]", 
buf
);

905 
buf
[0] = '\0';

908 (Ë
	`Mu…iByãToWideCh¨
(
CP_UTF8
, 0, 
buf
, -1, 
wbuf
, (Ë
wbuf_Àn
);

909 
	}
}

911 #i‡
deföed
(
_WIN32_WCE
)

912 
time_t
 
	$time
(
time_t
 *
±ime
) {

913 
time_t
 
t
;

914 
SYSTEMTIME
 
°
;

915 
FILETIME
 
·
;

917 
	`GëSy°emTime
(&
°
);

918 
	`Sy°emTimeToFûeTime
(&
°
, &
·
);

919 
t
 = 
	`SYS2UNIX_TIME
(
·
.
dwLowD©eTime
, ft.
dwHighD©eTime
);

921 i‡(
±ime
 !
NULL
) {

922 *
±ime
 = 
t
;

925  
t
;

926 
	}
}

928 
time_t
 
	$mktime
(
tm
 *
±m
) {

929 
SYSTEMTIME
 
°
;

930 
FILETIME
 
·
, 
l·
;

932 
°
.
wYór
 = 
±m
->
tm_yór
 + 1900;

933 
°
.
wM⁄th
 = 
±m
->
tm_m⁄
 + 1;

934 
°
.
wDay
 = 
±m
->
tm_mday
;

935 
°
.
wHour
 = 
±m
->
tm_hour
;

936 
°
.
wMöuã
 = 
±m
->
tm_mö
;

937 
°
.
wSec⁄d
 = 
±m
->
tm_£c
;

938 
°
.
wMûli£c⁄ds
 = 0;

940 
	`Sy°emTimeToFûeTime
(&
°
, &
·
);

941 
	`LoˇlFûeTimeToFûeTime
(&
·
, &
l·
);

942  (
time_t
Ë((
	`MAKEUQUAD
(
l·
.
dwLowD©eTime
,Ü·.
dwHighD©eTime
) -

943 
EPOCH_DIFF
Ë/ 
RATE_DIFF
);

944 
	}
}

946 
tm
 *
	$loˇ…ime
(c⁄° 
time_t
 *
±ime
, 
tm
 *
±m
) {

947 
öt64_t
 
t
 = ((öt64_tË*
±ime
Ë* 
RATE_DIFF
 + 
EPOCH_DIFF
;

948 
FILETIME
 
·
, 
l·
;

949 
SYSTEMTIME
 
°
;

950 
TIME_ZONE_INFORMATION
 
tzöfo
;

952 i‡(
±m
 =
NULL
) {

953  
NULL
;

956 * (
öt64_t
 *Ë&
·
 = 
t
;

957 
	`FûeTimeToLoˇlFûeTime
(&
·
, &
l·
);

958 
	`FûeTimeToSy°emTime
(&
l·
, &
°
);

959 
±m
->
tm_yór
 = 
°
.
wYór
 - 1900;

960 
±m
->
tm_m⁄
 = 
°
.
wM⁄th
 - 1;

961 
±m
->
tm_wday
 = 
°
.
wDayOfWìk
;

962 
±m
->
tm_mday
 = 
°
.
wDay
;

963 
±m
->
tm_hour
 = 
°
.
wHour
;

964 
±m
->
tm_mö
 = 
°
.
wMöuã
;

965 
±m
->
tm_£c
 = 
°
.
wSec⁄d
;

966 
±m
->
tm_yday
 = 0;

967 
±m
->
tm_isd°
 =

968 
	`GëTimeZ⁄eInf‹m©i⁄
(&
tzöfo
Ë=
TIME_ZONE_ID_DAYLIGHT
 ? 1 : 0;

970  
±m
;

971 
	}
}

973 
size_t
 
	$°r·ime
(*
d°
, 
size_t
 
d°_size
, c⁄° *
fmt
,

974 c⁄° 
tm
 *tm) {

975 (Ë
	`¢¥ötf
(
d°
, 
d°_size
, "implement strftime() for WinCE");

977 
	}
}

980 
	$mg_ª«me
(c⁄° * 
ﬁd«me
, c⁄° * 
√w«me
) {

981 
wch¨_t
 
wﬁdbuf
[
PATH_MAX
];

982 
wch¨_t
 
w√wbuf
[
PATH_MAX
];

984 
	`to_unicode
(
ﬁd«me
, 
wﬁdbuf
, 
	`ARRAY_SIZE
(woldbuf));

985 
	`to_unicode
(
√w«me
, 
w√wbuf
, 
	`ARRAY_SIZE
(wnewbuf));

987  
	`MoveFûeW
(
wﬁdbuf
, 
w√wbuf
) ? 0 : -1;

988 
	}
}

991 
FILE
 *
	$mg_f›í
(c⁄° *
∑th
, c⁄° *
mode
) {

992 
wch¨_t
 
wbuf
[
PATH_MAX
], 
wmode
[20];

994 
	`to_unicode
(
∑th
, 
wbuf
, 
	`ARRAY_SIZE
(wbuf));

995 
	`Mu…iByãToWideCh¨
(
CP_UTF8
, 0, 
mode
, -1, 
wmode
, 
	`ARRAY_SIZE
(wmode));

997  
	`_wf›í
(
wbuf
, 
wmode
);

998 
	}
}

1000 
	$mg_°©
(c⁄° *
∑th
, 
mg°©
 *
°p
) {

1001 
ok
 = -1;

1002 
wch¨_t
 
wbuf
[
PATH_MAX
];

1003 
WIN32_FILE_ATTRIBUTE_DATA
 
öfo
;

1005 
	`to_unicode
(
∑th
, 
wbuf
, 
	`ARRAY_SIZE
(wbuf));

1007 i‡(
	`GëFûeAâribuãsExW
(
wbuf
, 
GëFûeExInfoSènd¨d
, &
öfo
) != 0) {

1008 
°p
->
size
 = 
	`MAKEUQUAD
(
öfo
.
nFûeSizeLow
, info.
nFûeSizeHigh
);

1009 
°p
->
mtime
 = 
	`SYS2UNIX_TIME
(
öfo
.
·La°WrôeTime
.
dwLowD©eTime
,

1010 
öfo
.
·La°WrôeTime
.
dwHighD©eTime
);

1011 
°p
->
is_dúe˘‹y
 =

1012 
öfo
.
dwFûeAâribuãs
 & 
FILE_ATTRIBUTE_DIRECTORY
;

1013 
ok
 = 0;

1016  
ok
;

1017 
	}
}

1019 
	$mg_ªmove
(c⁄° *
∑th
) {

1020 
wch¨_t
 
wbuf
[
PATH_MAX
];

1021 
	`to_unicode
(
∑th
, 
wbuf
, 
	`ARRAY_SIZE
(wbuf));

1022  
	`DñëeFûeW
(
wbuf
) ? 0 : -1;

1023 
	}
}

1025 
	$mg_mkdú
(c⁄° *
∑th
, 
mode
) {

1026 
buf
[
PATH_MAX
];

1027 
wch¨_t
 
wbuf
[
PATH_MAX
];

1029 
mode
 = 0;

1030 
	`mg_°æ˝y
(
buf
, 
∑th
, (buf));

1031 
	`ch™ge_¶ashes_to_back¶ashes
(
buf
);

1033 (Ë
	`Mu…iByãToWideCh¨
(
CP_UTF8
, 0, 
buf
, -1, 
wbuf
, (wbuf));

1035  
	`Cª©eDúe˘‹yW
(
wbuf
, 
NULL
) ? 0 : -1;

1036 
	}
}

1039 
DIR
 * 
	$›ídú
(c⁄° *
«me
) {

1040 
DIR
 *
dú
 = 
NULL
;

1041 
wch¨_t
 
w∑th
[
PATH_MAX
];

1042 
DWORD
 
©ås
;

1044 i‡(
«me
 =
NULL
) {

1045 
	`SëLa°Eº‹
(
ERROR_BAD_ARGUMENTS
);

1046 } i‡((
dú
 = (
DIR
 *Ë
	`mÆloc
((*dú))Ë=
NULL
) {

1047 
	`SëLa°Eº‹
(
ERROR_NOT_ENOUGH_MEMORY
);

1049 
	`to_unicode
(
«me
, 
w∑th
, 
	`ARRAY_SIZE
(wpath));

1050 
©ås
 = 
	`GëFûeAâribuãsW
(
w∑th
);

1051 i‡(
©ås
 != 0xFFFFFFFF &&

1052 ((
©ås
 & 
FILE_ATTRIBUTE_DIRECTORY
) == FILE_ATTRIBUTE_DIRECTORY)) {

1053 (Ë
	`wcsˇt
(
w∑th
, 
L
"\\*");

1054 
dú
->
h™dÀ
 = 
	`FödFú°FûeW
(
w∑th
, &dú->
öfo
);

1055 
dú
->
ªsu…
.
d_«me
[0] = '\0';

1057 
	`‰ì
(
dú
);

1058 
dú
 = 
NULL
;

1062  
dú
;

1063 
	}
}

1065 
	$˛o£dú
(
DIR
 *
dú
) {

1066 
ªsu…
 = 0;

1068 i‡(
dú
 !
NULL
) {

1069 i‡(
dú
->
h™dÀ
 !
INVALID_HANDLE_VALUE
)

1070 
ªsu…
 = 
	`FödClo£
(
dú
->
h™dÀ
) ? 0 : -1;

1072 
	`‰ì
(
dú
);

1074 
ªsu…
 = -1;

1075 
	`SëLa°Eº‹
(
ERROR_BAD_ARGUMENTS
);

1078  
ªsu…
;

1079 
	}
}

1081 
dúít
 * 
	$ªaddú
(
DIR
 *
dú
) {

1082 
dúít
 *
ªsu…
 = 0;

1084 i‡(
dú
) {

1085 i‡(
dú
->
h™dÀ
 !
INVALID_HANDLE_VALUE
) {

1086 
ªsu…
 = &
dú
->result;

1087 (Ë
	`WideCh¨ToMu…iByã
(
CP_UTF8
, 0,

1088 
dú
->
öfo
.
cFûeName
, -1, 
ªsu…
->
d_«me
,

1089 (
ªsu…
->
d_«me
), 
NULL
, NULL);

1091 i‡(!
	`FödNextFûeW
(
dú
->
h™dÀ
, &dú->
öfo
)) {

1092 (Ë
	`FödClo£
(
dú
->
h™dÀ
);

1093 
dú
->
h™dÀ
 = 
INVALID_HANDLE_VALUE
;

1097 
	`SëLa°Eº‹
(
ERROR_FILE_NOT_FOUND
);

1100 
	`SëLa°Eº‹
(
ERROR_BAD_ARGUMENTS
);

1103  
ªsu…
;

1104 
	}
}

1106 
	#£t_˛o£_⁄_exec
(
fd
)

1107 

	)

1108 
	$°¨t_thªad
(
mg_c⁄ãxt
 *
˘x
, 
mg_thªad_func_t
 
func
,

1109 *
∑øm
) {

1110 
HANDLE
 
hThªad
;

1111 
˘x
 = 
NULL
;

1113 
hThªad
 = 
	`Cª©eThªad
(
NULL
, 0, (
LPTHREAD_START_ROUTINE
Ë
func
, 
∑øm
, 0,

1114 
NULL
);

1115 i‡(
hThªad
 !
NULL
) {

1116 (Ë
	`Clo£H™dÀ
(
hThªad
);

1119  
hThªad
 =
NULL
 ? -1 : 0;

1120 
	}
}

1122 
HANDLE
 
	$dl›í
(c⁄° *
dŒ_«me
, 
Êags
) {

1123 
wch¨_t
 
wbuf
[
PATH_MAX
];

1124 
Êags
 = 0;

1125 
	`to_unicode
(
dŒ_«me
, 
wbuf
, 
	`ARRAY_SIZE
(wbuf));

1126  
	`LﬂdLibøryW
(
wbuf
);

1127 
	}
}

1129 #i‡!
deföed
(
NO_CGI
)

1130 
	#SIGKILL
 0

	)

1131 
	$kûl
(
pid_t
 
pid
, 
sig_num
) {

1132 (Ë
	`Tîmö©ePro˚ss
(
pid
, 
sig_num
);

1133 (Ë
	`Clo£H™dÀ
(
pid
);

1135 
	}
}

1137 
pid_t
 
	$•awn_¥o˚ss
(
mg_c⁄√˘i⁄
 *
c⁄n
, c⁄° *
¥og
,

1138 *
ívblk
, *
ívp
[], 
fd_°dö
,

1139 
fd_°dout
, c⁄° *
dú
) {

1140 
HANDLE
 
me
;

1141 *
p
, *
öãΩ
, 
cmdlöe
[
PATH_MAX
], 
buf
[PATH_MAX];

1142 
FILE
 *
Â
;

1143 
STARTUPINFOA
 
si
;

1144 
PROCESS_INFORMATION
 
pi
;

1146 
ívp
 = 
NULL
;

1148 (Ë
	`mem£t
(&
si
, 0, (si));

1149 (Ë
	`mem£t
(&
pi
, 0, (pi));

1152 
si
.
cb
 = (si);

1153 
si
.
dwFœgs
 = 
STARTF_USESTDHANDLES
 | 
STARTF_USESHOWWINDOW
;

1154 
si
.
wShowWödow
 = 
SW_HIDE
;

1156 
me
 = 
	`GëCuºítPro˚ss
();

1157 (Ë
	`Du∂iˇãH™dÀ
(
me
, (
HANDLE
Ë
	`_gë_osfh™dÀ
(
fd_°dö
), me,

1158 &
si
.
hStdI≈ut
, 0, 
TRUE
, 
DUPLICATE_SAME_ACCESS
);

1159 (Ë
	`Du∂iˇãH™dÀ
(
me
, (
HANDLE
Ë
	`_gë_osfh™dÀ
(
fd_°dout
), me,

1160 &
si
.
hStdOuçut
, 0, 
TRUE
, 
DUPLICATE_SAME_ACCESS
);

1163 
öãΩ
 = 
c⁄n
->
˘x
->
c⁄fig
[
CGI_INTERPRETER
];

1164 i‡(
öãΩ
 =
NULL
) {

1165 
buf
[2] = '\0';

1166 i‡((
Â
 = 
	`f›í
(
cmdlöe
, "r")Ë!
NULL
) {

1167 (Ë
	`fgës
(
buf
, (buf), 
Â
);

1168 i‡(
buf
[0] != '#' || buf[1] != '!') {

1170 
buf
[2] = '\0';

1173 
p
 = &
buf
[
	`°æí
(bufË- 1];Ö > bu‡&& 
	`is•a˚
(*p);Ö--) {

1174 *
p
 = '\0';

1177 (Ë
	`f˛o£
(
Â
);

1179 
öãΩ
 = 
buf
 + 2;

1182 (Ë
	`mg_¢¥ötf
(
c⁄n
, 
cmdlöe
, (cmdline), "%s%s%s%c%s",

1183 
öãΩ
, i¡îp[0] ='\0' ? "" : " ", 
dú
, 
DIRSEP
, 
¥og
);

1185 
	`DEBUG_TRACE
(("Ru¬ög [%s]", 
cmdlöe
));

1186 i‡(
	`Cª©ePro˚ssA
(
NULL
, 
cmdlöe
, NULL, NULL, 
TRUE
,

1187 
CREATE_NEW_PROCESS_GROUP
, 
ívblk
, 
dú
, &
si
, &
pi
) == 0) {

1188 
	`¸y
(
c⁄n
, "%s: CreateProcess(%s): %d",

1189 
__func__
, 
cmdlöe
, 
ERRNO
);

1190 
pi
.
hPro˚ss
 = (
pid_t
) -1;

1192 (Ë
	`˛o£
(
fd_°dö
);

1193 (Ë
	`˛o£
(
fd_°dout
);

1196 (Ë
	`Clo£H™dÀ
(
si
.
hStdOuçut
);

1197 (Ë
	`Clo£H™dÀ
(
si
.
hStdI≈ut
);

1198 (Ë
	`Clo£H™dÀ
(
pi
.
hThªad
);

1200  (
pid_t
Ë
pi
.
hPro˚ss
;

1201 
	}
}

1204 
	$£t_n⁄_blockög_mode
(
SOCKET
 
sock
) {

1205 
⁄
 = 1;

1206  
	`io˘lsockë
(
sock
, 
FIONBIO
, &
⁄
);

1207 
	}
}

1210 
	$mg_°©
(c⁄° *
∑th
, 
mg°©
 *
°p
) {

1211 
°©
 
°
;

1212 
ok
;

1214 i‡(
	`°©
(
∑th
, &
°
) == 0) {

1215 
ok
 = 0;

1216 
°p
->
size
 = 
°
.
°_size
;

1217 
°p
->
mtime
 = 
°
.
°_mtime
;

1218 
°p
->
is_dúe˘‹y
 = 
	`S_ISDIR
(
°
.
°_mode
);

1220 
ok
 = -1;

1223  
ok
;

1224 
	}
}

1226 
	$£t_˛o£_⁄_exec
(
fd
) {

1227 (Ë
	`f˙é
(
fd
, 
F_SETFD
, 
FD_CLOEXEC
);

1228 
	}
}

1230 
	$°¨t_thªad
(
mg_c⁄ãxt
 *
˘x
, 
mg_thªad_func_t
 
func
,

1231 *
∑øm
) {

1232 
±hªad_t
 
thªad_id
;

1233 
±hªad_©å_t
 
©å
;

1234 
ªtvÆ
;

1236 (Ë
	`±hªad_©å_öô
(&
©å
);

1237 (Ë
	`±hªad_©å_£tdëach°©e
(&
©å
, 
PTHREAD_CREATE_DETACHED
);

1241 i‡((
ªtvÆ
 = 
	`±hªad_¸óã
(&
thªad_id
, &
©å
, 
func
, 
∑øm
)) != 0) {

1242 
	`¸y
(
	`fc
(
˘x
), "%s: %s", 
__func__
, 
	`°ªº‹
(
ªtvÆ
));

1245  
ªtvÆ
;

1246 
	}
}

1248 #i‚de‡
NO_CGI


1249 
pid_t
 
	$•awn_¥o˚ss
(
mg_c⁄√˘i⁄
 *
c⁄n
, c⁄° *
¥og
,

1250 *
ívblk
, *
ívp
[], 
fd_°dö
,

1251 
fd_°dout
, c⁄° *
dú
) {

1252 
pid_t
 
pid
;

1253 c⁄° *
öãΩ
;

1255 
ívblk
 = 
NULL
;

1257 i‡((
pid
 = 
	`f‹k
()) == -1) {

1259 
	`£nd_hâp_îr‹
(
c⁄n
, 500, 
hâp_500_îr‹
, "f‹k(): %s", 
	`°ªº‹
(
ERRNO
));

1260 } i‡(
pid
 == 0) {

1262 i‡(
	`chdú
(
dú
) != 0) {

1263 
	`¸y
(
c⁄n
, "%s: chdú(%s): %s", 
__func__
, 
dú
, 
	`°ªº‹
(
ERRNO
));

1264 } i‡(
	`dup2
(
fd_°dö
, 0) == -1) {

1265 
	`¸y
(
c⁄n
, "%s: dup2(%d, 0): %s", 
__func__
, 
fd_°dö
, 
	`°ªº‹
(
ERRNO
));

1266 } i‡(
	`dup2
(
fd_°dout
, 1) == -1) {

1267 
	`¸y
(
c⁄n
, "%s: dup2(%d, 1): %s", 
__func__
, 
fd_°dout
, 
	`°ªº‹
(
ERRNO
));

1269 (Ë
	`dup2
(
fd_°dout
, 2);

1270 (Ë
	`˛o£
(
fd_°dö
);

1271 (Ë
	`˛o£
(
fd_°dout
);

1274 
öãΩ
 = 
c⁄n
->
˘x
->
c⁄fig
[
CGI_INTERPRETER
];

1275 i‡(
öãΩ
 =
NULL
) {

1276 (Ë
	`exe˛e
(
¥og
,Örog, 
NULL
, 
ívp
);

1277 
	`¸y
(
c⁄n
, "%s:Éxe˛e(%s): %s", 
__func__
, 
¥og
, 
	`°ªº‹
(
ERRNO
));

1279 (Ë
	`exe˛e
(
öãΩ
, i¡îp, 
¥og
, 
NULL
, 
ívp
);

1280 
	`¸y
(
c⁄n
, "%s:Éxe˛e(%†%s): %s", 
__func__
, 
öãΩ
, 
¥og
,

1281 
	`°ªº‹
(
ERRNO
));

1284 
	`exô
(
EXIT_FAILURE
);

1287 (Ë
	`˛o£
(
fd_°dö
);

1288 (Ë
	`˛o£
(
fd_°dout
);

1291  
pid
;

1292 
	}
}

1295 
	$£t_n⁄_blockög_mode
(
SOCKET
 
sock
) {

1296 
Êags
;

1298 
Êags
 = 
	`f˙é
(
sock
, 
F_GETFL
, 0);

1299 (Ë
	`f˙é
(
sock
, 
F_SETFL
, 
Êags
 | 
O_NONBLOCK
);

1302 
	}
}

1307 
öt64_t
 
	$push
(
FILE
 *
Â
, 
SOCKET
 
sock
, 
SSL
 *
s¶
, c⁄° *
buf
,

1308 
öt64_t
 
Àn
) {

1309 
öt64_t
 
£¡
;

1310 
n
, 
k
;

1312 
£¡
 = 0;

1313 
£¡
 < 
Àn
) {

1316 
k
 = 
Àn
 - 
£¡
 > 
INT_MAX
 ? INT_MAX : () (len - sent);

1318 i‡(
s¶
 !
NULL
) {

1319 
n
 = 
	`SSL_wrôe
(
s¶
, 
buf
 + 
£¡
, 
k
);

1320 } i‡(
Â
 !
NULL
) {

1321 
n
 = (Ë
	`fwrôe
(
buf
 + 
£¡
, 1, (
size_t
)
k
, 
Â
);

1322 i‡(
	`„º‹
(
Â
))

1323 
n
 = -1;

1325 
n
 = (Ë
	`£nd
(
sock
, 
buf
 + 
£¡
, (
size_t
)
k
, 0);

1328 i‡(
n
 < 0)

1331 
£¡
 +
n
;

1334  
£¡
;

1335 
	}
}

1339 
	$puŒ
(
FILE
 *
Â
, 
SOCKET
 
sock
, 
SSL
 *
s¶
, *
buf
, 
Àn
) {

1340 
ƒód
;

1342 i‡(
s¶
 !
NULL
) {

1343 
ƒód
 = 
	`SSL_ªad
(
s¶
, 
buf
, 
Àn
);

1344 } i‡(
Â
 !
NULL
) {

1348 
ƒód
 = (Ë
	`ªad
(
	`fûío
(
Â
), 
buf
, (
size_t
Ë
Àn
);

1349 i‡(
	`„º‹
(
Â
))

1350 
ƒód
 = -1;

1352 
ƒód
 = (Ë
	`ªcv
(
sock
, 
buf
, (
size_t
Ë
Àn
, 0);

1355  
ƒód
;

1356 
	}
}

1358 
	$mg_ªad
(
mg_c⁄√˘i⁄
 *
c⁄n
, *
buf
, 
size_t
 
Àn
) {

1359 
n
, 
buf„ªd_Àn
, 
ƒód
;

1360 c⁄° *
buf„ªd
;

1362 
	`as£π
(
c⁄n
->
c⁄ã¡_Àn
 >c⁄n->
c⁄sumed_c⁄ã¡
);

1363 
	`DEBUG_TRACE
(("%∞%zu %Œd %Œd", 
buf
, 
Àn
,

1364 
c⁄n
->
c⁄ã¡_Àn
, c⁄n->
c⁄sumed_c⁄ã¡
));

1365 
ƒód
 = 0;

1366 i‡(
c⁄n
->
c⁄sumed_c⁄ã¡
 < c⁄n->
c⁄ã¡_Àn
) {

1369 
öt64_t
 
to_ªad
 = 
c⁄n
->
c⁄ã¡_Àn
 - c⁄n->
c⁄sumed_c⁄ã¡
;

1370 i‡(
to_ªad
 < (
öt64_t
Ë
Àn
) {

1371 
Àn
 = (Ë
to_ªad
;

1375 
buf„ªd
 = 
c⁄n
->
buf
 + c⁄n->
ªque°_Àn
 + c⁄n->
c⁄sumed_c⁄ã¡
;

1376 
buf„ªd_Àn
 = 
c⁄n
->
d©a_Àn
 - c⁄n->
ªque°_Àn
;

1377 
	`as£π
(
buf„ªd_Àn
 >= 0);

1380 i‡(
c⁄n
->
c⁄sumed_c⁄ã¡
 < (
öt64_t
Ë
buf„ªd_Àn
) {

1381 
buf„ªd_Àn
 -(Ë
c⁄n
->
c⁄sumed_c⁄ã¡
;

1382 i‡(
Àn
 < (
size_t
Ë
buf„ªd_Àn
) {

1383 
buf„ªd_Àn
 = (Ë
Àn
;

1385 
	`mem˝y
(
buf
, 
buf„ªd
, (
size_t
)
buf„ªd_Àn
);

1386 
Àn
 -
buf„ªd_Àn
;

1387 
buf
 = (*Ëbu‡+ 
buf„ªd_Àn
;

1388 
c⁄n
->
c⁄sumed_c⁄ã¡
 +
buf„ªd_Àn
;

1389 
ƒód
 = 
buf„ªd_Àn
;

1393 
Àn
 > 0) {

1394 
n
 = 
	`puŒ
(
NULL
, 
c⁄n
->
˛õ¡
.
sock
, c⁄n->
s¶
, (*Ë
buf
, (Ë
Àn
);

1395 i‡(
n
 <= 0) {

1398 
buf
 = (*Ëbu‡+ 
n
;

1399 
c⁄n
->
c⁄sumed_c⁄ã¡
 +
n
;

1400 
ƒód
 +
n
;

1401 
Àn
 -
n
;

1404  
ƒód
;

1405 
	}
}

1407 
	$mg_wrôe
(
mg_c⁄√˘i⁄
 *
c⁄n
, c⁄° *
buf
, 
size_t
 
Àn
) {

1408  (Ë
	`push
(
NULL
, 
c⁄n
->
˛õ¡
.
sock
, c⁄n->
s¶
,

1409 (c⁄° *Ë
buf
, (
öt64_t
Ë
Àn
);

1410 
	}
}

1412 
	$mg_¥ötf
(
mg_c⁄√˘i⁄
 *
c⁄n
, c⁄° *
fmt
, ...) {

1413 
buf
[
BUFSIZ
];

1414 
Àn
;

1415 
va_li°
 
≠
;

1417 
	`va_°¨t
(
≠
, 
fmt
);

1418 
Àn
 = 
	`mg_v¢¥ötf
(
c⁄n
, 
buf
, (buf), 
fmt
, 
≠
);

1419 
	`va_íd
(
≠
);

1421  
	`mg_wrôe
(
c⁄n
, 
buf
, (
size_t
)
Àn
);

1422 
	}
}

1429 
size_t
 
	$uæ_decode
(c⁄° *
§c
, 
size_t
 
§c_Àn
, *
d°
,

1430 
size_t
 
d°_Àn
, 
is_f‹m_uæ_ícoded
) {

1431 
size_t
 
i
, 
j
;

1432 
a
, 
b
;

1433 
	#HEXTOI
(
x
Ë(
	`isdigô
(xË? x - '0' : x - 'W')

	)

1435 
i
 = 
j
 = 0; i < 
§c_Àn
 && j < 
d°_Àn
 - 1; i++, j++) {

1436 i‡(
§c
[
i
] == '%' &&

1437 
	`isxdigô
(* (c⁄° *Ë(
§c
 + 
i
 + 1)) &&

1438 
	`isxdigô
(* (c⁄° *Ë(
§c
 + 
i
 + 2))) {

1439 
a
 = 
	`tﬁowî
(* (c⁄° *Ë(
§c
 + 
i
 + 1));

1440 
b
 = 
	`tﬁowî
(* (c⁄° *Ë(
§c
 + 
i
 + 2));

1441 
d°
[
j
] = (Ë((
	`HEXTOI
(
a
Ë<< 4Ë| HEXTOI(
b
));

1442 
i
 += 2;

1443 } i‡(
is_f‹m_uæ_ícoded
 && 
§c
[
i
] == '+') {

1444 
d°
[
j
] = ' ';

1446 
d°
[
j
] = 
§c
[
i
];

1450 
d°
[
j
] = '\0';

1452  
j
;

1453 
	}
}

1459 
	$mg_gë_v¨
(c⁄° *
buf
, 
size_t
 
buf_Àn
, c⁄° *
«me
,

1460 *
d°
, 
size_t
 
d°_Àn
) {

1461 c⁄° *
p
, *
e
, *
s
;

1462 
size_t
 
«me_Àn
, 
Àn
;

1464 
«me_Àn
 = 
	`°æí
(
«me
);

1465 
e
 = 
buf
 + 
buf_Àn
;

1466 
Àn
 = -1;

1467 
d°
[0] = '\0';

1470 
p
 = 
buf
;Ö !
NULL
 &&Ö + 
«me_Àn
 < 
e
;Ö++) {

1471 i‡((
p
 =
buf
 ||Ö[-1] ='&'Ë&&Ö[
«me_Àn
] == '=' &&

1472 !
	`mg_°∫ˇ£cmp
(
«me
, 
p
, 
«me_Àn
)) {

1475 
p
 +
«me_Àn
 + 1;

1478 
s
 = (c⁄° *Ë
	`memchr
(
p
, '&', (
size_t
)(
e
 -Ö));

1479 i‡(
s
 =
NULL
) {

1480 
s
 = 
e
;

1482 
	`as£π
(
s
 >
p
);

1485 i‡((
size_t
Ë(
s
 - 
p
Ë< 
d°_Àn
) {

1486 
Àn
 = 
	`uæ_decode
(
p
, (
size_t
)(
s
 -Ö), 
d°
, 
d°_Àn
, 1);

1492  (Ë
Àn
;

1493 
	}
}

1495 
	$mg_gë_cookõ
(c⁄° 
mg_c⁄√˘i⁄
 *
c⁄n
, c⁄° *
cookõ_«me
,

1496 *
d°
, 
size_t
 
d°_size
) {

1497 c⁄° *
s
, *
p
, *
íd
;

1498 
«me_Àn
, 
Àn
 = -1;

1500 
d°
[0] = '\0';

1501 i‡((
s
 = 
	`mg_gë_hódî
(
c⁄n
, "Cookõ")Ë=
NULL
) {

1505 
«me_Àn
 = (Ë
	`°æí
(
cookõ_«me
);

1506 
íd
 = 
s
 + 
	`°æí
(s);

1508 ; (
s
 = 
	`°r°r
(s, 
cookõ_«me
)Ë!
NULL
; s +
«me_Àn
)

1509 i‡(
s
[
«me_Àn
] == '=') {

1510 
s
 +
«me_Àn
 + 1;

1511 i‡((
p
 = 
	`°rchr
(
s
, ' ')Ë=
NULL
)

1512 
p
 = 
íd
;

1513 i‡(
p
[-1] == ';')

1514 
p
--;

1515 i‡(*
s
 ='"' && 
p
[-1] == '"' &&Ö > s + 1) {

1516 
s
++;

1517 
p
--;

1519 i‡((
size_t
Ë(
p
 - 
s
Ë< 
d°_size
) {

1520 
Àn
 = (Ë((
p
 - 
s
) + 1);

1521 
	`mg_°æ˝y
(
d°
, 
s
, (
size_t
)
Àn
);

1526  
Àn
;

1527 
	}
}

1532 
	$gë_documít_roŸ
(c⁄° 
mg_c⁄√˘i⁄
 *
c⁄n
,

1533 
vec
 *
documít_roŸ
) {

1534 c⁄° *
roŸ
, *
uri
;

1535 
Àn_of_m©ched_uri
;

1536 
vec
 
uri_vec
, 
∑th_vec
;

1538 
uri
 = 
c⁄n
->
ªque°_öfo
.uri;

1539 
Àn_of_m©ched_uri
 = 0;

1540 
roŸ
 = 
	`√xt_›ti⁄
(
c⁄n
->
˘x
->
c⁄fig
[
DOCUMENT_ROOT
], 
documít_roŸ
, 
NULL
);

1542 (
roŸ
 = 
	`√xt_›ti⁄
‘oŸ, &
uri_vec
, &
∑th_vec
)Ë!
NULL
) {

1543 i‡(
	`memcmp
(
uri
, 
uri_vec
.
±r
, uri_vec.
Àn
) == 0) {

1544 *
documít_roŸ
 = 
∑th_vec
;

1545 
Àn_of_m©ched_uri
 = (Ë
uri_vec
.
Àn
;

1550  
Àn_of_m©ched_uri
;

1551 
	}
}

1553 
	$c⁄vît_uri_to_fûe_«me
(
mg_c⁄√˘i⁄
 *
c⁄n
,

1554 c⁄° *
uri
, *
buf
,

1555 
size_t
 
buf_Àn
) {

1556 
vec
 vec;

1557 
m©ch_Àn
;

1559 
m©ch_Àn
 = 
	`gë_documít_roŸ
(
c⁄n
, &
vec
);

1560 
	`mg_¢¥ötf
(
c⁄n
, 
buf
, 
buf_Àn
, "%.*s%s", 
vec
.
Àn
, vec.
±r
, 
uri
 + 
m©ch_Àn
);

1562 #ifde‡
_WIN32


1563 
	`ch™ge_¶ashes_to_back¶ashes
(
buf
);

1566 
	`DEBUG_TRACE
(("[%s] -> [%s], [%.*s]", 
uri
, 
buf
, (Ë
vec
.
Àn
, vec.
±r
));

1567 
	}
}

1569 
s¶ize
(
mg_c⁄√˘i⁄
 *
c⁄n
, (*
func
)(
SSL
 *)) {

1570  (
c⁄n
->
s¶
 = 
	`SSL_√w
(c⁄n->
˘x
->
s¶_˘x
)Ë!
NULL
 &&

1571 
	`SSL_£t_fd
(
c⁄n
->
s¶
, c⁄n->
˛õ¡
.
sock
) == 1 &&

1572 
	`func
(
c⁄n
->
s¶
) == 1;

1573 
	}
}

1575 
mg_c⁄√˘i⁄
 *
	$mg_c⁄√˘
(
mg_c⁄√˘i⁄
 *
c⁄n
,

1576 c⁄° *
ho°
, 
p‹t
, 
u£_s¶
) {

1577 
mg_c⁄√˘i⁄
 *
√wc⁄n
 = 
NULL
;

1578 
sockaddr_ö
 
sö
;

1579 
ho°ít
 *
he
;

1580 
sock
;

1582 i‡(
c⁄n
->
˘x
->
s¶_˘x
 =
NULL
 && 
u£_s¶
) {

1583 
	`¸y
(
c⁄n
, "%s: SSL i†nŸ inôülized", 
__func__
);

1584 } i‡((
he
 = 
	`gëho°by«me
(
ho°
)Ë=
NULL
) {

1585 
	`¸y
(
c⁄n
, "%s: gëho°by«me(%s): %s", 
__func__
, 
ho°
, 
	`°ªº‹
(
ERRNO
));

1586 } i‡((
sock
 = 
	`sockë
(
PF_INET
, 
SOCK_STREAM
, 0)Ë=
INVALID_SOCKET
) {

1587 
	`¸y
(
c⁄n
, "%s: sockë: %s", 
__func__
, 
	`°ªº‹
(
ERRNO
));

1589 
sö
.
sö_Ámûy
 = 
AF_INET
;

1590 
sö
.
sö_p‹t
 = 
	`ht⁄s
((
uöt16_t
Ë
p‹t
);

1591 
sö
.
sö_addr
 = * (
ö_addr
 *Ë
he
->
h_addr_li°
[0];

1592 i‡(
	`c⁄√˘
(
sock
, (
sockaddr
 *Ë&
sö
, (sin)) != 0) {

1593 
	`¸y
(
c⁄n
, "%s: c⁄√˘(%s:%d): %s", 
__func__
, 
ho°
, 
p‹t
,

1594 
	`°ªº‹
(
ERRNO
));

1595 
	`˛o£sockë
(
sock
);

1596 } i‡((
√wc⁄n
 = (
mg_c⁄√˘i⁄
*Ë
	`ˇŒoc
(1, (*√wc⁄n))Ë=
NULL
) {

1597 
	`¸y
(
c⁄n
, "%s: cÆloc: %s", 
__func__
, 
	`°ªº‹
(
ERRNO
));

1598 
	`˛o£sockë
(
sock
);

1600 
√wc⁄n
->
˛õ¡
.
sock
 = sock;

1601 
√wc⁄n
->
˛õ¡
.
rß
.
u
.
sö
 = sin;

1602 i‡(
u£_s¶
) {

1603 
	`s¶ize
(
√wc⁄n
, 
SSL_c⁄√˘
);

1608  
√wc⁄n
;

1609 
	}
}

1615 
	$gë_ªque°_Àn
(c⁄° *
buf
, 
buÊí
) {

1616 c⁄° *
s
, *
e
;

1617 
Àn
 = 0;

1619 
	`DEBUG_TRACE
(("buf: %p,Üí: %d", 
buf
, 
buÊí
));

1620 
s
 = 
buf
, 
e
 = s + 
buÊí
 - 1; 
Àn
 <= 0 && s <É; s++)

1622 i‡(!
	`i•röt
(* (c⁄° *Ë
s
) && *s != '\r' &&

1623 *
s
 != '\n' && * (const *) s < 128) {

1624 
Àn
 = -1;

1625 } i‡(
s
[0] == '\n' && s[1] == '\n') {

1626 
Àn
 = (Ë(
s
 - 
buf
) + 2;

1627 } i‡(
s
[0] ='\n' && &s[1] < 
e
 &&

1628 
s
[1] == '\r' && s[2] == '\n') {

1629 
Àn
 = (Ë(
s
 - 
buf
) + 3;

1632  
Àn
;

1633 
	}
}

1636 
	$m⁄th_numbî_to_m⁄th_«me
(c⁄° *
s
) {

1637 
size_t
 
i
;

1639 
i
 = 0; i < 
	`ARRAY_SIZE
(
m⁄th_«mes
); i++)

1640 i‡(!
	`°rcmp
(
s
, 
m⁄th_«mes
[
i
]))

1641  (Ë
i
;

1644 
	}
}

1647 
time_t
 
	$∑r£_d©e_°rög
(c⁄° *
s
) {

1648 
time_t
 
cuºít_time
;

1649 
tm
Åm, *
tmp
;

1650 
m⁄
[32];

1651 
£c
, 
mö
, 
hour
, 
mday
, 
m⁄th
, 
yór
;

1653 (Ë
	`mem£t
(&
tm
, 0, (tm));

1654 
£c
 = 
mö
 = 
hour
 = 
mday
 = 
m⁄th
 = 
yór
 = 0;

1656 i‡(((
	`ssˇnf
(
s
, "%d/%3s/%d %d:%d:%d",

1657 &
mday
, 
m⁄
, &
yór
, &
hour
, &
mö
, &
£c
) == 6) ||

1658 (
	`ssˇnf
(
s
, "%d %3s %d %d:%d:%d",

1659 &
mday
, 
m⁄
, &
yór
, &
hour
, &
mö
, &
£c
) == 6) ||

1660 (
	`ssˇnf
(
s
, "%*3s, %d %3s %d %d:%d:%d",

1661 &
mday
, 
m⁄
, &
yór
, &
hour
, &
mö
, &
£c
) == 6) ||

1662 (
	`ssˇnf
(
s
, "%d-%3s-%d %d:%d:%d",

1663 &
mday
, 
m⁄
, &
yór
, &
hour
, &
mö
, &
£c
) == 6)) &&

1664 (
m⁄th
 = 
	`m⁄th_numbî_to_m⁄th_«me
(
m⁄
)) != -1) {

1665 
tm
.
tm_mday
 = 
mday
;

1666 
tm
.
tm_m⁄
 = 
m⁄th
;

1667 
tm
.
tm_yór
 = 
yór
;

1668 
tm
.
tm_hour
 = 
hour
;

1669 
tm
.
tm_mö
 = 
mö
;

1670 
tm
.
tm_£c
 = 
£c
;

1673 i‡(
tm
.
tm_yór
 > 1900) {

1674 
tm
.
tm_yór
 -= 1900;

1675 } i‡(
tm
.
tm_yór
 < 70) {

1676 
tm
.
tm_yór
 += 100;

1680 
cuºít_time
 = 
	`time
(
NULL
);

1681 
tmp
 = 
	`loˇ…ime
(&
cuºít_time
);

1682 
tm
.
tm_isd°
 = 
tmp
->tm_isdst;

1684  
	`mktime
(&
tm
);

1685 
	}
}

1689 
	$ªmove_doubÀ_dŸs_™d_doubÀ_¶ashes
(*
s
) {

1690 *
p
 = 
s
;

1692 *
s
 != '\0') {

1693 *
p
++ = *
s
++;

1694 i‡(
s
[-1] == '/' || s[-1] == '\\') {

1696 *
s
 == '/' || *s == '\\') {

1697 
s
++;

1701 *
s
 == '.' && s[1] == '.') {

1702 
s
 += 2;

1706 *
p
 = '\0';

1707 
	}
}

1710 c⁄° *
	mexãnsi⁄
;

1711 
size_t
 
	mext_Àn
;

1712 c⁄° *
	mmime_ty≥
;

1713 
size_t
 
	mmime_ty≥_Àn
;

1714 } 
	gbuûtö_mime_ty≥s
[] = {

1753 {
NULL
, 0, NULL, 0}

1758 
	$gë_mime_ty≥
(
mg_c⁄ãxt
 *
˘x
, c⁄° *
∑th
,

1759 
vec
 *vec) {

1760 
vec
 
ext_vec
, 
mime_vec
;

1761 c⁄° *
li°
, *
ext
;

1762 
size_t
 
i
, 
∑th_Àn
;

1764 
∑th_Àn
 = 
	`°æí
(
∑th
);

1768 
li°
 = 
˘x
->
c⁄fig
[
EXTRA_MIME_TYPES
];

1769 (
li°
 = 
	`√xt_›ti⁄
÷i°, &
ext_vec
, &
mime_vec
)Ë!
NULL
) {

1771 
ext
 = 
∑th
 + 
∑th_Àn
 - 
ext_vec
.
Àn
;

1772 i‡(
	`mg_°∫ˇ£cmp
(
ext
, 
ext_vec
.
±r
,Éxt_vec.
Àn
) == 0) {

1773 *
vec
 = 
mime_vec
;

1779 
i
 = 0; 
buûtö_mime_ty≥s
[i].
exãnsi⁄
 !
NULL
; i++) {

1780 
ext
 = 
∑th
 + (
∑th_Àn
 - 
buûtö_mime_ty≥s
[
i
].
ext_Àn
);

1781 i‡(
∑th_Àn
 > 
buûtö_mime_ty≥s
[
i
].
ext_Àn
 &&

1782 
	`mg_°rˇ£cmp
(
ext
, 
buûtö_mime_ty≥s
[
i
].
exãnsi⁄
) == 0) {

1783 
vec
->
±r
 = 
buûtö_mime_ty≥s
[
i
].
mime_ty≥
;

1784 
vec
->
Àn
 = 
buûtö_mime_ty≥s
[
i
].
mime_ty≥_Àn
;

1790 
vec
->
±r
 = "text/plain";

1791 
vec
->
Àn
 = 10;

1792 
	}
}

1794 #i‚de‡
HAVE_MD5


1795 
	sMD5C⁄ãxt
 {

1796 
uöt32_t
 
	mbuf
[4];

1797 
uöt32_t
 
	mbôs
[2];

1798 
	mö
[64];

1799 } 
	tMD5_CTX
;

1801 #i‡
deföed
(
__BYTE_ORDER
) && (__BYTE_ORDER == 1234)

1802 
	#byãRevî£
(
buf
, 
Àn
)

1803 #ñ£

	)

1804 
	$byãRevî£
(*
buf
, 
l⁄gs
) {

1805 
uöt32_t
 
t
;

1807 
t
 = (
uöt32_t
Ë((Ë
buf
[3] << 8 | buf[2]) << 16 |

1808 ((Ë
buf
[1] << 8 | buf[0]);

1809 *(
uöt32_t
 *Ë
buf
 = 
t
;

1810 
buf
 += 4;

1811 } --
l⁄gs
);

1812 
	}
}

1815 
	#F1
(
x
, 
y
, 
z
Ë(z ^ (x & (y ^ z)))

	)

1816 
	#F2
(
x
, 
y
, 
z
Ë
	`F1
(z, x, y)

	)

1817 
	#F3
(
x
, 
y
, 
z
Ë(x ^ y ^ z)

	)

1818 
	#F4
(
x
, 
y
, 
z
Ë(y ^ (x | ~z))

	)

1820 
	#MD5STEP
(
f
, 
w
, 
x
, 
y
, 
z
, 
d©a
, 
s
Ë\

	)

1821 –
	gw
 +
f
(
x
, 
y
, 
z
Ë+ 
	gd©a
, w = 
w
<<
s
 | w>>(32-s), w += x )

1825 
	$MD5Inô
(
MD5_CTX
 *
˘x
) {

1826 
˘x
->
buf
[0] = 0x67452301;

1827 
˘x
->
buf
[1] = 0xefcdab89;

1828 
˘x
->
buf
[2] = 0x98badcfe;

1829 
˘x
->
buf
[3] = 0x10325476;

1831 
˘x
->
bôs
[0] = 0;

1832 
˘x
->
bôs
[1] = 0;

1833 
	}
}

1835 
	$MD5Tønsf‹m
(
uöt32_t
 
buf
[4], uöt32_àc⁄° 
ö
[16]) {

1836 
uöt32_t
 
a
, 
b
, 
c
, 
d
;

1838 
a
 = 
buf
[0];

1839 
b
 = 
buf
[1];

1840 
c
 = 
buf
[2];

1841 
d
 = 
buf
[3];

1843 
	`MD5STEP
(
F1
, 
a
, 
b
, 
c
, 
d
, 
ö
[0] + 0xd76aa478, 7);

1844 
	`MD5STEP
(
F1
, 
d
, 
a
, 
b
, 
c
, 
ö
[1] + 0xe8c7b756, 12);

1845 
	`MD5STEP
(
F1
, 
c
, 
d
, 
a
, 
b
, 
ö
[2] + 0x242070db, 17);

1846 
	`MD5STEP
(
F1
, 
b
, 
c
, 
d
, 
a
, 
ö
[3] + 0xc1bdceee, 22);

1847 
	`MD5STEP
(
F1
, 
a
, 
b
, 
c
, 
d
, 
ö
[4] + 0xf57c0faf, 7);

1848 
	`MD5STEP
(
F1
, 
d
, 
a
, 
b
, 
c
, 
ö
[5] + 0x4787c62a, 12);

1849 
	`MD5STEP
(
F1
, 
c
, 
d
, 
a
, 
b
, 
ö
[6] + 0xa8304613, 17);

1850 
	`MD5STEP
(
F1
, 
b
, 
c
, 
d
, 
a
, 
ö
[7] + 0xfd469501, 22);

1851 
	`MD5STEP
(
F1
, 
a
, 
b
, 
c
, 
d
, 
ö
[8] + 0x698098d8, 7);

1852 
	`MD5STEP
(
F1
, 
d
, 
a
, 
b
, 
c
, 
ö
[9] + 0x8b44f7af, 12);

1853 
	`MD5STEP
(
F1
, 
c
, 
d
, 
a
, 
b
, 
ö
[10] + 0xffff5bb1, 17);

1854 
	`MD5STEP
(
F1
, 
b
, 
c
, 
d
, 
a
, 
ö
[11] + 0x895cd7be, 22);

1855 
	`MD5STEP
(
F1
, 
a
, 
b
, 
c
, 
d
, 
ö
[12] + 0x6b901122, 7);

1856 
	`MD5STEP
(
F1
, 
d
, 
a
, 
b
, 
c
, 
ö
[13] + 0xfd987193, 12);

1857 
	`MD5STEP
(
F1
, 
c
, 
d
, 
a
, 
b
, 
ö
[14] + 0xa679438e, 17);

1858 
	`MD5STEP
(
F1
, 
b
, 
c
, 
d
, 
a
, 
ö
[15] + 0x49b40821, 22);

1860 
	`MD5STEP
(
F2
, 
a
, 
b
, 
c
, 
d
, 
ö
[1] + 0xf61e2562, 5);

1861 
	`MD5STEP
(
F2
, 
d
, 
a
, 
b
, 
c
, 
ö
[6] + 0xc040b340, 9);

1862 
	`MD5STEP
(
F2
, 
c
, 
d
, 
a
, 
b
, 
ö
[11] + 0x265e5a51, 14);

1863 
	`MD5STEP
(
F2
, 
b
, 
c
, 
d
, 
a
, 
ö
[0] + 0xe9b6c7aa, 20);

1864 
	`MD5STEP
(
F2
, 
a
, 
b
, 
c
, 
d
, 
ö
[5] + 0xd62f105d, 5);

1865 
	`MD5STEP
(
F2
, 
d
, 
a
, 
b
, 
c
, 
ö
[10] + 0x02441453, 9);

1866 
	`MD5STEP
(
F2
, 
c
, 
d
, 
a
, 
b
, 
ö
[15] + 0xd8a1e681, 14);

1867 
	`MD5STEP
(
F2
, 
b
, 
c
, 
d
, 
a
, 
ö
[4] + 0xe7d3fbc8, 20);

1868 
	`MD5STEP
(
F2
, 
a
, 
b
, 
c
, 
d
, 
ö
[9] + 0x21e1cde6, 5);

1869 
	`MD5STEP
(
F2
, 
d
, 
a
, 
b
, 
c
, 
ö
[14] + 0xc33707d6, 9);

1870 
	`MD5STEP
(
F2
, 
c
, 
d
, 
a
, 
b
, 
ö
[3] + 0xf4d50d87, 14);

1871 
	`MD5STEP
(
F2
, 
b
, 
c
, 
d
, 
a
, 
ö
[8] + 0x455a14ed, 20);

1872 
	`MD5STEP
(
F2
, 
a
, 
b
, 
c
, 
d
, 
ö
[13] + 0xa9e3e905, 5);

1873 
	`MD5STEP
(
F2
, 
d
, 
a
, 
b
, 
c
, 
ö
[2] + 0xfcefa3f8, 9);

1874 
	`MD5STEP
(
F2
, 
c
, 
d
, 
a
, 
b
, 
ö
[7] + 0x676f02d9, 14);

1875 
	`MD5STEP
(
F2
, 
b
, 
c
, 
d
, 
a
, 
ö
[12] + 0x8d2a4c8a, 20);

1877 
	`MD5STEP
(
F3
, 
a
, 
b
, 
c
, 
d
, 
ö
[5] + 0xfffa3942, 4);

1878 
	`MD5STEP
(
F3
, 
d
, 
a
, 
b
, 
c
, 
ö
[8] + 0x8771f681, 11);

1879 
	`MD5STEP
(
F3
, 
c
, 
d
, 
a
, 
b
, 
ö
[11] + 0x6d9d6122, 16);

1880 
	`MD5STEP
(
F3
, 
b
, 
c
, 
d
, 
a
, 
ö
[14] + 0xfde5380c, 23);

1881 
	`MD5STEP
(
F3
, 
a
, 
b
, 
c
, 
d
, 
ö
[1] + 0xa4beea44, 4);

1882 
	`MD5STEP
(
F3
, 
d
, 
a
, 
b
, 
c
, 
ö
[4] + 0x4bdecfa9, 11);

1883 
	`MD5STEP
(
F3
, 
c
, 
d
, 
a
, 
b
, 
ö
[7] + 0xf6bb4b60, 16);

1884 
	`MD5STEP
(
F3
, 
b
, 
c
, 
d
, 
a
, 
ö
[10] + 0xbebfbc70, 23);

1885 
	`MD5STEP
(
F3
, 
a
, 
b
, 
c
, 
d
, 
ö
[13] + 0x289b7ec6, 4);

1886 
	`MD5STEP
(
F3
, 
d
, 
a
, 
b
, 
c
, 
ö
[0] + 0xeaa127fa, 11);

1887 
	`MD5STEP
(
F3
, 
c
, 
d
, 
a
, 
b
, 
ö
[3] + 0xd4ef3085, 16);

1888 
	`MD5STEP
(
F3
, 
b
, 
c
, 
d
, 
a
, 
ö
[6] + 0x04881d05, 23);

1889 
	`MD5STEP
(
F3
, 
a
, 
b
, 
c
, 
d
, 
ö
[9] + 0xd9d4d039, 4);

1890 
	`MD5STEP
(
F3
, 
d
, 
a
, 
b
, 
c
, 
ö
[12] + 0xe6db99e5, 11);

1891 
	`MD5STEP
(
F3
, 
c
, 
d
, 
a
, 
b
, 
ö
[15] + 0x1fa27cf8, 16);

1892 
	`MD5STEP
(
F3
, 
b
, 
c
, 
d
, 
a
, 
ö
[2] + 0xc4ac5665, 23);

1894 
	`MD5STEP
(
F4
, 
a
, 
b
, 
c
, 
d
, 
ö
[0] + 0xf4292244, 6);

1895 
	`MD5STEP
(
F4
, 
d
, 
a
, 
b
, 
c
, 
ö
[7] + 0x432aff97, 10);

1896 
	`MD5STEP
(
F4
, 
c
, 
d
, 
a
, 
b
, 
ö
[14] + 0xab9423a7, 15);

1897 
	`MD5STEP
(
F4
, 
b
, 
c
, 
d
, 
a
, 
ö
[5] + 0xfc93a039, 21);

1898 
	`MD5STEP
(
F4
, 
a
, 
b
, 
c
, 
d
, 
ö
[12] + 0x655b59c3, 6);

1899 
	`MD5STEP
(
F4
, 
d
, 
a
, 
b
, 
c
, 
ö
[3] + 0x8f0ccc92, 10);

1900 
	`MD5STEP
(
F4
, 
c
, 
d
, 
a
, 
b
, 
ö
[10] + 0xffeff47d, 15);

1901 
	`MD5STEP
(
F4
, 
b
, 
c
, 
d
, 
a
, 
ö
[1] + 0x85845dd1, 21);

1902 
	`MD5STEP
(
F4
, 
a
, 
b
, 
c
, 
d
, 
ö
[8] + 0x6fa87e4f, 6);

1903 
	`MD5STEP
(
F4
, 
d
, 
a
, 
b
, 
c
, 
ö
[15] + 0xfe2ce6e0, 10);

1904 
	`MD5STEP
(
F4
, 
c
, 
d
, 
a
, 
b
, 
ö
[6] + 0xa3014314, 15);

1905 
	`MD5STEP
(
F4
, 
b
, 
c
, 
d
, 
a
, 
ö
[13] + 0x4e0811a1, 21);

1906 
	`MD5STEP
(
F4
, 
a
, 
b
, 
c
, 
d
, 
ö
[4] + 0xf7537e82, 6);

1907 
	`MD5STEP
(
F4
, 
d
, 
a
, 
b
, 
c
, 
ö
[11] + 0xbd3af235, 10);

1908 
	`MD5STEP
(
F4
, 
c
, 
d
, 
a
, 
b
, 
ö
[2] + 0x2ad7d2bb, 15);

1909 
	`MD5STEP
(
F4
, 
b
, 
c
, 
d
, 
a
, 
ö
[9] + 0xeb86d391, 21);

1911 
buf
[0] +
a
;

1912 
buf
[1] +
b
;

1913 
buf
[2] +
c
;

1914 
buf
[3] +
d
;

1915 
	}
}

1917 
	$MD5Upd©e
(
MD5_CTX
 *
˘x
, c⁄° *
buf
, 
Àn
) {

1918 
uöt32_t
 
t
;

1920 
t
 = 
˘x
->
bôs
[0];

1921 i‡((
˘x
->
bôs
[0] = 
t
 + ((
uöt32_t
Ë
Àn
 << 3)) <Å)

1922 
˘x
->
bôs
[1]++;

1923 
˘x
->
bôs
[1] +
Àn
 >> 29;

1925 
t
 = (t >> 3) & 0x3f;

1927 i‡(
t
) {

1928 *
p
 = (*Ë
˘x
->
ö
 + 
t
;

1930 
t
 = 64 -Å;

1931 i‡(
Àn
 < 
t
) {

1932 
	`mem˝y
(
p
, 
buf
, 
Àn
);

1935 
	`mem˝y
(
p
, 
buf
, 
t
);

1936 
	`byãRevî£
(
˘x
->
ö
, 16);

1937 
	`MD5Tønsf‹m
(
˘x
->
buf
, (
uöt32_t
 *Ë˘x->
ö
);

1938 
buf
 +
t
;

1939 
Àn
 -
t
;

1942 
Àn
 >= 64) {

1943 
	`mem˝y
(
˘x
->
ö
, 
buf
, 64);

1944 
	`byãRevî£
(
˘x
->
ö
, 16);

1945 
	`MD5Tønsf‹m
(
˘x
->
buf
, (
uöt32_t
 *Ë˘x->
ö
);

1946 
buf
 += 64;

1947 
Àn
 -= 64;

1950 
	`mem˝y
(
˘x
->
ö
, 
buf
, 
Àn
);

1951 
	}
}

1953 
	$MD5FöÆ
(
dige°
[16], 
MD5_CTX
 *
˘x
) {

1954 
cou¡
;

1955 *
p
;

1957 
cou¡
 = (
˘x
->
bôs
[0] >> 3) & 0x3F;

1959 
p
 = 
˘x
->
ö
 + 
cou¡
;

1960 *
p
++ = 0x80;

1961 
cou¡
 = 64 - 1 - count;

1962 i‡(
cou¡
 < 8) {

1963 
	`mem£t
(
p
, 0, 
cou¡
);

1964 
	`byãRevî£
(
˘x
->
ö
, 16);

1965 
	`MD5Tønsf‹m
(
˘x
->
buf
, (
uöt32_t
 *Ë˘x->
ö
);

1966 
	`mem£t
(
˘x
->
ö
, 0, 56);

1968 
	`mem£t
(
p
, 0, 
cou¡
 - 8);

1970 
	`byãRevî£
(
˘x
->
ö
, 14);

1972 ((
uöt32_t
 *Ë
˘x
->
ö
)[14] = ctx->
bôs
[0];

1973 ((
uöt32_t
 *Ë
˘x
->
ö
)[15] = ctx->
bôs
[1];

1975 
	`MD5Tønsf‹m
(
˘x
->
buf
, (
uöt32_t
 *Ë˘x->
ö
);

1976 
	`byãRevî£
((*Ë
˘x
->
buf
, 4);

1977 
	`mem˝y
(
dige°
, 
˘x
->
buf
, 16);

1978 
	`mem£t
((*Ë
˘x
, 0, (ctx));

1979 
	}
}

1984 
	$bö2°r
(*
to
, c⁄° *
p
, 
size_t
 
Àn
) {

1985 c⁄° *
hex
 = "0123456789abcdef";

1987 ; 
Àn
--; 
p
++) {

1988 *
to
++ = 
hex
[
p
[0] >> 4];

1989 *
to
++ = 
hex
[
p
[0] & 0x0f];

1991 *
to
 = '\0';

1992 
	}
}

1995 
	$mg_md5
(*
buf
, ...) {

1996 
hash
[16];

1997 c⁄° *
p
;

1998 
va_li°
 
≠
;

1999 
MD5_CTX
 
˘x
;

2001 
	`MD5Inô
(&
˘x
);

2003 
	`va_°¨t
(
≠
, 
buf
);

2004 (
p
 = 
	`va_¨g
(
≠
, c⁄° *)Ë!
NULL
) {

2005 
	`MD5Upd©e
(&
˘x
, (c⁄° *Ë
p
, (Ë
	`°æí
(p));

2007 
	`va_íd
(
≠
);

2009 
	`MD5FöÆ
(
hash
, &
˘x
);

2010 
	`bö2°r
(
buf
, 
hash
, (hash));

2011 
	}
}

2014 
	$check_∑ssw‹d
(
mg_c⁄√˘i⁄
 *
c⁄n
) {

2015 
ha2
[32 + 1], 
ex≥˘ed_ª•⁄£
[32 + 1];

2016 
mg_auth_hódî
 *
ah
 = 
c⁄n
->
ªque°_öfo
.ah;

2019 i‡(
c⁄n
->
ªque°_öfo
.
ªque°_mëhod
 =
NULL
 || 
ah
 == NULL ||

2020 
ah
->
n⁄˚
 =
NULL
 ||áh->
nc
 == NULL ||

2021 
ah
->
˙⁄˚
 =
NULL
 ||áh->
q›
 =NULL ||áh->
uri
 == NULL ||

2022 
ah
->
ª•⁄£
 =
NULL
) {

2029 
	`°æí
(
ah
->
ª•⁄£
) != 32

2035 
	`mg_md5
(
ha2
, 
c⁄n
->
ªque°_öfo
.
ªque°_mëhod
, ":", 
ah
->
uri
, 
NULL
);

2036 
	`mg_md5
(
ex≥˘ed_ª•⁄£
, 
ah
->
ha1
, ":",áh->
n⁄˚
, ":",áh->
nc
,

2037 ":", 
ah
->
˙⁄˚
, ":",áh->
q›
, ":", 
ha2
, 
NULL
);

2039  
	`mg_°rˇ£cmp
(
ah
->
ª•⁄£
, 
ex≥˘ed_ª•⁄£
) == 0;

2040 
	}
}

2044 
FILE
 *
	$›í_auth_fûe
(
mg_c⁄√˘i⁄
 *
c⁄n
, c⁄° *
∑th
) {

2045 
mg_c⁄ãxt
 *
˘x
 = 
c⁄n
->ctx;

2046 
«me
[
PATH_MAX
];

2047 c⁄° *
p
, *
e
;

2048 
mg°©
 
°
;

2049 
FILE
 *
Â
;

2051 i‡(
˘x
->
c⁄fig
[
GLOBAL_PASSWORDS_FILE
] !
NULL
) {

2053 
Â
 = 
	`mg_f›í
(
˘x
->
c⁄fig
[
GLOBAL_PASSWORDS_FILE
], "r");

2054 i‡(
Â
 =
NULL
)

2055 
	`¸y
(
	`fc
(
˘x
), "fopen(%s): %s",

2056 
˘x
->
c⁄fig
[
GLOBAL_PASSWORDS_FILE
], 
	`°ªº‹
(
ERRNO
));

2057 } i‡(!
	`mg_°©
(
∑th
, &
°
Ë&& st.
is_dúe˘‹y
) {

2058 (Ë
	`mg_¢¥ötf
(
c⁄n
, 
«me
, (name), "%s%c%s",

2059 
∑th
, 
DIRSEP
, 
PASSWORDS_FILE_NAME
);

2060 
Â
 = 
	`mg_f›í
(
«me
, "r");

2063 
p
 = 
∑th
, 
e
 =Ö + 
	`°æí
(p) - 1;É >Ö;É--)

2064 i‡(
	`IS_DIRSEP_CHAR
(*
e
))

2066 (Ë
	`mg_¢¥ötf
(
c⁄n
, 
«me
, (name), "%.*s%c%s",

2067 (Ë(
e
 - 
p
),Ö, 
DIRSEP
, 
PASSWORDS_FILE_NAME
);

2068 
Â
 = 
	`mg_f›í
(
«me
, "r");

2071  
Â
;

2072 
	}
}

2074 
	$∑r£_auth_hódî
(
mg_c⁄√˘i⁄
 *
c⁄n
) {

2075 *
«me
, *
vÆue
, *
s
;

2076 c⁄° *
auth_hódî
;

2078 i‡((
auth_hódî
 = 
	`mg_gë_hódî
(
c⁄n
, "Auth‹iz©i⁄")Ë=
NULL
 ||

2079 
	`mg_°∫ˇ£cmp
(
auth_hódî
, "Digest ", 7) != 0) {

2084 
c⁄n
->
auth_hódî
 = 
	`mg_°rdup
(auth_header + 7);

2085 
s
 = 
c⁄n
->
auth_hódî
;

2087 
c⁄n
->
ªque°_öfo
.
ah
 = (
mg_auth_hódî
*Ë
	`ˇŒoc
(1, (mg_auth_header));

2092 
	`is•a˚
(* (*Ë
s
)) {

2093 
s
++;

2095 
«me
 = 
	`skù_quŸed
(&
s
, "=", " ", 0);

2097 i‡(
s
[0] == '\"') {

2098 
s
++;

2099 
vÆue
 = 
	`skù_quŸed
(&
s
, "\"", " ", '\\');

2100 i‡(
s
[0] == ',') {

2101 
s
++;

2106 
vÆue
 = 
	`skù_quŸed
(&
s
, ", ", " ", 0);

2108 i‡(*
«me
 == '\0') {

2112 i‡(!
	`°rcmp
(
«me
, "username")) {

2113 
c⁄n
->
ªque°_öfo
.
ah
->
u£r
 = 
vÆue
;

2114 } i‡(!
	`°rcmp
(
«me
, "cnonce")) {

2115 
c⁄n
->
ªque°_öfo
.
ah
->
˙⁄˚
 = 
vÆue
;

2116 } i‡(!
	`°rcmp
(
«me
, "response")) {

2117 
c⁄n
->
ªque°_öfo
.
ah
->
ª•⁄£
 = 
vÆue
;

2118 } i‡(!
	`°rcmp
(
«me
, "uri")) {

2119 
c⁄n
->
ªque°_öfo
.
ah
->
uri
 = 
vÆue
;

2120 } i‡(!
	`°rcmp
(
«me
, "qop")) {

2121 
c⁄n
->
ªque°_öfo
.
ah
->
q›
 = 
vÆue
;

2122 } i‡(!
	`°rcmp
(
«me
, "nc")) {

2123 
c⁄n
->
ªque°_öfo
.
ah
->
nc
 = 
vÆue
;

2124 } i‡(!
	`°rcmp
(
«me
, "nonce")) {

2125 
c⁄n
->
ªque°_öfo
.
ah
->
n⁄˚
 = 
vÆue
;

2130 i‡(
c⁄n
->
ªque°_öfo
.
ah
->
u£r
 !
NULL
) {

2131 
c⁄n
->
ªque°_öfo
.
ªmŸe_u£r
 = 
	`mg_°rdup
(c⁄n->ªque°_öfo.
ah
->
u£r
);

2134 
	`‰ì
(
c⁄n
->
ªque°_öfo
.
ah
);

2135 
c⁄n
->
ªque°_öfo
.
ah
 = 
NULL
;

2136 
	`‰ì
(
c⁄n
->
auth_hódî
);

2137 
c⁄n
->
auth_hódî
 = 
NULL
;

2139 
	}
}

2142 
	$auth‹ize_‰om_fûe
(
mg_c⁄√˘i⁄
 *
c⁄n
, 
FILE
 *
Â
) {

2143 
löe
[256], 
f_u£r
[256], 
ha1
[256], 
f_domaö
[256];

2145 i‡(
c⁄n
->
ªque°_öfo
.
ah
 =
NULL
)

2149 
	`fgës
(
löe
, ÷öe), 
Â
Ë!
NULL
) {

2150 i‡(
	`ssˇnf
(
löe
, "%[^:]:%[^:]:%s", 
f_u£r
, 
f_domaö
, 
ha1
) != 3) {

2154 i‡(!
	`°rcmp
(
c⁄n
->
ªque°_öfo
.
ah
->
u£r
, 
f_u£r
) &&

2155 !
	`°rcmp
(
c⁄n
->
˘x
->
c⁄fig
[
AUTHENTICATION_DOMAIN
], 
f_domaö
)) {

2156 
c⁄n
->
ªque°_öfo
.
ah
->
ha1
 = 
	`mg_°rdup
(ha1);

2157  
	`check_∑ssw‹d
(
c⁄n
);

2162 
	}
}

2165 
	$check_auth‹iz©i⁄
(
mg_c⁄√˘i⁄
 *
c⁄n
, c⁄° *
∑th
) {

2166 
FILE
 *
Â
;

2167 
‚ame
[
PATH_MAX
];

2168 
vec
 
uri_vec
, 
fûíame_vec
;

2169 c⁄° *
li°
;

2170 
auth‹ized
;

2173 i‡(
c⁄n
->
ªque°_öfo
.
ah
 !
NULL
 &&

2174 
c⁄n
->
ªque°_öfo
.
ah
->
ha1
 !
NULL
) {

2175  
	`check_∑ssw‹d
(
c⁄n
);

2178 
Â
 = 
NULL
;

2179 
auth‹ized
 = 1;

2181 
li°
 = 
c⁄n
->
˘x
->
c⁄fig
[
PROTECT_URI
];

2182 (
li°
 = 
	`√xt_›ti⁄
÷i°, &
uri_vec
, &
fûíame_vec
)Ë!
NULL
) {

2183 i‡(!
	`memcmp
(
c⁄n
->
ªque°_öfo
.
uri
, 
uri_vec
.
±r
, uri_vec.
Àn
)) {

2184 (Ë
	`mg_¢¥ötf
(
c⁄n
, 
‚ame
, (fname), "%.*s",

2185 
fûíame_vec
.
Àn
, fûíame_vec.
±r
);

2186 i‡((
Â
 = 
	`mg_f›í
(
‚ame
, "r")Ë=
NULL
) {

2187 
	`¸y
(
c⁄n
, "%s: c™nŸ o≥¿%s: %s", 
__func__
, 
‚ame
, 
	`°ªº‹
(
î∫o
));

2193 i‡(
Â
 =
NULL
) {

2194 
Â
 = 
	`›í_auth_fûe
(
c⁄n
, 
∑th
);

2197 i‡(
Â
 !
NULL
) {

2198 
auth‹ized
 = 
	`auth‹ize_‰om_fûe
(
c⁄n
, 
Â
);

2199 (Ë
	`f˛o£
(
Â
);

2202  
auth‹ized
;

2203 
	}
}

2205 
	$mg_£nd_auth‹iz©i⁄_ªque°
(
mg_c⁄√˘i⁄
 *
c⁄n
, c⁄° *
n⁄˚
) {

2206 
c⁄n
->
ªque°_öfo
.
°©us_code
 = 401;

2207 (Ë
	`mg_¥ötf
(
c⁄n
,

2211 
c⁄n
->
˘x
->
c⁄fig
[
AUTHENTICATION_DOMAIN
]);

2212 i‡(
n⁄˚
 =
NULL
)

2213 (Ë
	`mg_¥ötf
(
c⁄n
, "%lu", (Ë
	`time
(
NULL
));

2215 (Ë
	`mg_¥ötf
(
c⁄n
, "%s", 
n⁄˚
);

2216 (Ë
	`mg_¥ötf
(
c⁄n
, "\"\r\n\r\n");

2217 
	}
}

2219 
	$is_auth‹ized_f‹_put
(
mg_c⁄√˘i⁄
 *
c⁄n
) {

2220 
FILE
 *
Â
;

2221 
ªt
 = 0;

2225 
Â
 = 
c⁄n
->
˘x
->
c⁄fig
[
PUT_DELETE_PASSWORDS_FILE
] =
NULL
 ? NULL :

2226 
	`mg_f›í
(
c⁄n
->
˘x
->
c⁄fig
[
PUT_DELETE_PASSWORDS_FILE
], "r");

2228 i‡(
Â
 !
NULL
) {

2229 
ªt
 = 
	`auth‹ize_‰om_fûe
(
c⁄n
, 
Â
);

2230 (Ë
	`f˛o£
(
Â
);

2233  
ªt
;

2234 
	}
}

2236 
	$mg_modify_∑ssw‹ds_fûe
(
mg_c⁄ãxt
 *
˘x
, c⁄° *
‚ame
,

2237 c⁄° *
u£r
, c⁄° *
∑ss
) {

2238 
found
;

2239 
löe
[512], 
u
[512], 
d
[512], 
ha1
[33], 
tmp
[
PATH_MAX
];

2240 c⁄° *
domaö
;

2241 
FILE
 *
Â
, *
Â2
;

2243 
found
 = 0;

2244 
Â
 = 
Â2
 = 
NULL
;

2245 
domaö
 = 
˘x
->
c⁄fig
[
AUTHENTICATION_DOMAIN
];

2248 i‡(
∑ss
[0] == '\0') {

2249 
∑ss
 = 
NULL
;

2252 (Ë
	`¢¥ötf
(
tmp
, —mp), "%s.tmp", 
‚ame
);

2255 i‡((
Â
 = 
	`mg_f›í
(
‚ame
, "a+")Ë!
NULL
) {

2256 (Ë
	`f˛o£
(
Â
);

2260 i‡((
Â
 = 
	`mg_f›í
(
‚ame
, "r")Ë=
NULL
) {

2261 
	`¸y
(
	`fc
(
˘x
), "C™nŸ o≥¿%s: %s", 
‚ame
, 
	`°ªº‹
(
î∫o
));

2263 } i‡((
Â2
 = 
	`mg_f›í
(
tmp
, "w+")Ë=
NULL
) {

2264 
	`¸y
(
	`fc
(
˘x
), "C™nŸ o≥¿%s: %s", 
tmp
, 
	`°ªº‹
(
î∫o
));

2269 
	`fgës
(
löe
, ÷öe), 
Â
Ë!
NULL
) {

2270 i‡(
	`ssˇnf
(
löe
, "%[^:]:%[^:]:%*s", 
u
, 
d
) != 2) {

2274 i‡(!
	`°rcmp
(
u
, 
u£r
Ë&& !°rcmp(
d
, 
domaö
)) {

2275 
found
++;

2276 i‡(
∑ss
 !
NULL
) {

2277 
	`mg_md5
(
ha1
, 
u£r
, ":", 
domaö
, ":", 
∑ss
, 
NULL
);

2278 
	`Ârötf
(
Â2
, "%s:%s:%s\n", 
u£r
, 
domaö
, 
ha1
);

2281 (Ë
	`Ârötf
(
Â2
, "%s", 
löe
);

2286 i‡(!
found
 && 
∑ss
 !
NULL
) {

2287 
	`mg_md5
(
ha1
, 
u£r
, ":", 
domaö
, ":", 
∑ss
, 
NULL
);

2288 (Ë
	`Ârötf
(
Â2
, "%s:%s:%s\n", 
u£r
, 
domaö
, 
ha1
);

2292 (Ë
	`f˛o£
(
Â
);

2293 (Ë
	`f˛o£
(
Â2
);

2296 (Ë
	`mg_ªmove
(
‚ame
);

2297 (Ë
	`mg_ª«me
(
tmp
, 
‚ame
);

2300 
	}
}

2302 
	sde
 {

2303 
mg_c⁄√˘i⁄
 *
	mc⁄n
;

2304 *
	mfûe_«me
;

2305 
mg°©
 
	m°
;

2308 
	$uæ_ícode
(c⁄° *
§c
, *
d°
, 
size_t
 
d°_Àn
) {

2309 c⁄° *
d⁄t_esˇ≥
 = "._-$,;~()";

2310 c⁄° *
hex
 = "0123456789abcdef";

2311 c⁄° *
íd
 = 
d°
 + 
d°_Àn
 - 1;

2313 ; *
§c
 !'\0' && 
d°
 < 
íd
; src++, dst++) {

2314 i‡(
	`iß um
(*(c⁄° *Ë
§c
) ||

2315 
	`°rchr
(
d⁄t_esˇ≥
, * (c⁄° *Ë
§c
Ë!
NULL
) {

2316 *
d°
 = *
§c
;

2317 } i‡(
d°
 + 2 < 
íd
) {

2318 
d°
[0] = '%';

2319 
d°
[1] = 
hex
[(* (c⁄° *Ë
§c
) >> 4];

2320 
d°
[2] = 
hex
[(* (c⁄° *Ë
§c
) & 0xf];

2321 
d°
 += 2;

2325 *
d°
 = '\0';

2326 
	}
}

2328 
	$¥öt_dú_íåy
(
de
 *de) {

2329 
size
[64], 
mod
[64], 
hªf
[
PATH_MAX
];

2331 i‡(
de
->
°
.
is_dúe˘‹y
) {

2332 (Ë
	`mg_¢¥ötf
(
de
->
c⁄n
, 
size
, (size), "%s", "[DIRECTORY]");

2336 i‡(
de
->
°
.
size
 < 1024) {

2337 (Ë
	`mg_¢¥ötf
(
de
->
c⁄n
, 
size
, (size),

2338 "%lu", (Ë
de
->
°
.
size
);

2339 } i‡(
de
->
°
.
size
 < 1024 * 1024) {

2340 (Ë
	`mg_¢¥ötf
(
de
->
c⁄n
, 
size
, (size),

2341 "%.1fk", (Ë
de
->
°
.
size
 / 1024.0);

2342 } i‡(
de
->
°
.
size
 < 1024 * 1024 * 1024) {

2343 (Ë
	`mg_¢¥ötf
(
de
->
c⁄n
, 
size
, (size),

2344 "%.1fM", (Ë
de
->
°
.
size
 / 1048576);

2346 (Ë
	`mg_¢¥ötf
(
de
->
c⁄n
, 
size
, (size),

2347 "%.1fG", (Ë
de
->
°
.
size
 / 1073741824);

2350 (Ë
	`°r·ime
(
mod
, (mod), "%d-%b-%Y %H:%M", 
	`loˇ…ime
(&
de
->
°
.
mtime
));

2351 
	`uæ_ícode
(
de
->
fûe_«me
, 
hªf
, (href));

2352 
de
->
c⁄n
->
num_byãs_£¡
 +
	`mg_¥ötf
(de->conn,

2355 
de
->
c⁄n
->
ªque°_öfo
.
uri
, 
hªf
, de->
°
.
is_dúe˘‹y
 ? "/" : "",

2356 
de
->
fûe_«me
, de->
°
.
is_dúe˘‹y
 ? "/" : "", 
mod
, 
size
);

2357 
	}
}

2363 
WINCDECL
 
	$com∑ª_dú_íåõs
(c⁄° *
p1
, c⁄° *
p2
) {

2364 c⁄° 
de
 *
a
 = (c⁄° dê*Ë
p1
, *
b
 = (c⁄° dê*Ë
p2
;

2365 c⁄° *
quîy_°rög
 = 
a
->
c⁄n
->
ªque°_öfo
.query_string;

2366 
cmp_ªsu…
 = 0;

2368 i‡(
quîy_°rög
 =
NULL
) {

2369 
quîy_°rög
 = "na";

2372 i‡(
a
->
°
.
is_dúe˘‹y
 && !
b
->st.is_directory) {

2374 } i‡(!
a
->
°
.
is_dúe˘‹y
 && 
b
->st.is_directory) {

2376 } i‡(*
quîy_°rög
 == 'n') {

2377 
cmp_ªsu…
 = 
	`°rcmp
(
a
->
fûe_«me
, 
b
->file_name);

2378 } i‡(*
quîy_°rög
 == 's') {

2379 
cmp_ªsu…
 = 
a
->
°
.
size
 =
b
->st.size ? 0 :

2380 
a
->
°
.
size
 > 
b
->st.size ? 1 : -1;

2381 } i‡(*
quîy_°rög
 == 'd') {

2382 
cmp_ªsu…
 = 
a
->
°
.
mtime
 =
b
->st.mtime ? 0 :

2383 
a
->
°
.
mtime
 > 
b
->st.mtime ? 1 : -1;

2386  
quîy_°rög
[1] ='d' ? -
cmp_ªsu…
 : cmp_result;

2387 
	}
}

2389 
	$h™dÀ_dúe˘‹y_ªque°
(
mg_c⁄√˘i⁄
 *
c⁄n
,

2390 c⁄° *
dú
) {

2391 
dúít
 *
dp
;

2392 
DIR
 *
dúp
;

2393 
de
 *
íåõs
 = 
NULL
;

2394 
∑th
[
PATH_MAX
];

2395 
i
, 
s‹t_dúe˘i⁄
, 
num_íåõs
 = 0, 
¨r_size
 = 128;

2397 i‡((
dúp
 = 
	`›ídú
(
dú
)Ë=
NULL
) {

2398 
	`£nd_hâp_îr‹
(
c⁄n
, 500, "Cannot open directory",

2399 "Eº‹: o≥ndú(%s): %s", 
∑th
, 
	`°ªº‹
(
ERRNO
));

2403 (Ë
	`mg_¥ötf
(
c⁄n
, "%s",

2408 
s‹t_dúe˘i⁄
 = 
c⁄n
->
ªque°_öfo
.
quîy_°rög
 !
NULL
 &&

2409 
c⁄n
->
ªque°_öfo
.
quîy_°rög
[1] == 'd' ? 'a' : 'd';

2411 (
dp
 = 
	`ªaddú
(
dúp
)Ë!
NULL
) {

2414 i‡(!
	`°rcmp
(
dp
->
d_«me
, ".") ||

2415 !
	`°rcmp
(
dp
->
d_«me
, "..") ||

2416 !
	`°rcmp
(
dp
->
d_«me
, 
PASSWORDS_FILE_NAME
))

2419 i‡(
íåõs
 =
NULL
 || 
num_íåõs
 >
¨r_size
) {

2420 
¨r_size
 *= 2;

2421 
íåõs
 = (
de
 *Ë
	`ªÆloc
(entries,

2422 
¨r_size
 * (
íåõs
[0]));

2425 i‡(
íåõs
 =
NULL
) {

2426 
	`£nd_hâp_îr‹
(
c⁄n
, 500, "Cannot open directory",

2431 
	`mg_¢¥ötf
(
c⁄n
, 
∑th
, ’©h), "%s%c%s", 
dú
, 
DIRSEP
, 
dp
->
d_«me
);

2438 i‡(
	`mg_°©
(
∑th
, &
íåõs
[
num_íåõs
].
°
) != 0) {

2439 
	`mem£t
(&
íåõs
[
num_íåõs
].
°
, 0, (entries[num_entries].st));

2442 
íåõs
[
num_íåõs
].
c⁄n
 = conn;

2443 
íåõs
[
num_íåõs
].
fûe_«me
 = 
	`mg_°rdup
(
dp
->
d_«me
);

2444 
num_íåõs
++;

2446 (Ë
	`˛o£dú
(
dúp
);

2448 
c⁄n
->
num_byãs_£¡
 +
	`mg_¥ötf
(conn,

2456 
c⁄n
->
ªque°_öfo
.
uri
, conn->request_info.uri,

2457 
s‹t_dúe˘i⁄
, sort_direction, sort_direction);

2460 
c⁄n
->
num_byãs_£¡
 +
	`mg_¥ötf
(conn,

2463 
c⁄n
->
ªque°_öfo
.
uri
, "..", "Parent directory", "-", "-");

2466 
	`qs‹t
(
íåõs
, (
size_t
)
num_íåõs
, ”¡rõs[0]), 
com∑ª_dú_íåõs
);

2467 
i
 = 0; i < 
num_íåõs
; i++) {

2468 
	`¥öt_dú_íåy
(&
íåõs
[
i
]);

2469 
	`‰ì
(
íåõs
[
i
].
fûe_«me
);

2471 
	`‰ì
(
íåõs
);

2473 
c⁄n
->
num_byãs_£¡
 +
	`mg_¥ötf
(conn, "%s", "</table></body></html>");

2474 
c⁄n
->
ªque°_öfo
.
°©us_code
 = 200;

2475 
	}
}

2478 
	$£nd_fûe_d©a
(
mg_c⁄√˘i⁄
 *
c⁄n
, 
FILE
 *
Â
, 
öt64_t
 
Àn
) {

2479 
buf
[
BUFSIZ
];

2480 
to_ªad
, 
num_ªad
, 
num_wrôãn
;

2482 
Àn
 > 0) {

2484 
to_ªad
 = (
buf
);

2485 i‡((
öt64_t
Ë
to_ªad
 > 
Àn
)

2486 
to_ªad
 = (Ë
Àn
;

2489 i‡((
num_ªad
 = (Ë
	`‰ód
(
buf
, 1, (
size_t
)
to_ªad
, 
Â
)) == 0)

2493 i‡((
num_wrôãn
 = 
	`mg_wrôe
(
c⁄n
, 
buf
, (
size_t
)
num_ªad
)) !=Çum_read)

2497 
c⁄n
->
num_byãs_£¡
 +
num_wrôãn
;

2498 
Àn
 -
num_wrôãn
;

2500 
	}
}

2502 
	$∑r£_ønge_hódî
(c⁄° *
hódî
, 
öt64_t
 *
a
, i¡64_à*
b
) {

2503  
	`ssˇnf
(
hódî
, "byãs=%" 
INT64_FMT
 "-%" INT64_FMT, 
a
, 
b
);

2504 
	}
}

2506 
	$h™dÀ_fûe_ªque°
(
mg_c⁄√˘i⁄
 *
c⁄n
, c⁄° *
∑th
,

2507 
mg°©
 *
°p
) {

2508 
d©e
[64], 
lm
[64], 
ëag
[64], 
ønge
[64];

2509 c⁄° *
fmt
 = "%a, %d %b %Y %H:%M:%S %Z", *
msg
 = "OK", *
hdr
;

2510 
time_t
 
cuπime
 = 
	`time
(
NULL
);

2511 
öt64_t
 
˛
, 
r1
, 
r2
;

2512 
vec
 
mime_vec
;

2513 
FILE
 *
Â
;

2514 
n
;

2516 
	`gë_mime_ty≥
(
c⁄n
->
˘x
, 
∑th
, &
mime_vec
);

2517 
˛
 = 
°p
->
size
;

2518 
c⁄n
->
ªque°_öfo
.
°©us_code
 = 200;

2519 
ønge
[0] = '\0';

2521 i‡((
Â
 = 
	`mg_f›í
(
∑th
, "rb")Ë=
NULL
) {

2522 
	`£nd_hâp_îr‹
(
c⁄n
, 500, 
hâp_500_îr‹
,

2523 "f›í(%s): %s", 
∑th
, 
	`°ªº‹
(
ERRNO
));

2526 
	`£t_˛o£_⁄_exec
(
	`fûío
(
Â
));

2529 
r1
 = 
r2
 = 0;

2530 
hdr
 = 
	`mg_gë_hódî
(
c⁄n
, "Range");

2531 i‡(
hdr
 !
NULL
 && (
n
 = 
	`∑r£_ønge_hódî
(hdr, &
r1
, &
r2
)) > 0) {

2532 
c⁄n
->
ªque°_öfo
.
°©us_code
 = 206;

2533 (Ë
	`f£eko
(
Â
, (
off_t
Ë
r1
, 
SEEK_SET
);

2534 
˛
 = 
n
 =2 ? 
r2
 - 
r1
 + 1: cl -Ñ1;

2535 (Ë
	`mg_¢¥ötf
(
c⁄n
, 
ønge
, (range),

2537 "%" 
INT64_FMT
 "-%"

2538 
INT64_FMT
 "/%" INT64_FMT "\r\n",

2539 
r1
,Ñ1 + 
˛
 - 1, 
°p
->
size
);

2540 
msg
 = "Partial Content";

2544 (Ë
	`°r·ime
(
d©e
, (d©e), 
fmt
, 
	`loˇ…ime
(&
cuπime
));

2545 (Ë
	`°r·ime
(
lm
, ÷m), 
fmt
, 
	`loˇ…ime
(&
°p
->
mtime
));

2546 (Ë
	`mg_¢¥ötf
(
c⁄n
, 
ëag
, (etag), "%lx.%lx",

2547 (Ë
°p
->
mtime
, (Ë°p->
size
);

2549 (Ë
	`mg_¥ötf
(
c⁄n
,

2555 "C⁄ã¡-Lígth: %" 
INT64_FMT
 "\r\n"

2559 
c⁄n
->
ªque°_öfo
.
°©us_code
, 
msg
, 
d©e
, 
lm
, 
ëag
,

2560 
mime_vec
.
Àn
, mime_vec.
±r
, 
˛
, 
	`sugge°_c⁄√˘i⁄_hódî
(
c⁄n
), 
ønge
);

2562 i‡(
	`°rcmp
(
c⁄n
->
ªque°_öfo
.
ªque°_mëhod
, "HEAD") != 0) {

2563 
	`£nd_fûe_d©a
(
c⁄n
, 
Â
, 
˛
);

2565 (Ë
	`f˛o£
(
Â
);

2566 
	}
}

2570 
	$∑r£_hâp_hódîs
(**
buf
, 
mg_ªque°_öfo
 *
ri
) {

2571 
i
;

2573 
i
 = 0; i < (Ë
	`ARRAY_SIZE
(
ri
->
hâp_hódîs
); i++) {

2574 
ri
->
hâp_hódîs
[
i
].
«me
 = 
	`skù_quŸed
(
buf
, ":", " ", 0);

2575 
ri
->
hâp_hódîs
[
i
].
vÆue
 = 
	`skù
(
buf
, "\r\n");

2576 i‡(
ri
->
hâp_hódîs
[
i
].
«me
[0] == '\0')

2578 
ri
->
num_hódîs
 = 
i
 + 1;

2580 
	}
}

2582 
	$is_vÆid_hâp_mëhod
(c⁄° *
mëhod
) {

2583  !
	`°rcmp
(
mëhod
, "GET") || !strcmp(method, "POST") ||

2584 !
	`°rcmp
(
mëhod
, "HEAD") || !strcmp(method, "CONNECT") ||

2585 !
	`°rcmp
(
mëhod
, "PUT") || !strcmp(method, "DELETE");

2586 
	}
}

2589 
	$∑r£_hâp_ªque°
(*
buf
, 
mg_ªque°_öfo
 *
ri
) {

2590 
°©us
 = 0;

2593 *
buf
 !'\0' && 
	`is•a˚
(* (*) buf)) {

2594 
buf
++;

2597 
ri
->
ªque°_mëhod
 = 
	`skù
(&
buf
, " ");

2598 
ri
->
uri
 = 
	`skù
(&
buf
, " ");

2599 
ri
->
hâp_vîsi⁄
 = 
	`skù
(&
buf
, "\r\n");

2601 i‡(
	`is_vÆid_hâp_mëhod
(
ri
->
ªque°_mëhod
) &&

2602 
	`°∫cmp
(
ri
->
hâp_vîsi⁄
, "HTTP/", 5) == 0) {

2603 
ri
->
hâp_vîsi⁄
 += 5;

2604 
	`∑r£_hâp_hódîs
(&
buf
, 
ri
);

2605 
°©us
 = 1;

2608  
°©us
;

2609 
	}
}

2616 
	$ªad_ªque°
(
FILE
 *
Â
, 
SOCKET
 
sock
, 
SSL
 *
s¶
, *
buf
, 
bufsiz
,

2617 *
ƒód
) {

2618 
n
, 
ªque°_Àn
;

2620 
ªque°_Àn
 = 0;

2621 *
ƒód
 < 
bufsiz
 && 
ªque°_Àn
 == 0) {

2622 
n
 = 
	`puŒ
(
Â
, 
sock
, 
s¶
, 
buf
 + *
ƒód
, 
bufsiz
 - *nread);

2623 i‡(
n
 <= 0) {

2626 *
ƒód
 +
n
;

2627 
ªque°_Àn
 = 
	`gë_ªque°_Àn
(
buf
, *
ƒód
);

2631  
ªque°_Àn
;

2632 
	}
}

2637 
	$sub°ôuã_ödex_fûe
(
mg_c⁄√˘i⁄
 *
c⁄n
, *
∑th
,

2638 
size_t
 
∑th_Àn
, 
mg°©
 *
°p
) {

2639 c⁄° *
li°
 = 
c⁄n
->
˘x
->
c⁄fig
[
INDEX_FILES
];

2640 
mg°©
 
°
;

2641 
vec
 
fûíame_vec
;

2642 
size_t
 
n
 = 
	`°æí
(
∑th
);

2643 
found
 = 0;

2648 
n
 > 0 && 
	`IS_DIRSEP_CHAR
(
∑th
[n - 1])) {

2649 
n
--;

2651 
∑th
[
n
] = 
DIRSEP
;

2655 (
li°
 = 
	`√xt_›ti⁄
÷i°, &
fûíame_vec
, 
NULL
)) != NULL) {

2658 i‡(
fûíame_vec
.
Àn
 > 
∑th_Àn
 - 
n
)

2662 (Ë
	`mg_°æ˝y
(
∑th
 + 
n
 + 1, 
fûíame_vec
.
±r
, fûíame_vec.
Àn
 + 1);

2665 i‡(
	`mg_°©
(
∑th
, &
°
) == 0) {

2667 *
°p
 = 
°
;

2668 
found
 = 1;

2674 i‡(!
found
) {

2675 
∑th
[
n
] = '\0';

2678  
found
;

2679 
	}
}

2682 
	$is_nŸ_modifõd
(c⁄° 
mg_c⁄√˘i⁄
 *
c⁄n
,

2683 c⁄° 
mg°©
 *
°p
) {

2684 c⁄° *
ims
 = 
	`mg_gë_hódî
(
c⁄n
, "If-Modified-Since");

2685  
ims
 !
NULL
 && 
°p
->
mtime
 <
	`∑r£_d©e_°rög
(ims);

2686 
	}
}

2688 
	$f‹w¨d_body_d©a
(
mg_c⁄√˘i⁄
 *
c⁄n
, 
FILE
 *
Â
,

2689 
SOCKET
 
sock
, 
SSL
 *
s¶
) {

2690 c⁄° *
ex≥˘
, *
buf„ªd
;

2691 
buf
[
BUFSIZ
];

2692 
to_ªad
, 
ƒód
, 
buf„ªd_Àn
, 
suc˚ss
 = 0;

2694 
ex≥˘
 = 
	`mg_gë_hódî
(
c⁄n
, "Expect");

2695 
	`as£π
(
Â
 !
NULL
);

2697 i‡(
c⁄n
->
c⁄ã¡_Àn
 == -1) {

2698 
	`£nd_hâp_îr‹
(
c⁄n
, 411, "Length Required", "");

2699 } i‡(
ex≥˘
 !
NULL
 && 
	`mg_°rˇ£cmp
(expect, "100-continue")) {

2700 
	`£nd_hâp_îr‹
(
c⁄n
, 417, "Expectation Failed", "");

2702 i‡(
ex≥˘
 !
NULL
) {

2703 (Ë
	`mg_¥ötf
(
c⁄n
, "%s", "HTTP/1.1 100 Continue\r\n\r\n");

2706 
buf„ªd
 = 
c⁄n
->
buf
 + c⁄n->
ªque°_Àn
;

2707 
buf„ªd_Àn
 = 
c⁄n
->
d©a_Àn
 - c⁄n->
ªque°_Àn
;

2708 
	`as£π
(
buf„ªd_Àn
 >= 0);

2709 
	`as£π
(
c⁄n
->
c⁄sumed_c⁄ã¡
 == 0);

2711 i‡(
buf„ªd_Àn
 > 0) {

2712 i‡((
öt64_t
Ë
buf„ªd_Àn
 > 
c⁄n
->
c⁄ã¡_Àn
) {

2713 
buf„ªd_Àn
 = (Ë
c⁄n
->
c⁄ã¡_Àn
;

2715 
	`push
(
Â
, 
sock
, 
s¶
, 
buf„ªd
, (
öt64_t
Ë
buf„ªd_Àn
);

2716 
c⁄n
->
c⁄sumed_c⁄ã¡
 +
buf„ªd_Àn
;

2719 
c⁄n
->
c⁄sumed_c⁄ã¡
 < c⁄n->
c⁄ã¡_Àn
) {

2720 
to_ªad
 = (
buf
);

2721 i‡((
öt64_t
Ë
to_ªad
 > 
c⁄n
->
c⁄ã¡_Àn
 - c⁄n->
c⁄sumed_c⁄ã¡
) {

2722 
to_ªad
 = (Ë(
c⁄n
->
c⁄ã¡_Àn
 - c⁄n->
c⁄sumed_c⁄ã¡
);

2724 
ƒód
 = 
	`puŒ
(
NULL
, 
c⁄n
->
˛õ¡
.
sock
, c⁄n->
s¶
, 
buf
, 
to_ªad
);

2725 i‡(
ƒód
 <0 || 
	`push
(
Â
, 
sock
, 
s¶
, 
buf
,Çread) !=Çread) {

2728 
c⁄n
->
c⁄sumed_c⁄ã¡
 +
ƒód
;

2731 i‡(
c⁄n
->
c⁄sumed_c⁄ã¡
 =c⁄n->
c⁄ã¡_Àn
) {

2732 
suc˚ss
 = 1;

2736 i‡(!
suc˚ss
) {

2737 
	`£nd_hâp_îr‹
(
c⁄n
, 577, 
hâp_500_îr‹
, "");

2741  
suc˚ss
;

2742 
	}
}

2744 #i‡!
deföed
(
NO_CGI
)

2753 
	scgi_ív_block
 {

2754 
mg_c⁄√˘i⁄
 *
	mc⁄n
;

2755 
	mbuf
[
CGI_ENVIRONMENT_SIZE
];

2756 
	mÀn
;

2757 *
	mv¨s
[
MAX_CGI_ENVIR_VARS
];

2758 
	mnv¨s
;

2763 *
	$addív
(
cgi_ív_block
 *
block
, c⁄° *
fmt
, ...) {

2764 
n
, 
•a˚
;

2765 *
added
;

2766 
va_li°
 
≠
;

2769 
•a˚
 = (Ë((
block
->
buf
Ë- block->
Àn
 - 2);

2770 
	`as£π
(
•a˚
 >= 0);

2773 
added
 = 
block
->
buf
 + block->
Àn
;

2776 
	`va_°¨t
(
≠
, 
fmt
);

2777 
n
 = 
	`mg_v¢¥ötf
(
block
->
c⁄n
, 
added
, (
size_t
Ë
•a˚
, 
fmt
, 
≠
);

2778 
	`va_íd
(
≠
);

2781 i‡(
n
 > 0 &&Ç < 
•a˚
 &&

2782 
block
->
nv¨s
 < (Ë
	`ARRAY_SIZE
(block->
v¨s
) - 2) {

2784 
block
->
v¨s
[block->
nv¨s
++] = block->
buf
 + block->
Àn
;

2786 
block
->
Àn
 +
n
 + 1;

2789  
added
;

2790 
	}
}

2792 
	$¥ï¨e_cgi_ívú⁄mít
(
mg_c⁄√˘i⁄
 *
c⁄n
,

2793 c⁄° *
¥og
,

2794 
cgi_ív_block
 *
blk
) {

2795 c⁄° *
s
, *
¶ash
;

2796 
vec
 
v¨_vec
, 
roŸ
;

2797 *
p
;

2798 
i
;

2800 
blk
->
Àn
 = blk->
nv¨s
 = 0;

2801 
blk
->
c⁄n
 = conn;

2803 
	`gë_documít_roŸ
(
c⁄n
, &
roŸ
);

2805 
	`addív
(
blk
, "SERVER_NAME=%s", 
c⁄n
->
˘x
->
c⁄fig
[
AUTHENTICATION_DOMAIN
]);

2806 
	`addív
(
blk
, "SERVER_ROOT=%.*s", 
roŸ
.
Àn
,ÑoŸ.
±r
);

2807 
	`addív
(
blk
, "DOCUMENT_ROOT=%.*s", 
roŸ
.
Àn
,ÑoŸ.
±r
);

2810 
	`addív
(
blk
, "%s", "GATEWAY_INTERFACE=CGI/1.1");

2811 
	`addív
(
blk
, "%s", "SERVER_PROTOCOL=HTTP/1.1");

2812 
	`addív
(
blk
, "%s", "REDIRECT_STATUS=200");

2813 
	`addív
(
blk
, "SERVER_PORT=%d", 
	`¡ohs
(
c⁄n
->
˛õ¡
.
lß
.
u
.
sö
.
sö_p‹t
));

2814 
	`addív
(
blk
, "REQUEST_METHOD=%s", 
c⁄n
->
ªque°_öfo
.
ªque°_mëhod
);

2815 
	`addív
(
blk
, "REMOTE_ADDR=%s",

2816 
	`öë_¡ﬂ
(
c⁄n
->
˛õ¡
.
rß
.
u
.
sö
.
sö_addr
));

2817 
	`addív
(
blk
, "REMOTE_PORT=%d", 
c⁄n
->
ªque°_öfo
.
ªmŸe_p‹t
);

2818 
	`addív
(
blk
, "REQUEST_URI=%s", 
c⁄n
->
ªque°_öfo
.
uri
);

2821 
	`as£π
(
c⁄n
->
ªque°_öfo
.
uri
[0] == '/');

2822 
¶ash
 = 
	`°ºchr
(
c⁄n
->
ªque°_öfo
.
uri
, '/');

2823 i‡((
s
 = 
	`°ºchr
(
¥og
, '/')Ë=
NULL
)

2824 
s
 = 
¥og
;

2825 
	`addív
(
blk
, "SCRIPT_NAME=%.*s%s", 
¶ash
 - 
c⁄n
->
ªque°_öfo
.
uri
,

2826 
c⁄n
->
ªque°_öfo
.
uri
, 
s
);

2828 
	`addív
(
blk
, "SCRIPT_FILENAME=%s", 
¥og
);

2829 
	`addív
(
blk
, "PATH_TRANSLATED=%s", 
¥og
);

2830 
	`addív
(
blk
, "HTTPS=%s", 
c⁄n
->
s¶
 =
NULL
 ? "off" : "on");

2832 i‡((
s
 = 
	`mg_gë_hódî
(
c⁄n
, "C⁄ã¡-Ty≥")Ë!
NULL
)

2833 
	`addív
(
blk
, "CONTENT_TYPE=%s", 
s
);

2835 i‡(
c⁄n
->
ªque°_öfo
.
quîy_°rög
 !
NULL
)

2836 
	`addív
(
blk
, "QUERY_STRING=%s", 
c⁄n
->
ªque°_öfo
.
quîy_°rög
);

2838 i‡((
s
 = 
	`mg_gë_hódî
(
c⁄n
, "C⁄ã¡-Lígth")Ë!
NULL
)

2839 
	`addív
(
blk
, "CONTENT_LENGTH=%s", 
s
);

2841 i‡((
s
 = 
	`gëív
("PATH")Ë!
NULL
)

2842 
	`addív
(
blk
, "PATH=%s", 
s
);

2844 #i‡
	`deföed
(
_WIN32
)

2845 i‡((
s
 = 
	`gëív
("COMSPEC")Ë!
NULL
)

2846 
	`addív
(
blk
, "COMSPEC=%s", 
s
);

2847 i‡((
s
 = 
	`gëív
("SYSTEMROOT")Ë!
NULL
)

2848 
	`addív
(
blk
, "SYSTEMROOT=%s", 
s
);

2850 i‡((
s
 = 
	`gëív
("LD_LIBRARY_PATH")Ë!
NULL
)

2851 
	`addív
(
blk
, "LD_LIBRARY_PATH=%s", 
s
);

2854 i‡((
s
 = 
	`gëív
("PERLLIB")Ë!
NULL
)

2855 
	`addív
(
blk
, "PERLLIB=%s", 
s
);

2857 i‡(
c⁄n
->
ªque°_öfo
.
ªmŸe_u£r
 !
NULL
) {

2858 
	`addív
(
blk
, "REMOTE_USER=%s", 
c⁄n
->
ªque°_öfo
.
ªmŸe_u£r
);

2859 
	`addív
(
blk
, "%s", "AUTH_TYPE=Digest");

2863 
i
 = 0; i < 
c⁄n
->
ªque°_öfo
.
num_hódîs
; i++) {

2864 
p
 = 
	`addív
(
blk
, "HTTP_%s=%s",

2865 
c⁄n
->
ªque°_öfo
.
hâp_hódîs
[
i
].
«me
,

2866 
c⁄n
->
ªque°_öfo
.
hâp_hódîs
[
i
].
vÆue
);

2869 ; *
p
 != '=' && *p != '\0';Ö++) {

2870 i‡(*
p
 == '-')

2871 *
p
 = '_';

2872 *
p
 = (Ë
	`touµî
(* (*)Ö);

2877 
s
 = 
c⁄n
->
˘x
->
c⁄fig
[
CGI_ENVIRONMENT
];

2878 (
s
 = 
	`√xt_›ti⁄
(s, &
v¨_vec
, 
NULL
)) != NULL) {

2879 
	`addív
(
blk
, "%.*s", 
v¨_vec
.
Àn
, v¨_vec.
±r
);

2882 
blk
->
v¨s
[blk->
nv¨s
++] = 
NULL
;

2883 
blk
->
buf
[blk->
Àn
++] = '\0';

2885 
	`as£π
(
blk
->
nv¨s
 < (Ë
	`ARRAY_SIZE
(blk->
v¨s
));

2886 
	`as£π
(
blk
->
Àn
 > 0);

2887 
	`as£π
(
blk
->
Àn
 < (Ë(blk->
buf
));

2888 
	}
}

2890 
	$h™dÀ_cgi_ªque°
(
mg_c⁄√˘i⁄
 *
c⁄n
, c⁄° *
¥og
) {

2891 
hódîs_Àn
, 
d©a_Àn
, 
i
, 
fd_°dö
[2], 
fd_°dout
[2];

2892 c⁄° *
°©us
;

2893 
buf
[
BUFSIZ
], *
pbuf
, 
dú
[
PATH_MAX
], *
p
;

2894 
mg_ªque°_öfo
 
ri
;

2895 
cgi_ív_block
 
blk
;

2896 
FILE
 *
ö
, *
out
;

2897 
pid_t
 
pid
;

2899 
	`¥ï¨e_cgi_ívú⁄mít
(
c⁄n
, 
¥og
, &
blk
);

2904 (Ë
	`mg_¢¥ötf
(
c⁄n
, 
dú
, (dú), "%s", 
¥og
);

2905 i‡((
p
 = 
	`°ºchr
(
dú
, 
DIRSEP
)Ë!
NULL
) {

2906 *
p
++ = '\0';

2908 
dú
[0] = '.', dir[1] = '\0';

2909 
p
 = (*Ë
¥og
;

2912 
pid
 = (
pid_t
) -1;

2913 
fd_°dö
[0] = fd_°dö[1] = 
fd_°dout
[0] = fd_stdout[1] = -1;

2914 
ö
 = 
out
 = 
NULL
;

2916 i‡(
	`pùe
(
fd_°dö
Ë!0 ||Öùe(
fd_°dout
) != 0) {

2917 
	`£nd_hâp_îr‹
(
c⁄n
, 500, 
hâp_500_îr‹
,

2918 "C™nŸ cª©êCGIÖùe: %s", 
	`°ªº‹
(
ERRNO
));

2919 
d⁄e
;

2920 } i‡((
pid
 = 
	`•awn_¥o˚ss
(
c⁄n
, 
p
, 
blk
.
buf
, blk.
v¨s
,

2921 
fd_°dö
[0], 
fd_°dout
[1], 
dú
)Ë=(
pid_t
) -1) {

2922 
d⁄e
;

2923 } i‡((
ö
 = 
	`fd›í
(
fd_°dö
[1], "wb")Ë=
NULL
 ||

2924 (
out
 = 
	`fd›í
(
fd_°dout
[0], "rb")Ë=
NULL
) {

2925 
	`£nd_hâp_îr‹
(
c⁄n
, 500, 
hâp_500_îr‹
,

2926 "f›í: %s", 
	`°ªº‹
(
ERRNO
));

2927 
d⁄e
;

2930 
	`£tbuf
(
ö
, 
NULL
);

2931 
	`£tbuf
(
out
, 
NULL
);

2937 
fd_°dö
[0] = 
fd_°dout
[1] = -1;

2940 i‡(!
	`°rcmp
(
c⁄n
->
ªque°_öfo
.
ªque°_mëhod
, "POST") &&

2941 !
	`f‹w¨d_body_d©a
(
c⁄n
, 
ö
, 
INVALID_SOCKET
, 
NULL
)) {

2942 
d⁄e
;

2949 
d©a_Àn
 = 0;

2950 
hódîs_Àn
 = 
	`ªad_ªque°
(
out
, 
INVALID_SOCKET
, 
NULL
,

2951 
buf
, (buf), &
d©a_Àn
);

2952 i‡(
hódîs_Àn
 <= 0) {

2953 
	`£nd_hâp_îr‹
(
c⁄n
, 500, 
hâp_500_îr‹
,

2955 
d©a_Àn
, 
buf
);

2956 
d⁄e
;

2958 
pbuf
 = 
buf
;

2959 
buf
[
hódîs_Àn
 - 1] = '\0';

2960 
	`∑r£_hâp_hódîs
(&
pbuf
, &
ri
);

2963 
°©us
 = 
	`gë_hódî
(&
ri
, "Status");

2964 
c⁄n
->
ªque°_öfo
.
°©us_code
 = 
°©us
 =
NULL
 ? 200 : 
	`©oi
(status);

2965 (Ë
	`mg_¥ötf
(
c⁄n
, "HTTP/1.1 %d OK\r\n", c⁄n->
ªque°_öfo
.
°©us_code
);

2968 
i
 = 0; i < 
ri
.
num_hódîs
; i++) {

2969 
	`mg_¥ötf
(
c⁄n
, "%s: %s\r\n",

2970 
ri
.
hâp_hódîs
[
i
].
«me
,Ñi.hâp_hódîs[i].
vÆue
);

2972 (Ë
	`mg_wrôe
(
c⁄n
, "\r\n", 2);

2975 
c⁄n
->
num_byãs_£¡
 +
	`mg_wrôe
(c⁄n, 
buf
 + 
hódîs_Àn
,

2976 (
size_t
)(
d©a_Àn
 - 
hódîs_Àn
));

2979 
	`£nd_fûe_d©a
(
c⁄n
, 
out
, 
INT64_MAX
);

2981 
d⁄e
:

2982 i‡(
pid
 !(
pid_t
) -1) {

2983 
	`kûl
(
pid
, 
SIGKILL
);

2984 #i‡!
	`deföed
(
_WIN32
)

2985 dÿ{} 
	`waôpid
(-1, &
i
, 
WNOHANG
) > 0);

2988 i‡(
fd_°dö
[0] != -1) {

2989 (Ë
	`˛o£
(
fd_°dö
[0]);

2991 i‡(
fd_°dout
[1] != -1) {

2992 (Ë
	`˛o£
(
fd_°dout
[1]);

2995 i‡(
ö
 !
NULL
) {

2996 (Ë
	`f˛o£
(
ö
);

2997 } i‡(
fd_°dö
[1] != -1) {

2998 (Ë
	`˛o£
(
fd_°dö
[1]);

3001 i‡(
out
 !
NULL
) {

3002 (Ë
	`f˛o£
(
out
);

3003 } i‡(
fd_°dout
[0] != -1) {

3004 (Ë
	`˛o£
(
fd_°dout
[0]);

3006 
	}
}

3012 
	$put_dú
(c⁄° *
∑th
) {

3013 
buf
[
PATH_MAX
];

3014 c⁄° *
s
, *
p
;

3015 
mg°©
 
°
;

3016 
size_t
 
Àn
;

3018 
s
 = 
p
 = 
∑th
 + 2; (∞
	`°rchr
(s, '/')Ë!
NULL
; s = ++p) {

3019 
Àn
 = 
p
 - 
∑th
;

3020 
	`as£π
(
Àn
 < (
buf
));

3021 (Ë
	`mem˝y
(
buf
, 
∑th
, 
Àn
);

3022 
buf
[
Àn
] = '\0';

3025 i‡(
	`mg_°©
(
buf
, &
°
Ë=-1 && 
	`mg_mkdú
(buf, 0755) != 0) {

3030 i‡(
p
[1] == '\0') {

3036 
	}
}

3038 
	$put_fûe
(
mg_c⁄√˘i⁄
 *
c⁄n
, c⁄° *
∑th
) {

3039 
mg°©
 
°
;

3040 c⁄° *
ønge
;

3041 
öt64_t
 
r1
, 
r2
;

3042 
FILE
 *
Â
;

3043 
rc
;

3045 
c⁄n
->
ªque°_öfo
.
°©us_code
 = 
	`mg_°©
(
∑th
, &
°
) == 0 ? 200 : 201;

3047 i‡((
rc
 = 
	`put_dú
(
∑th
)) == 0) {

3048 
	`mg_¥ötf
(
c⁄n
, "HTTP/1.1 %d OK\r\n\r\n", c⁄n->
ªque°_öfo
.
°©us_code
);

3049 } i‡(
rc
 == -1) {

3050 
	`£nd_hâp_îr‹
(
c⁄n
, 500, 
hâp_500_îr‹
,

3051 "put_dú(%s): %s", 
∑th
, 
	`°ªº‹
(
ERRNO
));

3052 } i‡((
Â
 = 
	`mg_f›í
(
∑th
, "wb+")Ë=
NULL
) {

3053 
	`£nd_hâp_îr‹
(
c⁄n
, 500, 
hâp_500_îr‹
,

3054 "f›í(%s): %s", 
∑th
, 
	`°ªº‹
(
ERRNO
));

3056 
	`£t_˛o£_⁄_exec
(
	`fûío
(
Â
));

3057 
ønge
 = 
	`mg_gë_hódî
(
c⁄n
, "Content-Range");

3058 
r1
 = 
r2
 = 0;

3059 i‡(
ønge
 !
NULL
 && 
	`∑r£_ønge_hódî
‘™ge, &
r1
, &
r2
) > 0) {

3060 
c⁄n
->
ªque°_öfo
.
°©us_code
 = 206;

3062 (Ë
	`f£eko
(
Â
, (
off_t
Ë
r1
, 
SEEK_SET
);

3064 i‡(
	`f‹w¨d_body_d©a
(
c⁄n
, 
Â
, 
INVALID_SOCKET
, 
NULL
))

3065 (Ë
	`mg_¥ötf
(
c⁄n
, "HTTP/1.1 %d OK\r\n\r\n",

3066 
c⁄n
->
ªque°_öfo
.
°©us_code
);

3067 (Ë
	`f˛o£
(
Â
);

3069 
	}
}

3071 
£nd_ssi_fûe
(
mg_c⁄√˘i⁄
 *, c⁄° *, 
FILE
 *, );

3073 
	$do_ssi_ö˛ude
(
mg_c⁄√˘i⁄
 *
c⁄n
, c⁄° *
ssi
,

3074 *
èg
, 
ö˛ude_Àvñ
) {

3075 
fûe_«me
[
BUFSIZ
], 
∑th
[
PATH_MAX
], *
p
;

3076 
vec
 
roŸ
;

3077 
is_ssi
;

3078 
FILE
 *
Â
;

3080 
	`gë_documít_roŸ
(
c⁄n
, &
roŸ
);

3084 i‡(
	`ssˇnf
(
èg
, " vútuÆ=\"%[^\"]\"", 
fûe_«me
) == 1) {

3086 (Ë
	`mg_¢¥ötf
(
c⁄n
, 
∑th
, (path), "%.*s%c%s",

3087 
roŸ
.
Àn
,ÑoŸ.
±r
, 
DIRSEP
, 
fûe_«me
);

3088 } i‡(
	`ssˇnf
(
èg
, " fûe=\"%[^\"]\"", 
fûe_«me
) == 1) {

3091 (Ë
	`mg_¢¥ötf
(
c⁄n
, 
∑th
, ’©h), "%s", 
fûe_«me
);

3092 } i‡(
	`ssˇnf
(
èg
, " \"%[^\"]\"", 
fûe_«me
) == 1) {

3094 (Ë
	`mg_¢¥ötf
(
c⁄n
, 
∑th
, ’©h), "%s", 
ssi
);

3095 i‡((
p
 = 
	`°ºchr
(
∑th
, 
DIRSEP
)Ë!
NULL
) {

3096 
p
[1] = '\0';

3098 (Ë
	`mg_¢¥ötf
(
c⁄n
, 
∑th
 + 
	`°æí
(path),

3099 (
∑th
Ë- 
	`°æí
’©h), "%s", 
fûe_«me
);

3101 
	`¸y
(
c⁄n
, "Bad SSI #ö˛ude: [%s]", 
èg
);

3105 i‡((
Â
 = 
	`mg_f›í
(
∑th
, "rb")Ë=
NULL
) {

3106 
	`¸y
(
c⁄n
, "Cannot open SSI #include: [%s]: fopen(%s): %s",

3107 
èg
, 
∑th
, 
	`°ªº‹
(
ERRNO
));

3109 
	`£t_˛o£_⁄_exec
(
	`fûío
(
Â
));

3110 
is_ssi
 = 
	`m©ch_exãnsi⁄
(
∑th
, 
c⁄n
->
˘x
->
c⁄fig
[
SSI_EXTENSIONS
]);

3111 i‡(
is_ssi
) {

3112 
	`£nd_ssi_fûe
(
c⁄n
, 
∑th
, 
Â
, 
ö˛ude_Àvñ
 + 1);

3114 
	`£nd_fûe_d©a
(
c⁄n
, 
Â
, 
INT64_MAX
);

3116 (Ë
	`f˛o£
(
Â
);

3118 
	}
}

3120 #i‡!
deföed
(
NO_POPEN
)

3121 
	$do_ssi_exec
(
mg_c⁄√˘i⁄
 *
c⁄n
, *
èg
) {

3122 
cmd
[
BUFSIZ
];

3123 
FILE
 *
Â
;

3125 i‡(
	`ssˇnf
(
èg
, " \"%[^\"]\"", 
cmd
) != 1) {

3126 
	`¸y
(
c⁄n
, "Bad SSI #exec: [%s]", 
èg
);

3127 } i‡((
Â
 = 
	`p›í
(
cmd
, "r")Ë=
NULL
) {

3128 
	`¸y
(
c⁄n
, "C™nŸ SSI #exec: [%s]: %s", 
cmd
, 
	`°ªº‹
(
ERRNO
));

3130 
	`£nd_fûe_d©a
(
c⁄n
, 
Â
, 
INT64_MAX
);

3131 (Ë
	`p˛o£
(
Â
);

3133 
	}
}

3136 
	$£nd_ssi_fûe
(
mg_c⁄√˘i⁄
 *
c⁄n
, c⁄° *
∑th
,

3137 
FILE
 *
Â
, 
ö˛ude_Àvñ
) {

3138 
buf
[
BUFSIZ
];

3139 
ch
, 
Àn
, 
ö_ssi_èg
;

3141 i‡(
ö˛ude_Àvñ
 > 10) {

3142 
	`¸y
(
c⁄n
, "SSI #ö˛udêÀvñ i†toÿdì∞(%s)", 
∑th
);

3146 
ö_ssi_èg
 = 0;

3147 
Àn
 = 0;

3149 (
ch
 = 
	`fgëc
(
Â
)Ë!
EOF
) {

3150 i‡(
ö_ssi_èg
 && 
ch
 == '>') {

3151 
ö_ssi_èg
 = 0;

3152 
buf
[
Àn
++] = (Ë
ch
;

3153 
buf
[
Àn
] = '\0';

3154 
	`as£π
(
Àn
 <(Ë(
buf
));

3155 i‡(
Àn
 < 6 || 
	`memcmp
(
buf
, "<!--#", 5) != 0) {

3157 (Ë
	`mg_wrôe
(
c⁄n
, 
buf
, (
size_t
)
Àn
);

3159 i‡(!
	`memcmp
(
buf
 + 5, "include", 7)) {

3160 
	`do_ssi_ö˛ude
(
c⁄n
, 
∑th
, 
buf
 + 12, 
ö˛ude_Àvñ
);

3161 #i‡!
	`deföed
(
NO_POPEN
)

3162 } i‡(!
	`memcmp
(
buf
 + 5, "exec", 4)) {

3163 
	`do_ssi_exec
(
c⁄n
, 
buf
 + 9);

3166 
	`¸y
(
c⁄n
, "%s: unknow¿SSI " "comm™d: \"%s\"", 
∑th
, 
buf
);

3169 
Àn
 = 0;

3170 } i‡(
ö_ssi_èg
) {

3171 i‡(
Àn
 =5 && 
	`memcmp
(
buf
, "<!--#", 5) != 0) {

3173 
ö_ssi_èg
 = 0;

3174 } i‡(
Àn
 =(Ë(
buf
) - 2) {

3175 
	`¸y
(
c⁄n
, "%s: SSIÅag i†toÿœrge", 
∑th
);

3176 
Àn
 = 0;

3178 
buf
[
Àn
++] = 
ch
 & 0xff;

3179 } i‡(
ch
 == '<') {

3180 
ö_ssi_èg
 = 1;

3181 i‡(
Àn
 > 0) {

3182 (Ë
	`mg_wrôe
(
c⁄n
, 
buf
, (
size_t
)
Àn
);

3184 
Àn
 = 0;

3185 
buf
[
Àn
++] = 
ch
 & 0xff;

3187 
buf
[
Àn
++] = 
ch
 & 0xff;

3188 i‡(
Àn
 =(Ë(
buf
)) {

3189 (Ë
	`mg_wrôe
(
c⁄n
, 
buf
, (
size_t
)
Àn
);

3190 
Àn
 = 0;

3196 i‡(
Àn
 > 0) {

3197 (Ë
	`mg_wrôe
(
c⁄n
, 
buf
, (
size_t
)
Àn
);

3199 
	}
}

3201 
	$h™dÀ_ssi_fûe_ªque°
(
mg_c⁄√˘i⁄
 *
c⁄n
,

3202 c⁄° *
∑th
) {

3203 
FILE
 *
Â
;

3205 i‡((
Â
 = 
	`mg_f›í
(
∑th
, "rb")Ë=
NULL
) {

3206 
	`£nd_hâp_îr‹
(
c⁄n
, 500, 
hâp_500_îr‹
, "f›í(%s): %s", 
∑th
,

3207 
	`°ªº‹
(
ERRNO
));

3209 
	`£t_˛o£_⁄_exec
(
	`fûío
(
Â
));

3210 
	`mg_¥ötf
(
c⁄n
, "HTTP/1.1 200 OK\r\n"

3212 
	`sugge°_c⁄√˘i⁄_hódî
(
c⁄n
));

3213 
	`£nd_ssi_fûe
(
c⁄n
, 
∑th
, 
Â
, 0);

3214 (Ë
	`f˛o£
(
Â
);

3216 
	}
}

3222 
	$h™dÀ_ªque°
(
mg_c⁄√˘i⁄
 *
c⁄n
) {

3223 
mg_ªque°_öfo
 *
ri
 = &
c⁄n
->
ªque°_öfo
;

3224 
∑th
[
PATH_MAX
];

3225 
uri_Àn
;

3226 
mg°©
 
°
;

3228 i‡((
c⁄n
->
ªque°_öfo
.
quîy_°rög
 = 
	`°rchr
(
ri
->
uri
, '?')Ë!
NULL
) {

3229 * 
c⁄n
->
ªque°_öfo
.
quîy_°rög
++ = '\0';

3231 
uri_Àn
 = (Ë
	`°æí
(
ri
->
uri
);

3232 (Ë
	`uæ_decode
(
ri
->
uri
, (
size_t
)
uri_Àn
,Ñi->uri, (size_t)(uri_len + 1), 0);

3233 
	`ªmove_doubÀ_dŸs_™d_doubÀ_¶ashes
(
ri
->
uri
);

3234 
	`c⁄vît_uri_to_fûe_«me
(
c⁄n
, 
ri
->
uri
, 
∑th
, (path));

3236 
	`DEBUG_TRACE
(("%s", 
ri
->
uri
));

3238 
	`∑r£_auth_hódî
(
c⁄n
);

3240 i‡(
	`ˇŒ_u£r
(
c⁄n
, 
MG_AUTHENTICATE
Ë!
NULL
) {

3242 } i‡(!
	`check_auth‹iz©i⁄
(
c⁄n
, 
∑th
)) {

3243 
	`mg_£nd_auth‹iz©i⁄_ªque°
(
c⁄n
, 
NULL
);

3244 } i‡(
	`ˇŒ_u£r
(
c⁄n
, 
MG_NEW_REQUEST
Ë!
NULL
) {

3246 } i‡(
	`°r°r
(
∑th
, 
PASSWORDS_FILE_NAME
)) {

3248 
	`£nd_hâp_îr‹
(
c⁄n
, 403, "Forbidden", "Access Forbidden");

3249 } i‡(
c⁄n
->
˘x
->
c⁄fig
[
DOCUMENT_ROOT
] =
NULL
) {

3250 
	`£nd_hâp_îr‹
(
c⁄n
, 404, "Not Found", "Not Found");

3251 } i‡((!
	`°rcmp
(
ri
->
ªque°_mëhod
, "PUT") ||

3252 !
	`°rcmp
(
ri
->
ªque°_mëhod
, "DELETE")) &&

3253 (
c⁄n
->
˘x
->
c⁄fig
[
PUT_DELETE_PASSWORDS_FILE
] =
NULL
 ||

3254 !
	`is_auth‹ized_f‹_put
(
c⁄n
))) {

3255 
	`mg_£nd_auth‹iz©i⁄_ªque°
(
c⁄n
, 
NULL
);

3256 } i‡(!
	`°rcmp
(
ri
->
ªque°_mëhod
, "PUT")) {

3257 
	`put_fûe
(
c⁄n
, 
∑th
);

3258 } i‡(!
	`°rcmp
(
ri
->
ªque°_mëhod
, "DELETE")) {

3259 i‡(
	`mg_ªmove
(
∑th
) == 0) {

3260 
	`£nd_hâp_îr‹
(
c⁄n
, 200, "OK", "");

3262 
	`£nd_hâp_îr‹
(
c⁄n
, 500, 
hâp_500_îr‹
, "ªmove(%s): %s", 
∑th
,

3263 
	`°ªº‹
(
ERRNO
));

3265 } i‡(
	`mg_°©
(
∑th
, &
°
) != 0) {

3266 
	`£nd_hâp_îr‹
(
c⁄n
, 404, "Not Found", "%s", "FileÇot found");

3267 } i‡(
°
.
is_dúe˘‹y
 && 
ri
->
uri
[
uri_Àn
 - 1] != '/') {

3268 (Ë
	`mg_¥ötf
(
c⁄n
,

3270 "Loˇti⁄: %s/\r\n\r\n", 
ri
->
uri
);

3271 } i‡(
°
.
is_dúe˘‹y
 &&

3272 !
	`sub°ôuã_ödex_fûe
(
c⁄n
, 
∑th
, ’©h), &
°
)) {

3273 i‡(!
	`mg_°rˇ£cmp
(
c⁄n
->
˘x
->
c⁄fig
[
ENABLE_DIRECTORY_LISTING
], "yes")) {

3274 
	`h™dÀ_dúe˘‹y_ªque°
(
c⁄n
, 
∑th
);

3276 
	`£nd_hâp_îr‹
(
c⁄n
, 403, "Directory Listing Denied",

3279 } i‡(
	`m©ch_exãnsi⁄
(
∑th
, 
c⁄n
->
˘x
->
c⁄fig
[
CGI_EXTENSIONS
])) {

3280 i‡(
	`°rcmp
(
ri
->
ªque°_mëhod
, "POST") &&

3281 
	`°rcmp
(
ri
->
ªque°_mëhod
, "GET")) {

3282 
	`£nd_hâp_îr‹
(
c⁄n
, 501, "Not Implemented",

3283 "Mëhod %†i†nŸ im∂emíãd", 
ri
->
ªque°_mëhod
);

3285 
	`h™dÀ_cgi_ªque°
(
c⁄n
, 
∑th
);

3287 } i‡(
	`m©ch_exãnsi⁄
(
∑th
, 
c⁄n
->
˘x
->
c⁄fig
[
SSI_EXTENSIONS
])) {

3288 
	`h™dÀ_ssi_fûe_ªque°
(
c⁄n
, 
∑th
);

3289 } i‡(
	`is_nŸ_modifõd
(
c⁄n
, &
°
)) {

3290 
	`£nd_hâp_îr‹
(
c⁄n
, 304, "Not Modified", "");

3292 
	`h™dÀ_fûe_ªque°
(
c⁄n
, 
∑th
, &
°
);

3294 
	}
}

3296 
	$˛o£_Æl_li°íög_sockës
(
mg_c⁄ãxt
 *
˘x
) {

3297 
sockë
 *
•
, *
tmp
;

3298 
•
 = 
˘x
->
li°íög_sockës
; s∞!
NULL
; s∞
tmp
) {

3299 
tmp
 = 
•
->
√xt
;

3300 (Ë
	`˛o£sockë
(
•
->
sock
);

3301 
	`‰ì
(
•
);

3303 
	}
}

3307 
	$∑r£_p‹t_°rög
(c⁄° 
vec
 *vec, 
sockë
 *
so
) {

3308 
uß
 *uß = &
so
->
lß
;

3309 
a
, 
b
, 
c
, 
d
, 
p‹t
, 
Àn
;

3312 
	`mem£t
(
so
, 0, (*so));

3314 i‡(
	`ssˇnf
(
vec
->
±r
, "%d.%d.%d.%d:%d%n", &
a
, &
b
, &
c
, &
d
, &
p‹t
, &
Àn
) == 5) {

3316 
uß
->
u
.
sö
.
sö_addr
.
s_addr
 = 
	`ht⁄l
((
a
 << 24Ë| (
b
 << 16Ë| (
c
 << 8Ë| 
d
);

3317 } i‡(
	`ssˇnf
(
vec
->
±r
, "%d%n", &
p‹t
, &
Àn
) == 1) {

3319 
uß
->
u
.
sö
.
sö_addr
.
s_addr
 = 
	`ht⁄l
(
INADDR_ANY
);

3323 
	`as£π
(
Àn
 > 0 &&Üí <(Ë
vec
->len);

3325 i‡(
	`°rchr
("•,", 
vec
->
±r
[
Àn
]Ë=
NULL
) {

3329 
so
->
is_s¶
 = 
vec
->
±r
[
Àn
] == 's';

3330 
so
->
is_¥oxy
 = 
vec
->
±r
[
Àn
] == 'p';

3331 
uß
->
Àn
 = (uß->
u
.
sö
);

3332 
uß
->
u
.
sö
.
sö_Ámûy
 = 
AF_INET
;

3333 
uß
->
u
.
sö
.
sö_p‹t
 = 
	`ht⁄s
((
uöt16_t
Ë
p‹t
);

3336 
	}
}

3338 
	$£t_p‹ts_›ti⁄
(
mg_c⁄ãxt
 *
˘x
) {

3339 c⁄° *
li°
 = 
˘x
->
c⁄fig
[
LISTENING_PORTS
];

3340 
ªu£addr
 = 1, 
suc˚ss
 = 1;

3341 
SOCKET
 
sock
;

3342 
vec
 vec;

3343 
sockë
 
so
, *
li°íî
;

3345 
suc˚ss
 && (
li°
 = 
	`√xt_›ti⁄
÷i°, &
vec
, 
NULL
)) != NULL) {

3346 i‡(!
	`∑r£_p‹t_°rög
(&
vec
, &
so
)) {

3347 
	`¸y
(
	`fc
(
˘x
), "%s: %.*s: invalidÖort spec. ExpectingÜist of: %s",

3348 
__func__
, 
vec
.
Àn
, vec.
±r
, "[IP_ADDRESS:]PORT[s|p]");

3349 
suc˚ss
 = 0;

3350 } i‡(
so
.
is_s¶
 && 
˘x
->
s¶_˘x
 =
NULL
) {

3351 
	`¸y
(
	`fc
(
˘x
), "Cannotádd SSL socket, is -ssl_cert option set?");

3352 
suc˚ss
 = 0;

3353 } i‡((
sock
 = 
	`sockë
(
PF_INET
, 
SOCK_STREAM
, 6)Ë=
INVALID_SOCKET
 ||

3354 #i‡!
	`deföed
(
_WIN32
)

3357 
	`£tsock›t
(
sock
, 
SOL_SOCKET
, 
SO_REUSEADDR
, &
ªu£addr
,

3358 (
ªu£addr
)) != 0 ||

3360 
	`böd
(
sock
, &
so
.
lß
.
u
.
ß
, so.lß.
Àn
) != 0 ||

3361 
	`li°í
(
sock
, 20) != 0) {

3362 
	`˛o£sockë
(
sock
);

3363 
	`¸y
(
	`fc
(
˘x
), "%s: c™nŸ bödÅÿ%.*s: %s", 
__func__
,

3364 
vec
.
Àn
, vec.
±r
, 
	`°ªº‹
(
ERRNO
));

3365 
suc˚ss
 = 0;

3366 } i‡((
li°íî
 = ((
sockë
*Ë
	`ˇŒoc
(1, (*li°íî)))Ë=
NULL
) {

3367 
	`˛o£sockë
(
sock
);

3368 
	`¸y
(
	`fc
(
˘x
), "%s: %s", 
__func__
, 
	`°ªº‹
(
ERRNO
));

3369 
suc˚ss
 = 0;

3371 *
li°íî
 = 
so
;

3372 
li°íî
->
sock
 = sock;

3373 
	`£t_˛o£_⁄_exec
(
li°íî
->
sock
);

3374 
li°íî
->
√xt
 = 
˘x
->
li°íög_sockës
;

3375 
˘x
->
li°íög_sockës
 = 
li°íî
;

3379 i‡(!
suc˚ss
) {

3380 
	`˛o£_Æl_li°íög_sockës
(
˘x
);

3383  
suc˚ss
;

3384 
	}
}

3386 
	$log_hódî
(c⁄° 
mg_c⁄√˘i⁄
 *
c⁄n
, c⁄° *
hódî
,

3387 
FILE
 *
Â
) {

3388 c⁄° *
hódî_vÆue
;

3390 i‡((
hódî_vÆue
 = 
	`mg_gë_hódî
(
c⁄n
, 
hódî
)Ë=
NULL
) {

3391 (Ë
	`Ârötf
(
Â
, "%s", " -");

3393 (Ë
	`Ârötf
(
Â
, " \"%s\"", 
hódî_vÆue
);

3395 
	}
}

3397 
	$log_ac˚ss
(c⁄° 
mg_c⁄√˘i⁄
 *
c⁄n
) {

3398 c⁄° 
mg_ªque°_öfo
 *
ri
;

3399 
FILE
 *
Â
;

3400 
d©e
[64];

3402 
Â
 = 
c⁄n
->
˘x
->
c⁄fig
[
ACCESS_LOG_FILE
] =
NULL
 ? NULL :

3403 
	`mg_f›í
(
c⁄n
->
˘x
->
c⁄fig
[
ACCESS_LOG_FILE
], "a+");

3405 i‡(
Â
 =
NULL
)

3408 (Ë
	`°r·ime
(
d©e
, (date), "%d/%b/%Y:%H:%M:%S %z",

3409 
	`loˇ…ime
(&
c⁄n
->
búth_time
));

3411 
ri
 = &
c⁄n
->
ªque°_öfo
;

3413 
	`Êockfûe
(
Â
);

3415 (Ë
	`Ârötf
(
Â
,

3416 "%†- %†[%s] \"%†%†HTTP/%s\" %d %" 
INT64_FMT
,

3417 
	`öë_¡ﬂ
(
c⁄n
->
˛õ¡
.
rß
.
u
.
sö
.
sö_addr
),

3418 
ri
->
ªmŸe_u£r
 =
NULL
 ? "-" :Ñi->remote_user,

3419 
d©e
,

3420 
ri
->
ªque°_mëhod
 ?Ñi->request_method : "-",

3421 
ri
->
uri
 ?Ñi->uri : "-",

3422 
ri
->
hâp_vîsi⁄
,

3423 
c⁄n
->
ªque°_öfo
.
°©us_code
, c⁄n->
num_byãs_£¡
);

3424 
	`log_hódî
(
c⁄n
, "Re„ªr", 
Â
);

3425 
	`log_hódî
(
c⁄n
, "U£r-Agít", 
Â
);

3426 (Ë
	`Âutc
('\n', 
Â
);

3427 (Ë
	`fÊush
(
Â
);

3429 
	`fu∆ockfûe
(
Â
);

3430 (Ë
	`f˛o£
(
Â
);

3431 
	}
}

3433 
	$isbyã
(
n
) {

3434  
n
 >= 0 &&Ç <= 255;

3435 
	}
}

3439 
	$check_a˛
(
mg_c⁄ãxt
 *
˘x
, c⁄° 
uß
 *usa) {

3440 
a
, 
b
, 
c
, 
d
, 
n
, 
mask
, 
Ælowed
;

3441 
Êag
;

3442 
uöt32_t
 
a˛_sub√t
, 
a˛_mask
, 
ªmŸe_ù
;

3443 
vec
 vec;

3444 c⁄° *
li°
 = 
˘x
->
c⁄fig
[
ACCESS_CONTROL_LIST
];

3446 i‡(
li°
 =
NULL
) {

3450 (Ë
	`mem˝y
(&
ªmŸe_ù
, &
uß
->
u
.
sö
.
sö_addr
, (remote_ip));

3453 
Ælowed
 = '-';

3455 (
li°
 = 
	`√xt_›ti⁄
÷i°, &
vec
, 
NULL
)) != NULL) {

3456 
mask
 = 32;

3458 i‡(
	`ssˇnf
(
vec
.
±r
, "%c%d.%d.%d.%d%n", &
Êag
, &
a
, &
b
, &
c
, &
d
, &
n
) != 5) {

3459 
	`¸y
(
	`fc
(
˘x
), "%s: sub√àmu° bê[+|-]x.x.x.x[/x]", 
__func__
);

3461 } i‡(
Êag
 != '+' && flag != '-') {

3462 
	`¸y
(
	`fc
(
˘x
), "%s: fœg mu° bê+ o∏-: [%s]", 
__func__
, 
vec
.
±r
);

3464 } i‡(!
	`isbyã
(
a
)||!isbyã(
b
)||!isbyã(
c
)||!isbyã(
d
)) {

3465 
	`¸y
(
	`fc
(
˘x
), "%s: bad i∞addªss: [%s]", 
__func__
, 
vec
.
±r
);

3467 } i‡(
	`ssˇnf
(
vec
.
±r
 + 
n
, "/%d", &
mask
) == 0) {

3469 } i‡(
mask
 < 0 || mask > 32) {

3470 
	`¸y
(
	`fc
(
˘x
), "%s: bad sub√àmask: %d [%s]", 
__func__
, 
n
, 
vec
.
±r
);

3474 
a˛_sub√t
 = (
a
 << 24Ë| (
b
 << 16Ë| (
c
 << 8Ë| 
d
;

3475 
a˛_mask
 = 
mask
 ? 0xffffffffU << (32 - mask) : 0;

3477 i‡(
a˛_sub√t
 =(
	`¡ohl
(
ªmŸe_ù
Ë& 
a˛_mask
)) {

3478 
Ælowed
 = 
Êag
;

3482  
Ælowed
 == '+';

3483 
	}
}

3485 
	$add_to_£t
(
SOCKET
 
fd
, 
fd_£t
 *
£t
, *
max_fd
) {

3486 
	`FD_SET
(
fd
, 
£t
);

3487 i‡(
fd
 > (
SOCKET
Ë*
max_fd
) {

3488 *
max_fd
 = (Ë
fd
;

3490 
	}
}

3492 #i‡!
deföed
(
_WIN32
)

3493 
	$£t_uid_›ti⁄
(
mg_c⁄ãxt
 *
˘x
) {

3494 
∑sswd
 *
pw
;

3495 c⁄° *
uid
 = 
˘x
->
c⁄fig
[
RUN_AS_USER
];

3496 
suc˚ss
 = 0;

3498 i‡(
uid
 =
NULL
) {

3499 
suc˚ss
 = 1;

3501 i‡((
pw
 = 
	`gëpw«m
(
uid
)Ë=
NULL
) {

3502 
	`¸y
(
	`fc
(
˘x
), "%s: unknow¿u£∏[%s]", 
__func__
, 
uid
);

3503 } i‡(
	`£tgid
(
pw
->
pw_gid
) == -1) {

3504 
	`¸y
(
	`fc
(
˘x
), "%s: sëgid(%s): %s", 
__func__
, 
uid
, 
	`°ªº‹
(
î∫o
));

3505 } i‡(
	`£tuid
(
pw
->
pw_uid
) == -1) {

3506 
	`¸y
(
	`fc
(
˘x
), "%s: sëuid(%s): %s", 
__func__
, 
uid
, 
	`°ªº‹
(
î∫o
));

3508 
suc˚ss
 = 1;

3512  
suc˚ss
;

3513 
	}
}

3516 #i‡!
deföed
(
NO_SSL
)

3517 
±hªad_muãx_t
 *
	gs¶_muãxes
;

3519 
	$s¶_lockög_ˇŒback
(
mode
, 
muãx_num
, c⁄° *
fûe
,

3520 
löe
) {

3521 
löe
 = 0;

3522 
fûe
 = 
NULL
;

3524 i‡(
mode
 & 
CRYPTO_LOCK
) {

3525 (Ë
	`±hªad_muãx_lock
(&
s¶_muãxes
[
muãx_num
]);

3527 (Ë
	`±hªad_muãx_u∆ock
(&
s¶_muãxes
[
muãx_num
]);

3529 
	}
}

3531 
	$s¶_id_ˇŒback
() {

3532  (Ë
	`±hªad_£lf
();

3533 
	}
}

3535 #i‡!
deföed
(
NO_SSL_DL
)

3536 
	$lﬂd_dŒ
(
mg_c⁄ãxt
 *
˘x
, c⁄° *
dŒ_«me
,

3537 
s¶_func
 *
sw
) {

3538 uni⁄ {*
p
; (*
Â
)();} 
u
;

3539 *
dŒ_h™dÀ
;

3540 
s¶_func
 *
Â
;

3542 i‡((
dŒ_h™dÀ
 = 
	`dl›í
(
dŒ_«me
, 
RTLD_LAZY
)Ë=
NULL
) {

3543 
	`¸y
(
	`fc
(
˘x
), "%s: c™nŸÜﬂd %s", 
__func__
, 
dŒ_«me
);

3547 
Â
 = 
sw
; fp->
«me
 !
NULL
; fp++) {

3548 #ifde‡
_WIN32


3550 
u
.
Â
 = ((*)()Ë
	`dlsym
(
dŒ_h™dÀ
, fp->
«me
);

3554 
u
.
p
 = 
	`dlsym
(
dŒ_h™dÀ
, 
Â
->
«me
);

3556 i‡(
u
.
Â
 =
NULL
) {

3557 
	`¸y
(
	`fc
(
˘x
), "%s: %s: c™nŸ föd %s", 
__func__
, 
dŒ_«me
, 
Â
->
«me
);

3560 
Â
->
±r
 = 
u
.fp;

3565 
	}
}

3569 
	$£t_s¶_›ti⁄
(
mg_c⁄ãxt
 *
˘x
) {

3570 
SSL_CTX
 *
CTX
;

3571 
i
, 
size
;

3572 c⁄° *
≥m
 = 
˘x
->
c⁄fig
[
SSL_CERTIFICATE
];

3573 c⁄° *
chaö
 = 
˘x
->
c⁄fig
[
SSL_CHAIN_FILE
];

3575 i‡(
≥m
 =
NULL
) {

3579 #i‡!
	`deföed
(
NO_SSL_DL
)

3580 i‡(!
	`lﬂd_dŒ
(
˘x
, 
SSL_LIB
, 
s¶_sw
) ||

3581 !
	`lﬂd_dŒ
(
˘x
, 
CRYPTO_LIB
, 
¸y±o_sw
)) {

3587 
	`SSL_libøry_öô
();

3588 
	`SSL_lﬂd_îr‹_°rögs
();

3590 i‡((
CTX
 = 
	`SSL_CTX_√w
(
	`SSLv23_£rvî_mëhod
())Ë=
NULL
) {

3591 
	`¸y
(
	`fc
(
˘x
), "SSL_CTX_√wÉº‹: %s", 
	`s¶_îr‹
());

3592 } i‡(
˘x
->
u£r_ˇŒback
 !
NULL
) {

3593 
˘x
->
	`u£r_ˇŒback
(
MG_INIT_SSL
, (
mg_c⁄√˘i⁄
 *Ë
CTX
, 
NULL
);

3596 i‡(
CTX
 !
NULL
 && 
	`SSL_CTX_u£_˚πifiˇã_fûe
(CTX, 
≥m
,

3597 
SSL_FILETYPE_PEM
) == 0) {

3598 
	`¸y
(
	`fc
(
˘x
), "%s: c™nŸ o≥¿%s: %s", 
__func__
, 
≥m
, 
	`s¶_îr‹
());

3600 } i‡(
CTX
 !
NULL
 && 
	`SSL_CTX_u£_Priv©eKey_fûe
(CTX, 
≥m
,

3601 
SSL_FILETYPE_PEM
) == 0) {

3602 
	`¸y
(
	`fc
(
˘x
), "%s: c™nŸ o≥¿%s: %s", 
NULL
, 
≥m
, 
	`s¶_îr‹
());

3606 i‡(
CTX
 !
NULL
 && 
chaö
 != NULL &&

3607 
	`SSL_CTX_u£_˚πifiˇã_chaö_fûe
(
CTX
, 
chaö
) == 0) {

3608 
	`¸y
(
	`fc
(
˘x
), "%s: c™nŸ o≥¿%s: %s", 
NULL
, 
chaö
, 
	`s¶_îr‹
());

3614 
size
 = (Ë((
±hªad_muãx_t
Ë* 
	`CRYPTO_num_locks
());

3615 i‡((
s¶_muãxes
 = (
±hªad_muãx_t
 *Ë
	`mÆloc
((
size_t
)
size
)Ë=
NULL
) {

3616 
	`¸y
(
	`fc
(
˘x
), "%s: c™nŸáŒoˇã muãxes: %s", 
__func__
, 
	`s¶_îr‹
());

3620 
i
 = 0; i < 
	`CRYPTO_num_locks
(); i++) {

3621 
	`±hªad_muãx_öô
(&
s¶_muãxes
[
i
], 
NULL
);

3624 
	`CRYPTO_£t_lockög_ˇŒback
(&
s¶_lockög_ˇŒback
);

3625 
	`CRYPTO_£t_id_ˇŒback
(&
s¶_id_ˇŒback
);

3628 
˘x
->
s¶_˘x
 = 
CTX
;

3631 
	}
}

3634 
	$£t_g∑ss_›ti⁄
(
mg_c⁄ãxt
 *
˘x
) {

3635 
mg°©
 mgstat;

3636 c⁄° *
∑th
 = 
˘x
->
c⁄fig
[
GLOBAL_PASSWORDS_FILE
];

3637  
∑th
 =
NULL
 || 
	`mg_°©
’©h, &
mg°©
) == 0;

3638 
	}
}

3640 
	$£t_a˛_›ti⁄
(
mg_c⁄ãxt
 *
˘x
) {

3641 
uß
 
Áke
;

3642 
	`mem£t
(&
Áke
, 0, (fake));

3643  
	`check_a˛
(
˘x
, &
Áke
) != -1;

3644 
	}
}

3646 
	$ª£t_≥r_ªque°_©åibuãs
(
mg_c⁄√˘i⁄
 *
c⁄n
) {

3647 
mg_ªque°_öfo
 *
ri
 = &
c⁄n
->
ªque°_öfo
;

3650 i‡(
ri
->
ªmŸe_u£r
 !
NULL
) {

3651 
	`‰ì
((*Ë
ri
->
ªmŸe_u£r
);

3653 i‡(
ri
->
ah
 !
NULL
) {

3654 i‡(
ri
->
ah
->
ha1
 !
NULL
) {

3655 
	`‰ì
((*Ë
ri
->
ah
->
ha1
);

3657 i‡(
ri
->
ah
->
ex≥˘ed_ª•⁄£
 !
NULL
) {

3658 
	`‰ì
((*Ë
ri
->
ah
->
ex≥˘ed_ª•⁄£
);

3660 
	`‰ì
((*Ë
ri
->
ah
);

3662 
ri
->
ªmŸe_u£r
 =Ñi->
ªque°_mëhod
 =Ñi->
uri
 =Ñi->
hâp_vîsi⁄
 = 
NULL
;

3663 
ri
->
ah
 = 
NULL
;

3664 
ri
->
num_hódîs
 = 0;

3665 
ri
->
°©us_code
 = -1;

3667 i‡(
c⁄n
->
auth_hódî
 !
NULL
) {

3668 
	`‰ì
((*Ë
c⁄n
->
auth_hódî
);

3670 
c⁄n
->
auth_hódî
 = 
NULL
;

3671 
c⁄n
->
num_byãs_£¡
 = c⁄n->
c⁄sumed_c⁄ã¡
 = 0;

3672 
c⁄n
->
c⁄ã¡_Àn
 = -1;

3673 
c⁄n
->
ªque°_Àn
 = c⁄n->
d©a_Àn
 = 0;

3674 
	}
}

3676 
	$˛o£_sockë_gø˚fuŒy
(
SOCKET
 
sock
) {

3677 
buf
[
BUFSIZ
];

3678 
n
;

3681 (Ë
	`shutdown
(
sock
, 
SHUT_WR
);

3682 
	`£t_n⁄_blockög_mode
(
sock
);

3690 
n
 = 
	`puŒ
(
NULL
, 
sock
, NULL, 
buf
, (buf));

3691 } 
n
 > 0);

3694 (Ë
	`˛o£sockë
(
sock
);

3695 
	}
}

3697 
	$˛o£_c⁄√˘i⁄
(
mg_c⁄√˘i⁄
 *
c⁄n
) {

3698 i‡(
c⁄n
->
s¶
) {

3699 
	`SSL_‰ì
(
c⁄n
->
s¶
);

3700 
c⁄n
->
s¶
 = 
NULL
;

3703 i‡(
c⁄n
->
˛õ¡
.
sock
 !
INVALID_SOCKET
) {

3704 
	`˛o£_sockë_gø˚fuŒy
(
c⁄n
->
˛õ¡
.
sock
);

3706 
	}
}

3708 
	$disˇrd_cuºít_ªque°_‰om_buf„r
(
mg_c⁄√˘i⁄
 *
c⁄n
) {

3709 *
buf„ªd
;

3710 
buf„ªd_Àn
, 
body_Àn
;

3712 
buf„ªd
 = 
c⁄n
->
buf
 + c⁄n->
ªque°_Àn
;

3713 
buf„ªd_Àn
 = 
c⁄n
->
d©a_Àn
 - c⁄n->
ªque°_Àn
;

3714 
	`as£π
(
buf„ªd_Àn
 >= 0);

3716 i‡(
c⁄n
->
c⁄ã¡_Àn
 == -1) {

3717 
body_Àn
 = 0;

3718 } i‡(
c⁄n
->
c⁄ã¡_Àn
 < (
öt64_t
Ë
buf„ªd_Àn
) {

3719 
body_Àn
 = (Ë
c⁄n
->
c⁄ã¡_Àn
;

3721 
body_Àn
 = 
buf„ªd_Àn
;

3724 
c⁄n
->
d©a_Àn
 -c⁄n->
ªque°_Àn
 + 
body_Àn
;

3725 
	`memmove
(
c⁄n
->
buf
, c⁄n->bu‡+ c⁄n->
ªque°_Àn
 + 
body_Àn
, (
size_t
)c⁄n->
d©a_Àn
);

3726 
	}
}

3728 
	$∑r£_uæ
(c⁄° *
uæ
, *
ho°
, *
p‹t
) {

3729 
Àn
;

3731 i‡(
uæ
 =
NULL
) {

3735 i‡(!
	`°∫cmp
(
uæ
, "http://", 7)) {

3736 
uæ
 += 7;

3739 i‡(
	`ssˇnf
(
uæ
, "%1024[^:]:%d/%n", 
ho°
, 
p‹t
, &
Àn
) == 2) {

3741 
	`ssˇnf
(
uæ
, "%1024[^/]/%n", 
ho°
, &
Àn
);

3742 *
p‹t
 = 80;

3744 
	`DEBUG_TRACE
(("Ho°:%s,Ö‹t:%d", 
ho°
, *
p‹t
));

3746  
Àn
 > 0 && 
uæ
[len - 1] == '/' ?Üen - 1 :Üen;

3747 
	}
}

3749 
	$h™dÀ_¥oxy_ªque°
(
mg_c⁄√˘i⁄
 *
c⁄n
) {

3750 
mg_ªque°_öfo
 *
ri
 = &
c⁄n
->
ªque°_öfo
;

3751 
ho°
[1025], 
buf
[
BUFSIZ
];

3752 
p‹t
, 
is_s¶
, 
Àn
, 
i
, 
n
;

3754 
	`DEBUG_TRACE
(("URL: %s", 
ri
->
uri
));

3755 i‡(
c⁄n
->
ªque°_öfo
.
uri
[0] == '/' ||

3756 (
Àn
 = 
	`∑r£_uæ
(
ri
->
uri
, 
ho°
, &
p‹t
)) == 0) {

3760 i‡(
c⁄n
->
≥î
 =
NULL
) {

3761 
is_s¶
 = !
	`°rcmp
(
ri
->
ªque°_mëhod
, "CONNECT");

3762 i‡((
c⁄n
->
≥î
 = 
	`mg_c⁄√˘
(c⁄n, 
ho°
, 
p‹t
, 
is_s¶
)Ë=
NULL
) {

3765 
c⁄n
->
≥î
->
˛õ¡
.
is_s¶
 = is_ssl;

3769 
	`mg_¥ötf
(
c⁄n
->
≥î
, "%†%†HTTP/%s\r\n", 
ri
->
ªque°_mëhod
,Ñi->
uri
 + 
Àn
,

3770 
ri
->
hâp_vîsi⁄
);

3773 
i
 = 0; i < 
ri
->
num_hódîs
; i++) {

3774 
	`mg_¥ötf
(
c⁄n
->
≥î
, "%s: %s\r\n", 
ri
->
hâp_hódîs
[
i
].
«me
,

3775 
ri
->
hâp_hódîs
[
i
].
vÆue
);

3778 
	`mg_wrôe
(
c⁄n
->
≥î
, "\r\n", 2);

3781 i‡(!
	`°rcmp
(
ri
->
ªque°_mëhod
, "POST")) {

3782 
	`f‹w¨d_body_d©a
(
c⁄n
, 
NULL
, c⁄n->
≥î
->
˛õ¡
.
sock
, c⁄n->≥î->
s¶
);

3786 (
n
 = 
	`puŒ
(
NULL
, 
c⁄n
->
≥î
->
˛õ¡
.
sock
, c⁄n->≥î->
s¶
,

3787 
buf
, (buf))) > 0) {

3788 i‡(
	`mg_wrôe
(
c⁄n
, 
buf
, (
size_t
)
n
) !=Ç) {

3793 i‡(!
c⁄n
->
≥î
->
˛õ¡
.
is_s¶
) {

3794 
	`˛o£_c⁄√˘i⁄
(
c⁄n
->
≥î
);

3795 
	`‰ì
(
c⁄n
->
≥î
);

3796 
c⁄n
->
≥î
 = 
NULL
;

3798 
	}
}

3800 
	$is_vÆid_uri
(c⁄° *
uri
) {

3803  (
uri
[0] == '/' || (uri[0] == '*' && uri[1] == '\0'));

3804 
	}
}

3806 
	$¥o˚ss_√w_c⁄√˘i⁄
(
mg_c⁄√˘i⁄
 *
c⁄n
) {

3807 
mg_ªque°_öfo
 *
ri
 = &
c⁄n
->
ªque°_öfo
;

3808 
kìp_Æive_íabÀd
;

3809 c⁄° *
˛
;

3811 
kìp_Æive_íabÀd
 = !
	`°rcmp
(
c⁄n
->
˘x
->
c⁄fig
[
ENABLE_KEEP_ALIVE
], "yes");

3814 
	`ª£t_≥r_ªque°_©åibuãs
(
c⁄n
);

3817 i‡((
c⁄n
->
ªque°_Àn
 = 
	`gë_ªque°_Àn
(c⁄n->
buf
, c⁄n->
d©a_Àn
)) == 0) {

3818 
c⁄n
->
ªque°_Àn
 = 
	`ªad_ªque°
(
NULL
, c⁄n->
˛õ¡
.
sock
, c⁄n->
s¶
,

3819 
c⁄n
->
buf
, c⁄n->
buf_size
, &c⁄n->
d©a_Àn
);

3821 
	`as£π
(
c⁄n
->
d©a_Àn
 >c⁄n->
ªque°_Àn
);

3822 i‡(
c⁄n
->
ªque°_Àn
 =0 && c⁄n->
d©a_Àn
 =c⁄n->
buf_size
) {

3823 
	`£nd_hâp_îr‹
(
c⁄n
, 413, "Request Too Large", "");

3825 } i‡(
c⁄n
->
ªque°_Àn
 <= 0) {

3830 
c⁄n
->
buf
[c⁄n->
ªque°_Àn
 - 1] = '\0';

3831 i‡(!
	`∑r£_hâp_ªque°
(
c⁄n
->
buf
, 
ri
) ||

3832 (!
c⁄n
->
˛õ¡
.
is_¥oxy
 && !
	`is_vÆid_uri
(
ri
->
uri
))) {

3834 
	`£nd_hâp_îr‹
(
c⁄n
, 400, "Bad Request",

3835 "C™nŸÖ¨£ HTTPÑeque°: [%.*s]", 
c⁄n
->
d©a_Àn
, c⁄n->
buf
);

3836 } i‡(
	`°rcmp
(
ri
->
hâp_vîsi⁄
, "1.0") &&

3837 
	`°rcmp
(
ri
->
hâp_vîsi⁄
, "1.1")) {

3839 
	`£nd_hâp_îr‹
(
c⁄n
, 505, "HTTP versionÇot supported", "");

3840 
	`log_ac˚ss
(
c⁄n
);

3843 
˛
 = 
	`gë_hódî
(
ri
, "Content-Length");

3844 
c⁄n
->
c⁄ã¡_Àn
 = 
˛
 =
NULL
 ? -1 : 
	`°πﬁl
(cl, NULL, 10);

3845 
c⁄n
->
búth_time
 = 
	`time
(
NULL
);

3846 i‡(
c⁄n
->
˛õ¡
.
is_¥oxy
) {

3847 
	`h™dÀ_¥oxy_ªque°
(
c⁄n
);

3849 
	`h™dÀ_ªque°
(
c⁄n
);

3851 
	`log_ac˚ss
(
c⁄n
);

3852 
	`disˇrd_cuºít_ªque°_‰om_buf„r
(
c⁄n
);

3855 } 
c⁄n
->
≥î
 || (
kìp_Æive_íabÀd
 && 
	`should_kìp_Æive
(conn)));

3856 
	`ª£t_≥r_ªque°_©åibuãs
(
c⁄n
);

3857 
	}
}

3860 
	$c⁄sume_sockë
(
mg_c⁄ãxt
 *
˘x
, 
sockë
 *
•
) {

3861 (Ë
	`±hªad_muãx_lock
(&
˘x
->
muãx
);

3862 
	`DEBUG_TRACE
(("going idle"));

3865 
˘x
->
sq_hód
 =˘x->
sq_èû
 && ctx->
°›_Êag
 == 0) {

3866 
	`±hªad_c⁄d_waô
(&
˘x
->
sq_fuŒ
, &˘x->
muãx
);

3870 i‡(
˘x
->
°›_Êag
) {

3871 (Ë
	`±hªad_muãx_u∆ock
(&
˘x
->
muãx
);

3874 
	`as£π
(
˘x
->
sq_hód
 > ctx->
sq_èû
);

3877 *
•
 = 
˘x
->
queue
[˘x->
sq_èû
 % 
	`ARRAY_SIZE
(ctx->queue)];

3878 
˘x
->
sq_èû
++;

3879 
	`DEBUG_TRACE
(("gøbbed sockë %d, goög busy", 
•
->
sock
));

3882 
˘x
->
sq_èû
 > (Ë
	`ARRAY_SIZE
(˘x->
queue
)) {

3883 
˘x
->
sq_èû
 -(Ë
	`ARRAY_SIZE
(˘x->
queue
);

3884 
˘x
->
sq_hód
 -(Ë
	`ARRAY_SIZE
(˘x->
queue
);

3887 (Ë
	`±hªad_c⁄d_sig«l
(&
˘x
->
sq_em±y
);

3888 (Ë
	`±hªad_muãx_u∆ock
(&
˘x
->
muãx
);

3891 
	}
}

3893 
	$w‹kî_thªad
(
mg_c⁄ãxt
 *
˘x
) {

3894 
mg_c⁄√˘i⁄
 *
c⁄n
;

3895 
buf_size
 = 
	`©oi
(
˘x
->
c⁄fig
[
MAX_REQUEST_SIZE
]);

3897 
c⁄n
 = (
mg_c⁄√˘i⁄
*Ë
	`ˇŒoc
(1, (*c⁄nË+ 
buf_size
);

3898 
c⁄n
->
buf_size
 = buf_size;

3899 
c⁄n
->
buf
 = (*) (conn + 1);

3900 
	`as£π
(
c⁄n
 !
NULL
);

3902 
˘x
->
°›_Êag
 =0 && 
	`c⁄sume_sockë
(˘x, &
c⁄n
->
˛õ¡
)) {

3903 
c⁄n
->
búth_time
 = 
	`time
(
NULL
);

3904 
c⁄n
->
˘x
 = ctx;

3909 
c⁄n
->
ªque°_öfo
.
ªmŸe_p‹t
 = 
	`¡ohs
(c⁄n->
˛õ¡
.
rß
.
u
.
sö
.
sö_p‹t
);

3910 
	`mem˝y
(&
c⁄n
->
ªque°_öfo
.
ªmŸe_ù
,

3911 &
c⁄n
->
˛õ¡
.
rß
.
u
.
sö
.
sö_addr
.
s_addr
, 4);

3912 
c⁄n
->
ªque°_öfo
.
ªmŸe_ù
 = (
uöt32_t
Ë
	`¡ohl
(conn->request_info.remote_ip);

3913 
c⁄n
->
ªque°_öfo
.
is_s¶
 = c⁄n->
˛õ¡
.is_ssl;

3915 i‡(!
c⁄n
->
˛õ¡
.
is_s¶
 ||

3916 (
c⁄n
->
˛õ¡
.
is_s¶
 && 
	`s¶ize
(c⁄n, 
SSL_ac˚±
))) {

3917 
	`¥o˚ss_√w_c⁄√˘i⁄
(
c⁄n
);

3920 
	`˛o£_c⁄√˘i⁄
(
c⁄n
);

3922 
	`‰ì
(
c⁄n
);

3925 (Ë
	`±hªad_muãx_lock
(&
˘x
->
muãx
);

3926 
˘x
->
num_thªads
--;

3927 (Ë
	`±hªad_c⁄d_sig«l
(&
˘x
->
c⁄d
);

3928 
	`as£π
(
˘x
->
num_thªads
 >= 0);

3929 (Ë
	`±hªad_muãx_u∆ock
(&
˘x
->
muãx
);

3931 
	`DEBUG_TRACE
(("exiting"));

3932 
	}
}

3935 
	$¥odu˚_sockë
(
mg_c⁄ãxt
 *
˘x
, c⁄° 
sockë
 *
•
) {

3936 (Ë
	`±hªad_muãx_lock
(&
˘x
->
muãx
);

3939 
˘x
->
sq_hód
 - ctx->
sq_èû
 >(Ë
	`ARRAY_SIZE
(˘x->
queue
)) {

3940 (Ë
	`±hªad_c⁄d_waô
(&
˘x
->
sq_em±y
, &˘x->
muãx
);

3942 
	`as£π
(
˘x
->
sq_hód
 - ctx->
sq_èû
 < (Ë
	`ARRAY_SIZE
(˘x->
queue
));

3945 
˘x
->
queue
[˘x->
sq_hód
 % 
	`ARRAY_SIZE
(˘x->queue)] = *
•
;

3946 
˘x
->
sq_hód
++;

3947 
	`DEBUG_TRACE
(("queued sockë %d", 
•
->
sock
));

3949 (Ë
	`±hªad_c⁄d_sig«l
(&
˘x
->
sq_fuŒ
);

3950 (Ë
	`±hªad_muãx_u∆ock
(&
˘x
->
muãx
);

3951 
	}
}

3953 
	$ac˚±_√w_c⁄√˘i⁄
(c⁄° 
sockë
 *
li°íî
,

3954 
mg_c⁄ãxt
 *
˘x
) {

3955 
sockë
 
ac˚±ed
;

3956 
Ælowed
;

3958 
ac˚±ed
.
rß
.
Àn
 = ◊c˚±ed.rß.
u
.
sö
);

3959 
ac˚±ed
.
lß
 = 
li°íî
->lsa;

3960 
ac˚±ed
.
sock
 = 
	`ac˚±
(
li°íî
->sock, &ac˚±ed.
rß
.
u
.
ß
, &ac˚±ed.rß.
Àn
);

3961 i‡(
ac˚±ed
.
sock
 !
INVALID_SOCKET
) {

3962 
Ælowed
 = 
	`check_a˛
(
˘x
, &
ac˚±ed
.
rß
);

3963 i‡(
Ælowed
) {

3965 
	`DEBUG_TRACE
(("ac˚±ed sockë %d", 
ac˚±ed
.
sock
));

3966 
ac˚±ed
.
is_s¶
 = 
li°íî
->is_ssl;

3967 
ac˚±ed
.
is_¥oxy
 = 
li°íî
->is_proxy;

3968 
	`¥odu˚_sockë
(
˘x
, &
ac˚±ed
);

3970 
	`¸y
(
	`fc
(
˘x
), "%s: %s isÇotállowedÅo connect",

3971 
__func__
, 
	`öë_¡ﬂ
(
ac˚±ed
.
rß
.
u
.
sö
.
sö_addr
));

3972 (Ë
	`˛o£sockë
(
ac˚±ed
.
sock
);

3975 
	}
}

3977 
	$ma°î_thªad
(
mg_c⁄ãxt
 *
˘x
) {

3978 
fd_£t
 
ªad_£t
;

3979 
timevÆ
 
tv
;

3980 
sockë
 *
•
;

3981 
max_fd
;

3983 
˘x
->
°›_Êag
 == 0) {

3984 
	`FD_ZERO
(&
ªad_£t
);

3985 
max_fd
 = -1;

3988 
•
 = 
˘x
->
li°íög_sockës
; s∞!
NULL
; s∞•->
√xt
) {

3989 
	`add_to_£t
(
•
->
sock
, &
ªad_£t
, &
max_fd
);

3992 
tv
.
tv_£c
 = 0;

3993 
tv
.
tv_u£c
 = 200 * 1000;

3995 i‡(
	`£À˘
(
max_fd
 + 1, &
ªad_£t
, 
NULL
, NULL, &
tv
) < 0) {

3996 #ifde‡
_WIN32


4000 
	`¶ìp
(1);

4003 
•
 = 
˘x
->
li°íög_sockës
; s∞!
NULL
; s∞•->
√xt
) {

4004 i‡(
	`FD_ISSET
(
•
->
sock
, &
ªad_£t
)) {

4005 
	`ac˚±_√w_c⁄√˘i⁄
(
•
, 
˘x
);

4010 
	`DEBUG_TRACE
(("stopping workers"));

4013 
	`˛o£_Æl_li°íög_sockës
(
˘x
);

4016 
	`±hªad_c⁄d_brﬂdˇ°
(&
˘x
->
sq_fuŒ
);

4019 (Ë
	`±hªad_muãx_lock
(&
˘x
->
muãx
);

4020 
˘x
->
num_thªads
 > 0) {

4021 (Ë
	`±hªad_c⁄d_waô
(&
˘x
->
c⁄d
, &˘x->
muãx
);

4023 (Ë
	`±hªad_muãx_u∆ock
(&
˘x
->
muãx
);

4026 (Ë
	`±hªad_muãx_de°roy
(&
˘x
->
muãx
);

4027 (Ë
	`±hªad_c⁄d_de°roy
(&
˘x
->
c⁄d
);

4028 (Ë
	`±hªad_c⁄d_de°roy
(&
˘x
->
sq_em±y
);

4029 (Ë
	`±hªad_c⁄d_de°roy
(&
˘x
->
sq_fuŒ
);

4032 
˘x
->
°›_Êag
 = 2;

4034 
	`DEBUG_TRACE
(("exiting"));

4035 
	}
}

4037 
	$‰ì_c⁄ãxt
(
mg_c⁄ãxt
 *
˘x
) {

4038 
i
;

4041 
i
 = 0; i < 
NUM_OPTIONS
; i++) {

4042 i‡(
˘x
->
c⁄fig
[
i
] !
NULL
)

4043 
	`‰ì
(
˘x
->
c⁄fig
[
i
]);

4047 i‡(
˘x
->
s¶_˘x
 !
NULL
) {

4048 
	`SSL_CTX_‰ì
(
˘x
->
s¶_˘x
);

4050 #i‚de‡
NO_SSL


4051 i‡(
s¶_muãxes
 !
NULL
) {

4052 
	`‰ì
(
s¶_muãxes
);

4057 
	`‰ì
(
˘x
);

4058 
	}
}

4060 
	$mg_°›
(
mg_c⁄ãxt
 *
˘x
) {

4061 
˘x
->
°›_Êag
 = 1;

4064 
˘x
->
°›_Êag
 != 2) {

4065 (Ë
	`¶ìp
(0);

4067 
	`‰ì_c⁄ãxt
(
˘x
);

4069 #i‡
	`deföed
(
_WIN32
)

4070 (Ë
	`WSACÀ™up
();

4072 
	}
}

4074 
mg_c⁄ãxt
 *
	$mg_°¨t
(
mg_ˇŒback_t
 
u£r_ˇŒback
, *
u£r_d©a
,

4075 c⁄° **
›ti⁄s
) {

4076 
mg_c⁄ãxt
 *
˘x
;

4077 c⁄° *
«me
, *
vÆue
, *
deÁu…_vÆue
;

4078 
i
;

4080 #i‡
	`deföed
(
_WIN32
)

4081 
WSADATA
 
d©a
;

4082 
	`WSASèπup
(
	`MAKEWORD
(2,2), &
d©a
);

4087 
˘x
 = (
mg_c⁄ãxt
*Ë
	`ˇŒoc
(1, (*ctx));

4088 
˘x
->
u£r_ˇŒback
 = user_callback;

4089 
˘x
->
u£r_d©a
 = user_data;

4091 
›ti⁄s
 && (
«me
 = *›ti⁄s++Ë!
NULL
) {

4092 i‡((
i
 = 
	`gë_›ti⁄_ödex
(
«me
)) == -1) {

4093 
	`¸y
(
	`fc
(
˘x
), "InvÆid o±i⁄: %s", 
«me
);

4094 
	`‰ì_c⁄ãxt
(
˘x
);

4095  
NULL
;

4096 } i‡((
vÆue
 = *
›ti⁄s
++Ë=
NULL
) {

4097 
	`¸y
(
	`fc
(
˘x
), "%s: o±i⁄ vÆuêˇ¬Ÿ bêNULL", 
«me
);

4098 
	`‰ì_c⁄ãxt
(
˘x
);

4099  
NULL
;

4101 
˘x
->
c⁄fig
[
i
] = 
	`mg_°rdup
(
vÆue
);

4102 
	`DEBUG_TRACE
(("[%s] -> [%s]", 
«me
, 
vÆue
));

4106 
i
 = 0; 
c⁄fig_›ti⁄s
[ò* 
ENTRIES_PER_CONFIG_OPTION
] !
NULL
; i++) {

4107 
deÁu…_vÆue
 = 
c⁄fig_›ti⁄s
[
i
 * 
ENTRIES_PER_CONFIG_OPTION
 + 2];

4108 i‡(
˘x
->
c⁄fig
[
i
] =
NULL
 && 
deÁu…_vÆue
 != NULL) {

4109 
˘x
->
c⁄fig
[
i
] = 
	`mg_°rdup
(
deÁu…_vÆue
);

4110 
	`DEBUG_TRACE
(("Setting default: [%s] -> [%s]",

4111 
c⁄fig_›ti⁄s
[
i
 * 
ENTRIES_PER_CONFIG_OPTION
 + 1],

4112 
deÁu…_vÆue
));

4118 i‡(!
	`£t_g∑ss_›ti⁄
(
˘x
) ||

4119 #i‡!
	`deföed
(
NO_SSL
)

4120 !
	`£t_s¶_›ti⁄
(
˘x
) ||

4122 !
	`£t_p‹ts_›ti⁄
(
˘x
) ||

4123 #i‡!
	`deföed
(
_WIN32
)

4124 !
	`£t_uid_›ti⁄
(
˘x
) ||

4126 !
	`£t_a˛_›ti⁄
(
˘x
)) {

4127 
	`‰ì_c⁄ãxt
(
˘x
);

4128  
NULL
;

4131 #i‡!
	`deföed
(
_WIN32
)

4134 (Ë
	`sig«l
(
SIGPIPE
, 
SIG_IGN
);

4137 (Ë
	`±hªad_muãx_öô
(&
˘x
->
muãx
, 
NULL
);

4138 (Ë
	`±hªad_c⁄d_öô
(&
˘x
->
c⁄d
, 
NULL
);

4139 (Ë
	`±hªad_c⁄d_öô
(&
˘x
->
sq_em±y
, 
NULL
);

4140 (Ë
	`±hªad_c⁄d_öô
(&
˘x
->
sq_fuŒ
, 
NULL
);

4143 
	`°¨t_thªad
(
˘x
, (
mg_thªad_func_t
Ë
ma°î_thªad
, ctx);

4146 
i
 = 0; i < 
	`©oi
(
˘x
->
c⁄fig
[
NUM_THREADS
]); i++) {

4147 i‡(
	`°¨t_thªad
(
˘x
, (
mg_thªad_func_t
Ë
w‹kî_thªad
, ctx) != 0) {

4148 
	`¸y
(
	`fc
(
˘x
), "C™nŸ sèπ w‹kîÅhªad: %d", 
ERRNO
);

4150 
˘x
->
num_thªads
++;

4154  
˘x
;

4155 
	}
}

4157 *
	$mg_ªad_u£r_d©a
(
mg_c⁄√˘i⁄
 *
c⁄n
)

4159  
c⁄n
->
˘x
->
u£r_d©a
;

4161 
	}
}

	@external/vpiotr-mongoose-cpp/mongoose.h

21 #i‚de‡
MONGOOSE_HEADER_INCLUDED


22 
	#MONGOOSE_HEADER_INCLUDED


	)

24 #ifde‡
__˝lu•lus


28 
mg_c⁄ãxt
;

29 
mg_c⁄√˘i⁄
;

32 
	smg_auth_hódî
 {

33 c⁄° *
u£r
, *
uri
, *
˙⁄˚
, *
ª•⁄£
, *
q›
, *
nc
, *
n⁄˚
;

36 *
ha1
;

37 *
ex≥˘ed_ª•⁄£
;

41 
	smg_ªque°_öfo
 {

42 *
u£r_d©a
;

43 *
ªque°_mëhod
;

44 *
uri
;

45 *
hâp_vîsi⁄
;

46 *
quîy_°rög
;

47 *
ªmŸe_u£r
;

48 *
log_mesßge
;

49 
ªmŸe_ù
;

50 
ªmŸe_p‹t
;

51 
°©us_code
;

52 
is_s¶
;

53 
num_hódîs
;

54 
	smg_hódî
 {

55 *
«me
;

56 *
vÆue
;

57 } 
hâp_hódîs
[64];

58 
mg_auth_hódî
 *
ah
;

62 
	emg_evít
 {

63 
MG_NEW_REQUEST
,

64 
MG_HTTP_ERROR
,

65 
MG_EVENT_LOG
,

66 
MG_INIT_SSL
,

68 
MG_AUTHENTICATE
,

88 * (*
	tmg_ˇŒback_t
)(
	tmg_evít
 
	tevít
,

89 
	tmg_c⁄√˘i⁄
 *
	tc⁄n
,

90 c⁄° 
	tmg_ªque°_öfo
 *
	tªque°_öfo
);

113 
mg_c⁄ãxt
 *
mg_°¨t
(
mg_ˇŒback_t
 
ˇŒback
, *
u£r_d©a
,

114 c⁄° **
›ti⁄s
);

122 
mg_°›
(
mg_c⁄ãxt
 *);

131 c⁄° *
mg_gë_›ti⁄
(c⁄° 
mg_c⁄ãxt
 *
˘x
, c⁄° *
«me
);

137 c⁄° **
mg_gë_vÆid_›ti⁄_«mes
();

152 
mg_modify_∑ssw‹ds_fûe
(
mg_c⁄ãxt
 *
˘x
,

153 c⁄° *
∑ssw‹ds_fûe_«me
, c⁄° *
u£r
, c⁄° *
∑ssw‹d
);

156 
mg_wrôe
(
mg_c⁄√˘i⁄
 *, c⁄° *
buf
, 
size_t
 
Àn
);

165 
mg_¥ötf
(
mg_c⁄√˘i⁄
 *, c⁄° *
fmt
, ...);

169 
mg_ªad
(
mg_c⁄√˘i⁄
 *, *
buf
, 
size_t
 
Àn
);

177 
mg_£nd_auth‹iz©i⁄_ªque°
(
mg_c⁄√˘i⁄
 *
c⁄n
, c⁄° *
n⁄˚
);

184 c⁄° *
mg_gë_hódî
(c⁄° 
mg_c⁄√˘i⁄
 *, c⁄° *
«me
);

203 
mg_gë_v¨
(c⁄° *
d©a
, 
size_t
 
d©a_Àn
,

204 c⁄° *
v¨_«me
, *
buf
, 
size_t
 
buf_Àn
);

217 
mg_gë_cookõ
(c⁄° 
mg_c⁄√˘i⁄
 *,

218 c⁄° *
cookõ_«me
, *
buf
, 
size_t
 
buf_Àn
);

222 c⁄° *
mg_vîsi⁄
();

231 
mg_md5
(*
buf
, ...);

235 *
mg_ªad_u£r_d©a
(
mg_c⁄√˘i⁄
 *
c⁄n
);

237 #ifde‡
__˝lu•lus


	@external/vpiotr-mongoose-cpp/test/embed.c

24 
	~<°dlib.h
>

25 
	~<°dio.h
>

26 
	~<°rög.h
>

27 #i‚de‡
_WIN32


28 
	~<uni°d.h
>

31 
	~"m⁄goo£.h
"

33 #i‡!
deföed
(
LISTENING_PORT
)

34 
	#LISTENING_PORT
 "23456"

	)

37 c⁄° *
	g°™d¨d_ª∂y
 = "HTTP/1.1 200 OK\r\n"

41 
	$ã°_gë_v¨
(
mg_c⁄√˘i⁄
 *
c⁄n
,

42 c⁄° 
mg_ªque°_öfo
 *
ri
) {

43 *
v¨
, *
buf
;

44 
size_t
 
buf_Àn
;

45 c⁄° *
˛
;

46 
v¨_Àn
;

48 
	`mg_¥ötf
(
c⁄n
, "%s", 
°™d¨d_ª∂y
);

50 
buf_Àn
 = 0;

51 
v¨
 = 
buf
 = 
NULL
;

52 
˛
 = 
	`mg_gë_hódî
(
c⁄n
, "Content-Length");

53 
	`mg_¥ötf
(
c⁄n
, "˛: %p\n", 
˛
);

54 i‡((!
	`°rcmp
(
ri
->
ªque°_mëhod
, "POST") ||

55 !
	`°rcmp
(
ri
->
ªque°_mëhod
, "PUT"))

56 && 
˛
 !
NULL
) {

57 
buf_Àn
 = 
	`©oi
(
˛
);

58 
buf
 = 
	`mÆloc
(
buf_Àn
);

60 i‡(
buf_Àn
 > 2) {

61 
	`mg_ªad
(
c⁄n
, 
buf
, 2);

62 
	`mg_ªad
(
c⁄n
, 
buf
 + 2, 
buf_Àn
 - 2);

64 
	`mg_ªad
(
c⁄n
, 
buf
, 
buf_Àn
);

66 } i‡(
ri
->
quîy_°rög
 !
NULL
) {

67 
buf_Àn
 = 
	`°æí
(
ri
->
quîy_°rög
);

68 
buf
 = 
	`mÆloc
(
buf_Àn
 + 1);

69 
	`°r˝y
(
buf
, 
ri
->
quîy_°rög
);

71 
v¨
 = 
	`mÆloc
(
buf_Àn
 + 1);

72 
v¨_Àn
 = 
	`mg_gë_v¨
(
buf
, 
buf_Àn
, "my_v¨", 
v¨
, buf_len + 1);

73 
	`mg_¥ötf
(
c⁄n
, "VÆue: [%s]\n", 
v¨
);

74 
	`mg_¥ötf
(
c⁄n
, "VÆuêsize: [%d]\n", 
v¨_Àn
);

75 
	`‰ì
(
buf
);

76 
	`‰ì
(
v¨
);

77 
	}
}

79 
	$ã°_gë_hódî
(
mg_c⁄√˘i⁄
 *
c⁄n
,

80 c⁄° 
mg_ªque°_öfo
 *
ri
) {

81 c⁄° *
vÆue
;

82 
i
;

84 
	`mg_¥ötf
(
c⁄n
, "%s", 
°™d¨d_ª∂y
);

85 
	`¥ötf
("HTTP hódîs: %d\n", 
ri
->
num_hódîs
);

86 
i
 = 0; i < 
ri
->
num_hódîs
; i++) {

87 
	`¥ötf
("[%s]: [%s]\n", 
ri
->
hâp_hódîs
[
i
].
«me
,Ñi->hâp_hódîs[i].
vÆue
);

90 
vÆue
 = 
	`mg_gë_hódî
(
c⁄n
, "Host");

91 i‡(
vÆue
 !
NULL
) {

92 
	`mg_¥ötf
(
c⁄n
, "VÆue: [%s]", 
vÆue
);

94 
	}
}

96 
	$ã°_gë_ªque°_öfo
(
mg_c⁄√˘i⁄
 *
c⁄n
,

97 c⁄° 
mg_ªque°_öfo
 *
ri
) {

98 
i
;

100 
	`mg_¥ötf
(
c⁄n
, "%s", 
°™d¨d_ª∂y
);

102 
	`mg_¥ötf
(
c⁄n
, "Mëhod: [%s]\n", 
ri
->
ªque°_mëhod
);

103 
	`mg_¥ötf
(
c⁄n
, "URI: [%s]\n", 
ri
->
uri
);

104 
	`mg_¥ötf
(
c⁄n
, "HTTP vîsi⁄: [%s]\n", 
ri
->
hâp_vîsi⁄
);

106 
i
 = 0; i < 
ri
->
num_hódîs
; i++) {

107 
	`mg_¥ötf
(
c⁄n
, "HTTP header [%s]: [%s]\n",

108 
ri
->
hâp_hódîs
[
i
].
«me
,

109 
ri
->
hâp_hódîs
[
i
].
vÆue
);

112 
	`mg_¥ötf
(
c⁄n
, "Query string: [%s]\n",

113 
ri
->
quîy_°rög
 ?Ñi->query_string: "");

114 
	`mg_¥ötf
(
c⁄n
, "RemŸêIP: [%lu]\n", 
ri
->
ªmŸe_ù
);

115 
	`mg_¥ötf
(
c⁄n
, "RemŸêp‹t: [%d]\n", 
ri
->
ªmŸe_p‹t
);

116 
	`mg_¥ötf
(
c⁄n
, "Remote user: [%s]\n",

117 
ri
->
ªmŸe_u£r
 ?Ñi->remote_user : "");

118 
	}
}

120 
	$ã°_îr‹
(
mg_c⁄√˘i⁄
 *
c⁄n
,

121 c⁄° 
mg_ªque°_öfo
 *
ri
) {

122 
	`mg_¥ötf
(
c⁄n
, "HTTP/1.1 %d XX\r\n"

123 "C⁄¡e˘i⁄: clo£\r\n\r\n", 
ri
->
°©us_code
);

124 
	`mg_¥ötf
(
c⁄n
, "Eº‹: [%d]", 
ri
->
°©us_code
);

125 
	}
}

127 
	$ã°_po°
(
mg_c⁄√˘i⁄
 *
c⁄n
,

128 c⁄° 
mg_ªque°_öfo
 *
ri
) {

129 c⁄° *
˛
;

130 *
buf
;

131 
Àn
;

133 
	`mg_¥ötf
(
c⁄n
, "%s", 
°™d¨d_ª∂y
);

134 i‡(
	`°rcmp
(
ri
->
ªque°_mëhod
, "POST") == 0 &&

135 (
˛
 = 
	`mg_gë_hódî
(
c⁄n
, "C⁄ã¡-Lígth")Ë!
NULL
) {

136 
Àn
 = 
	`©oi
(
˛
);

137 i‡((
buf
 = 
	`mÆloc
(
Àn
)Ë!
NULL
) {

138 
	`mg_wrôe
(
c⁄n
, 
buf
, 
Àn
);

139 
	`‰ì
(
buf
);

142 
	}
}

144 c⁄° 
	sã°_c⁄fig
 {

145 
mg_evít
 
	mevít
;

146 c⁄° *
	muri
;

147 (*
	mfunc
)(
	mmg_c⁄√˘i⁄
 *, c⁄° 
	mmg_ªque°_öfo
 *);

148 } 
	gã°_c⁄fig
[] = {

149 {
MG_NEW_REQUEST
, "/ã°_gë_hódî", &
ã°_gë_hódî
},

150 {
MG_NEW_REQUEST
, "/ã°_gë_v¨", &
ã°_gë_v¨
},

151 {
MG_NEW_REQUEST
, "/ã°_gë_ªque°_öfo", &
ã°_gë_ªque°_öfo
},

152 {
MG_NEW_REQUEST
, "/ã°_po°", &
ã°_po°
},

153 {
MG_HTTP_ERROR
, "", &
ã°_îr‹
},

154 {0, 
NULL
, NULL}

157 *
	$ˇŒback
(
mg_evít
 
evít
,

158 
mg_c⁄√˘i⁄
 *
c⁄n
,

159 c⁄° 
mg_ªque°_öfo
 *
ªque°_öfo
) {

160 
i
;

162 
i
 = 0; 
ã°_c⁄fig
[i].
uri
 !
NULL
; i++) {

163 i‡(
evít
 =
ã°_c⁄fig
[
i
].event &&

164 (
evít
 =
MG_HTTP_ERROR
 ||

165 !
	`°rcmp
(
ªque°_öfo
->
uri
, 
ã°_c⁄fig
[
i
].uri))) {

166 
ã°_c⁄fig
[
i
].
	`func
(
c⁄n
, 
ªque°_öfo
);

171  
NULL
;

172 
	}
}

174 
	$maö
() {

175 
mg_c⁄ãxt
 *
˘x
;

176 c⁄° *
›ti⁄s
[] = {"li°íög_p‹ts", 
LISTENING_PORT
, 
NULL
};

178 
˘x
 = 
	`mg_°¨t
(
ˇŒback
, 
NULL
, 
›ti⁄s
);

179 
	`∑u£
();

181 
	}
}

	@external/vpiotr-mongoose-cpp/test/mongotest.cpp

12 
	~<io°ªam
>

13 
	~<time.h
>

14 
	~<s°ªam
>

16 
	~"m⁄g˝p.h
"

19 
usög
 
«me•a˚
 
	gm⁄goo£
;

20 
usög
 
«me•a˚
 
	g°d
;

22 
	gãm∂©e
 <
˛ass
 
	gT
>

23 
ölöe
 
	g°d
::
°rög
 
	$toSåög
 (c⁄° 
T
& 
t
)

25 
°d
::
°rög°ªam
 
ss
;

26 
ss
 << 
t
;

27  
ss
.
	`°r
();

28 
	}
}

30 
°rög
 
	$ùToSåög
(
ù
)

32 
°rög
 
ªs
;

33 
w‹kIp
, 
a
, 
b
, 
c
, 
d
;

34 
w‹kIp
 = 
ù
;

35 
d
 = 
w‹kIp
 % 0x100;

36 
w‹kIp
 = workIp >> 8;

37 
c
 = 
w‹kIp
 % 0x100;

38 
w‹kIp
 = workIp >> 8;

39 
b
 = 
w‹kIp
 % 0x100;

40 
w‹kIp
 = workIp >> 8;

41 
a
 = 
w‹kIp
;

42 
ªs
 = 
	`toSåög
(
a
)+"."+toSåög(
b
)+"."+toSåög(
c
)+"."+toSåög(
d
);

43  
ªs
;

44 
	}
}

46 ˛as†
	cTe°M⁄goSîvî
: 
public
 
M⁄goo£Sîvî
 {

47 
public
:

48 
	$Te°M⁄goSîvî
(): 
	$M⁄goo£Sîvî
() {}

49 
vútuÆ
 ~
	$Te°M⁄goSîvî
(Ë{
	}
}

50 
¥Ÿe˘ed
:

51 
vútuÆ
 
boﬁ
 
	$h™dÀEvít
(
SîvîH™dlögEvít
 
evítCode
, 
M⁄goo£C⁄√˘i⁄
 &
c⁄√˘i⁄
, c⁄° 
M⁄goo£Reque°
 &
ªque°
, 
M⁄goo£Re•⁄£
 &
ª•⁄£
) {

52 
boﬁ
 
ªs
 = 
Ál£
;

54 i‡(
evítCode
 =
MG_NEW_REQUEST
) {

55 i‡(
ªque°
.
	`gëUri
(Ë=
	`°rög
("/info")) {

56 
	`h™dÀInfo
(
ªque°
, 
ª•⁄£
);

57 
ªs
 = 
åue
;

61  
ªs
;

62 
	}
}

64 
	$h™dÀInfo
(c⁄° 
M⁄goo£Reque°
 &
ªque°
, 
M⁄goo£Re•⁄£
 &
ª•⁄£
) {

65 
ª•⁄£
.
	`£tSètus
(200);

66 
ª•⁄£
.
	`£tC⁄√˘i⁄Alive
(
Ál£
);

67 
ª•⁄£
.
	`£tCacheDißbÀd
();

68 
ª•⁄£
.
	`£tC⁄ã¡Ty≥
("text/html");

69 
ª•⁄£
.
	`addC⁄ã¡
(
	`gíî©eInfoC⁄ã¡
(
ªque°
));

70 
ª•⁄£
.
	`wrôe
();

71 
	}
}

73 c⁄° 
°rög
 
	$gíî©eInfoC⁄ã¡
(c⁄° 
M⁄goo£Reque°
 &
ªque°
) {

74 
°rög
 
ªsu…
;

75 
ªsu…
 = "<h1>Sample Info Page</h1>";

76 
ªsu…
 +"<b∏/>Reque° URI: " + 
ªque°
.
	`gëUri
();

77 
ªsu…
 +"<b∏/>You∏IP: " + 
	`ùToSåög
(
ªque°
.
	`gëRemŸeIp
());

79 
time_t
 
tim
;

80 
	`time
(&
tim
);

82 
ªsu…
 +"<b∏/>Cuºíàd©ê&Åime: " + 
	`toSåög
(
	`˘ime
(&
tim
));

83 
ªsu…
 += "<br /><br /><a href=\"/\">IndexÖage</a>";

85  
ªsu…
;

86 
	}
}

89 
	$maö
()

91 
Te°M⁄goSîvî
 
£rvî
;

93 
£rvî
.
	`£tO±i⁄
("document_root", "html");

94 
£rvî
.
	`£tO±i⁄
("listening_ports", "8080");

95 
£rvî
.
	`£tO±i⁄
("num_threads", "5");

97 
£rvî
.
	`°¨t
();

99 
cout
 << "Te° sîvî sèπed,Öªs†íã∏tÿquô..." << 
ídl
;

100 
cö
.
	`ign‹e
();

102 
£rvî
.
	`°›
();

103 
cout
 << "Te° sîvî st›≥d" << 
ídl
;

104 
	}
}

	@graphchi_basic_includes.hpp

32 #i‚de‡
GRAPHCHI_DEF_ALLBASIC_INCLUDES


33 
	#GRAPHCHI_DEF_ALLBASIC_INCLUDES


	)

35 
	~<omp.h
>

36 
	~<s°ªam
>

38 
	~"≠i/chifûíames.hµ
"

39 
	~"≠i/gøphchi_c⁄ãxt.hµ
"

40 
	~"≠i/gøphchi_¥ogøm.hµ
"

41 
	~"≠i/gøph_obje˘s.hµ
"

42 
	~"≠i/ischeduÀr.hµ
"

43 
	~"≠i/vîãx_aggªg©‹.hµ
"

45 
	~"ígöe/gøphchi_ígöe.hµ
"

47 
	~"loggî/loggî.hµ
"

49 
	~"mërics/mërics.hµ
"

50 
	~"mërics/ªps/basic_ªp‹ãr.hµ
"

51 
	~"mërics/ªps/fûe_ªp‹ãr.hµ
"

52 
	~"mërics/ªps/html_ªp‹ãr.hµ
"

54 
	~"¥ïro˚ssög/c⁄vîsi⁄s.hµ
"

56 
	~"utû/cmd›ts.hµ
"

59 
«me•a˚
 
	ggøphchi
 {

64 
VARIABLE_IS_NOT_USED
 
mërics_ªp‹t
(
mërics
 &
m
);

65 
VARIABLE_IS_NOT_USED
 
mërics_ªp‹t
(
mërics
 &
m
) {

66 
	g°d
::
°rög
 
ªp‹ãrs
 = 
gë_›ti⁄_°rög
("metrics.reporter", "console");

67 * 
	g¸ïs
 = (*)
ªp‹ãrs
.
c_°r
();

68 c⁄° * 
	gdñims
 = ",";

69 * 
	gt
 = 
°πok
(
¸ïs
, 
dñims
);

71 
	gt
 !
NULL
) {

72 
°d
::
°rög
 
ª≤ame
(
t
);

73 i‡(
	gª≤ame
 ="basic" || 
ª≤ame
 == "console") {

74 
basic_ªp‹ãr
 
ªp
;

75 
	gm
.
ªp‹t
(
ªp
);

76 } i‡(
	gª≤ame
 == "file") {

77 
fûe_ªp‹ãr
 
ªp
(
gë_›ti⁄_°rög
("metrics.reporter.filename", "metrics.txt"));

78 
	gm
.
ªp‹t
(
ªp
);

79 } i‡(
	gª≤ame
 == "html") {

80 
html_ªp‹ãr
 
ªp
(
gë_›ti⁄_°rög
("metrics.reporter.htmlfile", "metrics.html"));

81 
	gm
.
ªp‹t
(
ªp
);

83 
log°ªam
(
LOG_WARNING
Ë<< "CouldÇŸ föd mëric†ªp‹ã∏wôhÇamê[" << 
	gª≤ame
 << "], ign‹ög." << 
	g°d
::
ídl
;

85 
	gt
 = 
°πok
(
NULL
, 
dñims
);

	@graphchi_types.hpp

18 #i‚de‡
DEF_GRAPHCHI_TYPES


19 
	#DEF_GRAPHCHI_TYPES


	)

22 
	~<°döt.h
>

24 
«me•a˚
 
	ggøphchi
 {

26 
uöt32_t
 
	tvid_t
;

33 
	gãm∂©e
 <
ty≥«me
 
	gET
>

34 
	sPaúC⁄èöî
 {

35 
ET
 
	gÀ·
;

36 
ET
 
	gright
;

38 
PaúC⁄èöî
() {

39 
	gÀ·
 = 
ET
();

40 
	gright
 = 
ET
();

43 
PaúC⁄èöî
(
ET
 
a
, ET 
b
) {

44 
	gÀ·
 = 
a
;

45 
	gright
 = 
b
;

48 
	gET
 & 
ﬁdvÆ
(
ôî
) {

49  (
	gôî
 % 2 =0 ? 
À·
 : 
right
);

52 
£t_√wvÆ
(
ôî
, 
ET
 
x
) {

53 i‡(
	gôî
 % 2 == 0) {

54 
right
 = 
x
;

56 
	gÀ·
 = 
x
;

61 
	ssh¨d_ödex
 {

62 
vid_t
 
	gvîãxid
;

63 
size_t
 
	gfûïos
;

64 
size_t
 
	gedgecou¡î
;

65 
sh¨d_ödex
(
vid_t
 
vîãxid
, 
size_t
 
fûïos
, size_à
edgecou¡î
) : vertexid(vertexid), filepos(filepos),Édgecounter(edgecounter) {}

	@httpadmin/chi_httpadmin.hpp

10 #i‚de‡
CHI_HTTPADMIN_DEF


11 
	#CHI_HTTPADMIN_DEF


	)

13 
	~<as£π.h
>

14 
	~<°rög.h
>

15 
	~<time.h
>

16 
	~<°d¨g.h
>

17 
	~<°rög
>

19 
	~"exã∫Æ/vpiŸr-m⁄goo£-˝p/m⁄goo£.h
"

22 
	~"exã∫Æ/vpiŸr-m⁄goo£-˝p/m⁄goo£.c
"

24 
«me•a˚
 
gøphchi
 {

26 ˛as†
	ccu°om_ªque°_h™dÀr
 {

28 
public
:

29 
vútuÆ
 
°d
::
°rög
 
h™dÀ
(c⁄° * 
ªq
) = 0;

30 
vútuÆ
 
boﬁ
 
ª•⁄ds_to
(c⁄° * 
ªq
) = 0;

33 
°d
::
ve˘‹
<
cu°om_ªque°_h™dÀr
 *> 
ªqh™dÀrs
;

35 
	$ªgi°î_hâp_ªque°_h™dÀr
(
cu°om_ªque°_h™dÀr
 * 
rh
) {

36 
ªqh™dÀrs
.
	`push_back
(
rh
);

37 
	}
}

40 c⁄° *
ajax_ª∂y_°¨t
 =

46 c⁄° *
›ti⁄s
[] = {

50 
NULL


53 
	$gë_qsv¨
(c⁄° 
mg_ªque°_öfo
 *
ªque°_öfo
,

54 c⁄° *
«me
, *
d°
, 
size_t
 
d°_Àn
) {

55 c⁄° *
qs
 = 
ªque°_öfo
->
quîy_°rög
;

56 
	`mg_gë_v¨
(
qs
, 
	`°æí
(q†=
NULL
 ? "" : qs), 
«me
, 
d°
, 
d°_Àn
);

57 
	}
}

62 
	$h™dÀ_js⁄p
(
mg_c⁄√˘i⁄
 *
c⁄n
,

63 c⁄° 
mg_ªque°_öfo
 *
ªque°_öfo
) {

64 
cb
[64];

66 
	`gë_qsv¨
(
ªque°_öfo
, "ˇŒback", 
cb
, (cb));

67 i‡(
cb
[0] != '\0') {

68 
	`mg_¥ötf
(
c⁄n
, "%s(", 
cb
);

71  
cb
[0] == '\0' ? 0 : 1;

72 
	}
}

74 
£nd
(
°d
::
°rög
 
js⁄_öfo
, 
mg_c⁄√˘i⁄
 * 
c⁄n
,

75 c⁄° 
mg_ªque°_öfo
 *
ªque°_öfo
) {

76 
mg_¥ötf
(
c⁄n
, "%s", 
ajax_ª∂y_°¨t
);

77 c⁄° * 
c°r
 = 
js⁄_öfo
.
c_°r
();

78 
Àn
 = ()
°æí
(
c°r
);

79 
is_js⁄p
 = 
h™dÀ_js⁄p
(
c⁄n
, 
ªque°_öfo
);

83 
num_wrôãn
 = 0;

85 
Àn
 > 0) {

86 i‡((
num_wrôãn
 = 
mg_wrôe
(
c⁄n
, 
c°r
, (
size_t
)
Àn
)) !=Üen)

88 
Àn
 -
num_wrôãn
;

89 
c°r
 +
num_wrôãn
;

92 i‡(
is_js⁄p
) {

93 
mg_¥ötf
(
c⁄n
, "%s", ")");

98 
ãm∂©e
 <
ty≥«me
 
ENGINE
>

99 
	$ajax_£nd_mesßge
(
mg_c⁄√˘i⁄
 *
c⁄n
,

100 c⁄° 
mg_ªque°_öfo
 *
ªque°_öfo
) {

101 
ENGINE
 * 
ígöe
 = (ENGINE*Ë
ªque°_öfo
->
u£r_d©a
;

103 
°d
::
°rög
 
js⁄_öfo
 = 
ígöe
->
	`gë_öfo_js⁄
();

104 
	`£nd
(
js⁄_öfo
, 
c⁄n
, 
ªque°_öfo
);

105 
	}
}

110 
ãm∂©e
 <
ty≥«me
 
ENGINE
>

111 *
	$evít_h™dÀr
(
mg_evít
 
evít
,

112 
mg_c⁄√˘i⁄
 *
c⁄n
,

113 c⁄° 
mg_ªque°_öfo
 *
ªque°_öfo
) {

114 *
¥o˚s£d
 = (*) "yes";

116 i‡(
evít
 =
MG_NEW_REQUEST
) {

117 i‡(
	`°rcmp
(
ªque°_öfo
->
uri
, "/ajax/getinfo") == 0) {

118 
ajax_£nd_mesßge
<
ENGINE
>(
c⁄n
, 
ªque°_öfo
);

120 
boﬁ
 
found
 = 
Ál£
;

121 
°d
::
ve˘‹
<
cu°om_ªque°_h™dÀr
 *>::
ôî©‹
 
ô
=
ªqh™dÀrs
.
	`begö
();

122 
ô
 !
ªqh™dÀrs
.
	`íd
(); ++it) {

123 
cu°om_ªque°_h™dÀr
 * 
rh
 = *
ô
;

124 i‡(
rh
->
	`ª•⁄ds_to
(
ªque°_öfo
->
uri
)) {

125 
°d
::
°rög
 
ª•⁄£
 = 
rh
->
	`h™dÀ
(
ªque°_öfo
->
uri
);

126 
	`£nd
(
ª•⁄£
, 
c⁄n
, 
ªque°_öfo
);

127 
found
 = 
åue
;

132 i‡(!
found
Ë
¥o˚s£d
 = 
NULL
;

135 
¥o˚s£d
 = 
NULL
;

138  
¥o˚s£d
;

139 
	}
}

142 
ãm∂©e
 <
ty≥«me
 
ENGINE
>

143 
	$°¨t_hâ∑dmö
(
ENGINE
 * 
ígöe
) {

144 
mg_c⁄ãxt
 *
˘x
;

146 
˘x
 = 
	`mg_°¨t
(&
evít_h™dÀr
<
ENGINE
>, (*)
ígöe
, 
›ti⁄s
);

147 
	`as£π
(
˘x
 !
NULL
);

148 
°d
::
cout
 << "Sèπed HTTPádmö sîvî. " << std::
ídl
;

149 
	}
}

	@httpadmin/plotter.hpp

31 #i‚de‡
DEF_GRAPHCHI_GNUPLOTTER


32 
	#DEF_GRAPHCHI_GNUPLOTTER


	)

34 
	~<c°dio
>

35 
	~<°dlib.h
>

36 
	~<°rög
>

38 
	~"gøphchi_basic_ö˛udes.hµ
"

40 
«me•a˚
 
	ggøphchi
 {

42 
size_t
 
	göôül_edges
 = 0;

45 
	g°d
::
°rög
 
∂Ÿdúe˘‹y
();

46 
	g°d
::
°rög
 
∂Ÿdúe˘‹y
() {

49 
öô_∂Ÿ
(
°d
::
°rög
 
∂Ÿ«me
);

50 
öô_∂Ÿ
(
°d
::
°rög
 
∂Ÿ«me
) {

51 
°d
::
°rög
 
d©™ame
 = 
∂Ÿdúe˘‹y
(Ë+ 
∂Ÿ«me
 + ".dat";

52 
FILE
 * 
	gdf
 = 
f›í
(
d©™ame
.
c_°r
(), "w");

53 
f˛o£
(
df
);

54 
	g°d
::
cout
 << "---------- Inôülized ------------" << 
°d
::
ídl
;

57 
	gãm∂©e
 <
ty≥«me
 
	gENGINE
>

58 
addvÆ
(
ENGINE
 * 
ígöe
, 
°d
::
°rög
 
∂Ÿ«me
, 
vÆ
) {

59 
	ggøphchi_c⁄ãxt
 &
	gc⁄ãxt
 = 
ígöe
->
gë_c⁄ãxt
();

60 
	g°d
::
°rög
 
d©™ame
 = 
∂Ÿdúe˘‹y
(Ë+ 
∂Ÿ«me
 + ".dat";

61 
FILE
 * 
	gdf
 = 
f›í
(
d©™ame
.
c_°r
(), "a");

62 
as£π
(
df
 !
NULL
);

63 
Ârötf
(
df
, "%l‡%lf\n", 
c⁄ãxt
.
ru¡ime
(), 
vÆ
);

64 
f˛o£
(
df
);

68 
døw∂Ÿ
(
°d
::
°rög
 
∂Ÿ«me
, 
size_t
 
lookback_£cs
);

69 
døw∂Ÿ
(
°d
::
°rög
 
∂Ÿ«me
, 
size_t
 
lookback_£cs
) {

70 
	g°d
::
°rög
 
∂Ÿfûe
 = 
∂Ÿdúe˘‹y
(Ë+ 
∂Ÿ«me
 + ".dat";

72 
	g°d
::
°rög°ªam
 
ss
;

73 
	gss
 << "python2.6 ";

74 
	gss
 << 
∂Ÿdúe˘‹y
(Ë+ "∂Ÿãr.py " + 
	g∂Ÿfûe
 + "Üastsecs ";

75 
	gss
 << 
	glookback_£cs
;

77 
	g°d
::
°rög
 
cmd
 = 
ss
.
°r
();

78 
log°ªam
(
LOG_DEBUG
Ë<< "Executög: " << 
	gcmd
 << 
	g°d
::
ídl
;

79 
sy°em
(
cmd
.
c_°r
());

82 
	gãm∂©e
 <
ty≥«me
 
	gENGINE
>

83 
öô_∂Ÿs
(
ENGINE
 * 
ígöe
) {

84 
öô_∂Ÿ
("edges");

85 
öô_∂Ÿ
("bufedges");

86 
öô_∂Ÿ
("updates");

87 
öô_∂Ÿ
("ingests");

88 
öô_∂Ÿ
("deltas");

90 
	göôül_edges
 = 
ígöe
->
num_edges_ß„
();

93 
	gœ°_upd©e_time
 = 0;

94 
size_t
 
	gœ°_edges
 = 0;

95 
size_t
 
	gœ°_upd©es
 = 0;

96 
size_t
 
	göge°ed_edges
 = 0;

99 
£t_öge°ed_edges
(
size_t
 
n
);

100 
£t_öge°ed_edges
(
size_t
 
n
) {

101 
	göge°ed_edges
 = 
n
;

104 
	gãm∂©e
 <
ty≥«me
 
	gENGINE
>

105 
upd©e_∂Ÿd©a
(
ENGINE
 * 
ígöe
) {

106 
addvÆ
(
ígöe
, "edges", (Îngöe->
num_edges_ß„
());

107 
addvÆ
(
ígöe
, "bu„dges", (Îngöe->
num_buf„ªd_edges
());

108 
	gπ
 = 
ígöe
->
gë_c⁄ãxt
().
ru¡ime
(Ë- 
œ°_upd©e_time
;

110 i‡(
	gœ°_upd©e_time
 > 0) {

111 
addvÆ
(
ígöe
, "öge°s", (
öge°ed_edges
 - 
œ°_edges
Ë/ 
π
);

112 
addvÆ
(
ígöe
, "upd©es", (ígöe->
num_upd©es
(Ë- 
œ°_upd©es
Ë/ 
π
);

113 
addvÆ
(
ígöe
, "dñès",Éngöe->
gë_c⁄ãxt
().
œ°_dñèsum
);

115 i‡(
	gœ°_upd©e_time
 == 0) {

116 
œ°_edges
 = 
öge°ed_edges
;

117 
	gœ°_upd©e_time
 = 
ígöe
->
gë_c⁄ãxt
().
ru¡ime
();

118 
	gœ°_upd©es
 = 
ígöe
->
num_upd©es
();

122 
døw∂Ÿs
();

123 
døw∂Ÿs
() {

124 
døw∂Ÿ
("edges", 1800);

125 
døw∂Ÿ
("bufedges", 1800);

126 
døw∂Ÿ
("updates", 300);

127 
døw∂Ÿ
("ingests", 500);

128 
døw∂Ÿ
("deltas", 7200);

	@io/stripedio.hpp

31 #i‚de‡
DEF_STRIPEDIO_HPP


32 
	#DEF_STRIPEDIO_HPP


	)

34 
	~<io°ªam
>

36 
	~<f˙é.h
>

37 
	~<uni°d.h
>

38 
	~<as£π.h
>

39 
	~<°döt.h
>

40 
	~<±hªad.h
>

41 
	~<î∫o.h
>

42 
	~<sys/mm™.h
>

45 
	~<ve˘‹
>

47 
	~"loggî/loggî.hµ
"

48 
	~"mërics/mërics.hµ
"

49 
	~"utû/synchr⁄ized_queue.hµ
"

50 
	~"utû/ioutû.hµ
"

51 
	~"utû/cmd›ts.hµ
"

53 
	#CACHED_SESSION_ID
 (-1)

	)

56 
«me•a˚
 
	ggøphchi
 {

58 
size_t
 
gë_fûesize
(
°d
::
°rög
 
fûíame
);

63 
	sio_des¸ùt‹
 {

64 
	g°d
::
°rög
 
fûíame
;

65 
	g°d
::
ve˘‹
<> 
ªaddescs
;

66 
	g°d
::
ve˘‹
<> 
wrôedescs
;

68 
	g°¨t_m∂ex
;

69 
boﬁ
 
	g›í
;

70 
boﬁ
 
	gcom¥es£d
;

73 
	smm≠_öfo
 {

74 * 
	g±r
;

75 
size_t
 
	gÀngth
;

76 
	gfûedesc
;

80 
	eBLOCK_ACTION
 { 
	gREAD
, 
	gWRITE
 };

83 
	sªfcou¡±r
 {

84 * 
	g±r
;

85 vﬁ©ûê
	gcou¡
;

86 
ªfcou¡±r
(* 
±r
, 
cou¡
) :Ötr(ptr), count(count) {}

90 
˛ass
 
	g°rùedio
;

92 
	siŸask
 {

93 
BLOCK_ACTION
 
	ga˘i⁄
;

94 
	gfd
;

95 
	g£ssi⁄
;

96 
ªfcou¡±r
 * 
	g±r
;

97 
size_t
 
	gÀngth
;

98 
size_t
 
	goff£t
;

99 
size_t
 
	g±roff£t
;

100 
boﬁ
 
	g‰ì_a·î
;

101 
°rùedio
 * 
	giomgr
;

102 
boﬁ
 
	gcom¥es£d
;

103 
boﬁ
 
	g˛o£fd
;

104 vﬁ©ûê* 
	gd⁄ïå
;

106 
iŸask
(Ë: 
a˘i⁄
(
READ
), 
fd
(0), 
£ssi⁄
(0), 
±r
(
NULL
), 
Àngth
(0), 
off£t
(0), 
±roff£t
(0), 
‰ì_a·î
(
Ál£
), 
iomgr
(NULL), 
com¥es£d
(Ál£), 
˛o£fd
(Ál£), 
d⁄ïå
(NULL) {}

107 
iŸask
(
°rùedio
 * 
iomgr
, 
BLOCK_ACTION
 
a˘
, 
fd
, 
£ssi⁄
, 
ªfcou¡±r
 * 
±r
, 
size_t
 
Àngth
, size_à
off£t
, size_à
±roff£t
, 
boﬁ
 
‰ì_a·î
, boﬁ 
com¥es£d
, boﬁ 
˛o£fd
=
Ál£
) :

108 
a˘i⁄
(
a˘
), 
fd
(fd), 
£ssi⁄
(£ssi⁄), 
±r
’å),
Àngth
÷ígth), 
off£t
(off£t), 
±roff£t
’åoff£t), 
‰ì_a·î
(‰ì_a·î), 
iomgr
(iomgr),
com¥es£d
(com¥es£d), 
˛o£fd
(closefd) {

109 i‡(
	g˛o£fd
Ë
as£π
(
‰ì_a·î
);

110 
	gd⁄ïå
 = 
NULL
;

114 
	sthröfo
 {

115 
	gsynchr⁄ized_queue
<
	giŸask
> * 
	gªadqueue
;

116 
	gsynchr⁄ized_queue
<
	giŸask
> * 
	gcommôqueue
;

117 
	gsynchr⁄ized_queue
<
	giŸask
> * 
	g¥ioqueue
;

119 
boﬁ
 
	gru¬ög
;

120 
mërics
 * 
	gm
;

121 vﬁ©ûê
	g≥ndög_wrôes
;

122 vﬁ©ûê
	g≥ndög_ªads
;

123 
	gm∂ex
;

127 * 
io_thªad_lo›
(* 
_öfo
);

129 
	s°rùe_chunk
 {

130 
	gm∂ex_thªad
;

131 
size_t
 
	goff£t
;

132 
size_t
 
	gÀn
;

133 
°rùe_chunk
(
m∂ex_thªad
, 
size_t
 
off£t
, size_à
Àn
) : mplex_thread(mplex_thread), offset(offset),Üen(len) {}

136 
	sˇched_block
 {

137 
size_t
 
	gÀn
;

138 * 
	gd©a
;

139 
boﬁ
 
	gwas_com¥es£d
;

141 
ˇched_block
(
size_t
 
Àn
, * 
d©a
, 
boﬁ
 
was_com¥es£d
) :Üen(len), data(data), was_compressed(was_compressed) {}

143 ~
ˇched_block
() {

144 
‰ì
(
d©a
);

145 
	gd©a
 = 
NULL
;

153 ˛as†
	cblock_ˇche
 {

154 
size_t
 
	gˇche_budgë_byãs
;

155 
size_t
 
	gˇche_size
;

156 
muãx
 
	glock
;

157 
boﬁ
 
	gfuŒ
;

158 
	g°d
::
m≠
<
°d
::
°rög
, 
	gˇched_block
 *> 
	gˇchem≠
;

160 
size_t
 
	ghôs
, 
	gmis£s
;

162 
	gpublic
:

164 
block_ˇche
(
size_t
 
ˇche_budgë_byãs
Ë: cache_budgë_byãs(ˇche_budgë_byãs), 
ˇche_size
(0), 
fuŒ
(
Ál£
) {

165 
	ghôs
 = 
mis£s
 = 0;

168 ~
block_ˇche
() {

169 i‡(
	ghôs
 + 
	gmis£s
 > 0) {

170 
log°ªam
(
LOG_INFO
Ë<< "Cachê°©s: hôs=" << 
	ghôs
 << " mis£s=" << 
	gmis£s
 << 
	g°d
::
ídl
;

171 
log°ªam
(
LOG_INFO
Ë<< " -- i¿tŸÆ had " << (
	gˇche_size
 / 1024 / 1024Ë<< " MB i¿ˇche." << 
	g°d
::
ídl
;

173 
	g°d
::
m≠
<
°d
::
°rög
, 
	gˇched_block
 *>::
ôî©‹
 
ô
 = 
ˇchem≠
.
begö
();

174 ; 
	gô
 !
ˇchem≠
.
íd
(); ++it) {

175 
dñëe
 
	gô
->
	g£c⁄d
;

181 
boﬁ
 
c⁄sidî_ˇchög
(
°d
::
°rög
 
fûíame
, * 
d©a
, 
size_t
 
Àn
, boﬁ 
was_com¥ess£d
) {

182 
boﬁ
 
	gdid_ˇche
 = 
Ál£
;

183 i‡(!
	gfuŒ
 && 
	gÀn
 + 
	gˇche_size
 <
ˇche_budgë_byãs
) {

184 
lock
.lock();

185 i‡(
	gÀn
 + 
	gˇche_size
 <
ˇche_budgë_byãs
) {

186 
ˇche_size
 +
Àn
;

187 
	gdid_ˇche
 = 
åue
;

188 i‡(
	gˇchem≠
.
size
() % 40 == 0) {

189 
log°ªam
(
LOG_DEBUG
Ë<< "Cachêsize: " << 
ˇche_size
 << " / " << 
ˇche_budgë_byãs
 << 
°d
::
ídl
;

191 
	gˇchem≠
.
ö£π
(
°d
::
∑ú
<°d::
°rög
, 
ˇched_block
*>(
fûíame
, 
√w
 cached_block(
Àn
, 
d©a
, 
was_com¥ess£d
)));

193 i‡(
	gˇche_size
 > 
	gˇche_budgë_byãs
) {

194 
	gfuŒ
 = 
åue
;

196 
	glock
.
u∆ock
();

198  
	gdid_ˇche
;

201 * 
gë_ˇched
(
°d
::
°rög
 
fûíame
) {

202 
boﬁ
 
acquúed_muãx
 = 
Ál£
;

203 i‡(!
	gfuŒ
) {

204 
	gacquúed_muãx
 = 
åue
;

205 
	glock
.
lock
();

208 * 
	gªt
 = 
NULL
;

209 
	g°d
::
m≠
<
°d
::
°rög
, 
	gˇched_block
 *>::
ôî©‹
 
lookup
 = 
ˇchem≠
.
föd
(
fûíame
);

210 i‡(
	glookup
 !
ˇchem≠
.
íd
()) {

211 
ªt
 = 
lookup
->
£c⁄d
->
d©a
;

212 
	ghôs
++;

214 
	gmis£s
++;

217 i‡(
	gacquúed_muãx
) {

218 
	glock
.
u∆ock
();

220  
	gªt
;

222 
‰õnd
 
˛ass
 
	g°rùedio
;

226 ˛as†
	c°rùedio
 {

228 
	g°d
::
ve˘‹
<
io_des¸ùt‹
 *> 
£ssi⁄s
;

229 
muãx
 
	gmlock
;

230 
	g°rùesize
;

231 
	gmu…ùÀx
;

232 
	g°d
::
°rög
 
mu…ùÀx_roŸ
;

234 
	gsynchr⁄ized_queue
<
	giŸask
> * 
	gm∂ex_ªadèsks
;

235 
	gsynchr⁄ized_queue
<
	giŸask
> * 
	gm∂ex_wrôëasks
;

236 
	gsynchr⁄ized_queue
<
	giŸask
> * 
	gm∂ex_¥iŸasks
;

238 
	g°d
::
ve˘‹
< 
±hªad_t
 > 
thªads
;

239 
	g°d
::
ve˘‹
< 
thröfo
 * > 
thªad_öfos
;

240 
	gmërics
 &
	gm
;

242 
	gniŸhªads
;

244 
block_ˇche
 
	gˇche
;

247 
	g¥iv©e
:

249 
muãx
 
mm≠lock
;

250 
	g°d
::
m≠
<
°d
::
°rög
, 
	gmm≠_öfo
> 
	gmm≠ed
;

252 
	gpublic
:

253 
°rùedio
–
mërics
 &
_m
Ë: 
m
(_m), 
ˇche
(0) {

254 
	g°rùesize
 = 
gë_›ti⁄_öt
("io.stripesize", 1024 * 1024 / 2);

256 
	gmu…ùÀx
 = 
gë_›ti⁄_öt
("multiplex", 1);

257 i‡(
	gmu…ùÀx
>1) {

258 
	gmu…ùÀx_roŸ
 = 
gë_›ti⁄_°rög
("multiplex_root", "<not-set>");

259 
log°ªam
(
LOG_FATAL
Ë<< "Mu…ùÀxög fûe†i†cuºíéyÇŸ suµ‹ãd! Lëákyrﬁa@cs.cmu.edu know i‡youÇìdÅhi†suµ‹à:)." << 
	g°d
::
ídl
;

260 
as£π
(
mu…ùÀx
 == 1);

262 
	gmu…ùÀx_roŸ
 = "";

263 
	g°rùesize
 = 1024*1024*1024;

265 
	gm
.
£t
("°rùesize", (
size_t
)
°rùesize
);

268 
	gniŸhªads
 = 
gë_›ti⁄_öt
("niothreads", 1);

269 
	gm
.
£t
("niŸhªads", (
size_t
)
niŸhªads
);

271 
log°ªam
(
LOG_DEBUG
Ë<< "Sèπ io-m™agî wôh " << 
	gniŸhªads
 << "Åhªads." << 
	g°d
::
ídl
;

274 
	gm∂ex_ªadèsks
 = 
√w
 
synchr⁄ized_queue
<
iŸask
>[
mu…ùÀx
 * 
niŸhªads
];

275 
	gm∂ex_wrôëasks
 = 
√w
 
synchr⁄ized_queue
<
iŸask
>[
mu…ùÀx
 * 
niŸhªads
];

276 
	gm∂ex_¥iŸasks
 = 
√w
 
synchr⁄ized_queue
<
iŸask
>[
mu…ùÀx
 * 
niŸhªads
];

278 
	gk
 = 0;

279 
	gi
=0; i < 
	gmu…ùÀx
; i++) {

280 
	gj
=0; j < 
	gniŸhªads
; j++) {

281 
thröfo
 * 
	g˘hªadöfo
 = 
√w
Åhrinfo();

282 
	g˘hªadöfo
->
	gcommôqueue
 = &
m∂ex_wrôëasks
[
k
];

283 
	g˘hªadöfo
->
	gªadqueue
 = &
m∂ex_ªadèsks
[
k
];

284 
	g˘hªadöfo
->
	g¥ioqueue
 = &
m∂ex_¥iŸasks
[
k
];

285 
	g˘hªadöfo
->
	gru¬ög
 = 
åue
;

286 
	g˘hªadöfo
->
	g≥ndög_wrôes
 = 0;

287 
	g˘hªadöfo
->
	g≥ndög_ªads
 = 0;

288 
	g˘hªadöfo
->
	gm∂ex
 = 
i
;

289 
	g˘hªadöfo
->
	gm
 = &
m
;

290 
	gthªad_öfos
.
push_back
(
˘hªadöfo
);

292 
±hªad_t
 
	giŸhªad
;

293 
	gªt
 = 
±hªad_¸óã
(&
iŸhªad
, 
NULL
, 
io_thªad_lo›
, 
˘hªadöfo
);

294 
	gthªads
.
push_back
(
iŸhªad
);

295 
as£π
(
ªt
>=0);

296 
	gk
++;

301 ~
°rùedio
() {

302 
	gm∂ex
 = (Ë
thªad_öfos
.
size
();

304 
	gi
=0; i<
	gm∂ex
; i++) {

305 
	gthªad_öfos
[
i
]->
	gru¬ög
=
Ál£
;

307 
size_t
 
	g¡hªads
 = 
thªads
.
size
();

308 
	gi
=0; i<
	g¡hªads
; i++) {

309 
±hªad_joö
(
thªads
[
i
], 
NULL
);

311 
	gi
=0; i<
	gm∂ex
; i++) {

312 
dñëe
 
	gthªad_öfos
[
i
];

315 
	gj
=0; j<()
	g£ssi⁄s
.
size
(); j++) {

316 i‡(
	g£ssi⁄s
[
j
] !
NULL
) {

317 
˛o£_£ssi⁄
(
j
);

318 
dñëe
 
	g£ssi⁄s
[
j
];

319 
	g£ssi⁄s
[
j
] = 
NULL
;

323 
	g°d
::
m≠
<
°d
::
°rög
, 
	gmm≠_öfo
>::
ôî©‹
 
mmô
 = 
mm≠ed
.
begö
();

324 ; 
	gmmô
 !
mm≠ed
.
íd
(); ++mmit) {

325 
mm≠_öfo
 
	gmöfo
 = 
mmô
->
£c⁄d
;

326 
munm≠
((*)
möfo
.
±r
, möfo.
Àngth
);

327 
˛o£
(
möfo
.
fûedesc
);

329 
	gmm≠ed
.
˛ór
();

332 
£t_ˇche_budgë
(
size_t
 
c
) {

333 
	gˇche
.
	gˇche_budgë_byãs
 = 
c
;

334 
	gˇche
.
	gfuŒ
 = 
Ál£
;

337 
	gblock_ˇche
 & 
gë_block_ˇche
() {

338  
	gˇche
;

344 
commô_ˇched_blocks
() {

345 
	g°d
::
m≠
<
°d
::
°rög
, 
	gˇched_block
 *>::
ôî©‹
 
ô
 = 
ˇche
.
ˇchem≠
.
begö
();

346 ; 
	gô
 !
ˇche
.
ˇchem≠
.
íd
(); ++it) {

347 
	g°d
::
°rög
 
‚ame
 = 
ô
->
fú°
;

348 
ˇched_block
 * 
	gblock
 = 
ô
->
£c⁄d
;

350 
	g£ssi⁄
 = 
›í_£ssi⁄
(
‚ame
, 
Ál£
, 
block
->
was_com¥es£d
);

351 
pwrôó_now
(
£ssi⁄
, 
block
->
d©a
, block->
Àn
, 0);

352 
˛o£_£ssi⁄
(
£ssi⁄
);

357 
boﬁ
 
mu…ùÀxed
() {

358  
	gmu…ùÀx
>1;

361 
¥öt_£ssi⁄
(
£ssi⁄
) {

362 
	gi
=0; i<
	gmu…ùÀx
; i++) {

363 
	g°d
::
cout
 << "mu…ùÀx: " << 
mu…ùÀx
 << 
°d
::
ídl
;

364 
	g°d
::
cout
 << "Ród desc: " << 
£ssi⁄s
[
£ssi⁄
]->
ªaddescs
[
i
] << 
°d
::
ídl
;

367 
	gi
=0; i<()
	g£ssi⁄s
[
£ssi⁄
]->
	gwrôedescs
.
size
(); i++) {

368 
	g°d
::
cout
 << "mu…ùÀx: " << 
mu…ùÀx
 << 
°d
::
ídl
;

369 
	g°d
::
cout
 << "Ród desc: " << 
£ssi⁄s
[
£ssi⁄
]->
wrôedescs
[
i
] << 
°d
::
ídl
;

376 
hash
(
°d
::
°rög
 
fûíame
) {

377 c⁄° * 
c°r
 = 
fûíame
.
c_°r
();

378 
	ghash
 = 1;

379 
	gl
 = (Ë
°æí
(
c°r
);

380 
	gi
=0; i<
	gl
; i++) {

381 
	ghash
 = 31*
hash
 + 
c°r
[
i
];

383  
	g°d
::
abs
(
hash
);

386 
›í_£ssi⁄
(
°d
::
°rög
 
fûíame
, 
boﬁ
 
ªad⁄ly
=
Ál£
, boﬁ 
com¥es£d
=false) {

387 
mlock
.
lock
();

389 
	g£ssi⁄_id
 = (Ë
£ssi⁄s
.
size
();

390 
io_des¸ùt‹
 * 
	giodesc
 = 
√w
 io_descriptor();

391 
	giodesc
->
	g›í
 = 
åue
;

392 
	giodesc
->
	gcom¥es£d
 = 
com¥es£d
;

393 
	giodesc
->
	gfûíame
 = 
fûíame
;

394 
	giodesc
->
	g°¨t_m∂ex
 = 
hash
(
fûíame
Ë% 
mu…ùÀx
;

395 
	g£ssi⁄s
.
push_back
(
iodesc
);

396 
	gmlock
.
u∆ock
();

400 
	gi
=0; i<
	gmu…ùÀx
; i++) {

401 
	g°d
::
°rög
 
‚ame
 = 
mu…ùÀx¥efix
(
i
Ë+ 
fûíame
;

402 
	gj
=0; j<
	gniŸhªads
+(
	gmu…ùÀx
 == 1 ? 1 : 0); j++) {

403 
	grddesc
 = 
›í
(
‚ame
.
c_°r
(), (
ªad⁄ly
 ? 
O_RDONLY
 : 
O_RDWR
));

404 i‡(
	grddesc
 < 0Ë
log°ªam
(
LOG_ERROR
Ë<< "CouldÇŸ o≥n: " << 
	g‚ame
 << " sessi⁄: " << 
	g£ssi⁄_id


405 << "Éº‹: " << 
°ªº‹
(
î∫o
Ë<< 
	g°d
::
ídl
;

406 
as£π
(
rddesc
>=0);

407 
	giodesc
->
	gªaddescs
.
push_back
(
rddesc
);

408 #ifde‡
F_NOCACHE


409 i‡(!
	gªad⁄ly
)

410 
f˙é
(
rddesc
, 
F_NOCACHE
, 1);

412 i‡(!
	gªad⁄ly
) {

413 
	gwrdesc
 = 
rddesc
;

415 i‡(
	gwrdesc
 < 0Ë
log°ªam
(
LOG_ERROR
Ë<< "CouldÇŸ o≥¿f‹ wrôög: " << 
	g‚ame
 << " sessi⁄: " << 
	g£ssi⁄_id


416 << "Éº‹: " << 
°ªº‹
(
î∫o
Ë<< 
	g°d
::
ídl
;

417 
as£π
(
wrdesc
>=0);

418 #ifde‡
F_NOCACHE


419 
f˙é
(
wrdesc
, 
F_NOCACHE
, 1);

422 
	giodesc
->
	gwrôedescs
.
push_back
(
wrdesc
);

426 
	giodesc
->
	gfûíame
 = 
fûíame
;

427  
	g£ssi⁄_id
;

430 
˛o£_£ssi⁄
(
£ssi⁄
) {

431 
	gmlock
.
lock
();

435 
boﬁ
 
	gwas›í
;

436 
io_des¸ùt‹
 * 
	giodesc
 = 
£ssi⁄s
[
£ssi⁄
];

437 
	gwas›í
 = 
iodesc
->
›í
;

438 
	giodesc
->
	g›í
 = 
Ál£
;

439 
	gmlock
.
u∆ock
();

440 i‡(
	gwas›í
) {

441 
	g°d
::
ve˘‹
<>::
ôî©‹
 
ô
=
iodesc
->
ªaddescs
.
begö
(); 
	gô
!=iodesc->ªaddescs.
íd
(); ++it) {

442 
˛o£
(*
ô
);

447 
fú°_∑ss_föished
() {

449 
	gˇche
.
	gfuŒ
 = 
åue
;

452 
	g°d
::
°rög
 & 
gë_£ssi⁄_fûíame
(
£ssi⁄
) {

453  
£ssi⁄s
[
£ssi⁄
]->
fûíame
;

456 
m∂ex_f‹_off£t
(
£ssi⁄
, 
size_t
 
off
) {

457  ((Ë(
	goff
 / 
	g°rùesize
Ë+ 
	g£ssi⁄s
[
£ssi⁄
]->
	g°¨t_m∂ex
Ë% 
	gmu…ùÀx
;

461 
	g°d
::
ve˘‹
< 
°rùe_chunk
 > 
°rùe_off£ts
(
£ssi⁄
, 
size_t
 
nbyãs
, size_à
off
) {

462 
size_t
 
	gíd
 = 
off
+
nbyãs
;

463 
size_t
 
	gidx
 = 
off
;

464 
size_t
 
	gbufoff
 = 0;

465 
	g°d
::
ve˘‹
<
°rùe_chunk
> 
°rùñi°
;

466 
	gidx
<
	gíd
) {

467 
size_t
 
	gblockoff
 = 
idx
 % 
°rùesize
;

468 
size_t
 
	gblockÀn
 = 
°d
::
mö
(
°rùesize
-
blockoff
, 
íd
-
idx
);

470 
	gm∂ex_thªad
 = (Ë
m∂ex_f‹_off£t
(
£ssi⁄
, 
idx
Ë* 
	gniŸhªads
 + (Ë(
øndom
() %Çiothreads);

471 
	g°rùñi°
.
push_back
(
°rùe_chunk
(
m∂ex_thªad
, 
bufoff
, 
blockÀn
));

473 
	gbufoff
 +
blockÀn
;

474 
	gidx
 +
blockÀn
;

476  
	g°rùñi°
;

479 
	gãm∂©e
 <
ty≥«me
 
	gT
>

480 
¥óda_async
(
£ssi⁄
, 
T
 * 
tbuf
, 
size_t
 
nbyãs
, size_à
off
, vﬁ©ûê* 
d⁄ïå
 = 
NULL
) {

481 
°d
::
ve˘‹
<
°rùe_chunk
> 
°rùñi°
 = 
°rùe_off£ts
(
£ssi⁄
, 
nbyãs
, 
off
);

482 i‡(
com¥es£d_£ssi⁄
(
£ssi⁄
)) {

483 
as£π
(
°rùñi°
.
size
() == 1);

484 
as£π
(
off
 == 0);

486 
ªfcou¡±r
 * 
	gªÂå
 = 
√w
Ñefcou¡±r((*)
tbuf
, ()
°rùñi°
.
size
());

487 
	gi
=0; i<()
	g°rùñi°
.
size
(); i++) {

488 
°rùe_chunk
 
	gchunk
 = 
°rùñi°
[
i
];

489 
__sync_add_™d_„tch
(&
thªad_öfos
[
chunk
.
m∂ex_thªad
]->
≥ndög_ªads
, 1);

490 
iŸask
 
	gèsk
 = iŸask(
this
, 
READ
, 
£ssi⁄s
[
£ssi⁄
]->
ªaddescs
[
chunk
.
m∂ex_thªad
],

491 
£ssi⁄
,

492 
ªÂå
, 
chunk
.
Àn
, chunk.
off£t
+
off
, chunk.off£t, 
Ál£
,

493 
com¥es£d_£ssi⁄
(
£ssi⁄
));

494 
	gèsk
.
	gd⁄ïå
 = 
d⁄ïå
;

495 
	gm∂ex_ªadèsks
[
chunk
.
m∂ex_thªad
].
push
(
èsk
);

503 
boﬁ
 
com¥es£d_£ssi⁄
(
£ssi⁄
) {

504  
	g£ssi⁄s
[
£ssi⁄
]->
	gcom¥es£d
;

511 
	gãm∂©e
 <
ty≥«me
 
	gT
>

512 
pwrôó_async
(
£ssi⁄
, 
T
 * 
tbuf
, 
size_t
 
nbyãs
, size_à
off
, 
boﬁ
 
‰ì_a·î
, boﬁ 
˛o£_fd
=
Ál£
) {

513 
°d
::
ve˘‹
<
°rùe_chunk
> 
°rùñi°
 = 
°rùe_off£ts
(
£ssi⁄
, 
nbyãs
, 
off
);

514 
ªfcou¡±r
 * 
	gªÂå
 = 
√w
Ñefcou¡±r((*)
tbuf
, (Ë
°rùñi°
.
size
());

515 i‡(
com¥es£d_£ssi⁄
(
£ssi⁄
)) {

516 
as£π
(
°rùñi°
.
size
() == 1);

517 
as£π
(
off
 == 0);

519 
	gi
=0; i<()
	g°rùñi°
.
size
(); i++) {

520 
°rùe_chunk
 
	gchunk
 = 
°rùñi°
[
i
];

521 
__sync_add_™d_„tch
(&
thªad_öfos
[
chunk
.
m∂ex_thªad
]->
≥ndög_wrôes
, 1);

522 
	gm∂ex_wrôëasks
[
chunk
.
m∂ex_thªad
].
push
(
iŸask
(
this
, 
WRITE
, 
£ssi⁄s
[
£ssi⁄
]->
wrôedescs
[chunk.mplex_thread], session,

523 
ªÂå
, 
chunk
.
Àn
, chunk.
off£t
+
off
, chunk.off£t, 
‰ì_a·î
, 
com¥es£d_£ssi⁄
(
£ssi⁄
),

524 
˛o£_fd
));

528 
	gãm∂©e
 <
ty≥«me
 
	gT
>

529 
¥óda_now
(
£ssi⁄
, 
T
 * 
tbuf
, 
size_t
 
nbyãs
, size_à
off
, 
boﬁ
 
dupfd
=
Ál£
) {

530 
mërics_íåy
 
me
 = 
m
.
°¨t_time
();

531 i‡(
com¥es£d_£ssi⁄
(
£ssi⁄
)) {

533 
as£π
(
off
 == 0);

534 
ªad_com¥es£d
(
£ssi⁄s
[
£ssi⁄
]->
ªaddescs
[0], 
tbuf
, 
nbyãs
);

535 
	gm
.
°›_time
(
me
, "¥óda_now", 
Ál£
);

539 i‡(
	gmu…ùÀx
 > 1) {

540 
	g°d
::
ve˘‹
<
°rùe_chunk
> 
°rùñi°
 = 
°rùe_off£ts
(
£ssi⁄
, 
nbyãs
, 
off
);

541 
size_t
 
	gcheckÀn
=0;

542 
ªfcou¡±r
 * 
	gªÂå
 = 
√w
Ñefcou¡±r((*)
tbuf
, (Ë
°rùñi°
.
size
());

543 
	gªÂå
->
	gcou¡
++;

544 
	gi
=0; i < ()
	g°rùñi°
.
size
(); i++) {

545 
°rùe_chunk
 
	gchunk
 = 
°rùñi°
[
i
];

546 
__sync_add_™d_„tch
(&
thªad_öfos
[
chunk
.
m∂ex_thªad
]->
≥ndög_ªads
, 1);

549 
	gm∂ex_¥iŸasks
[
chunk
.
m∂ex_thªad
].
push
(
iŸask
(
this
, 
READ
, 
£ssi⁄s
[
£ssi⁄
]->
ªaddescs
[chunk.mplex_thread], session,

550 
ªÂå
, 
chunk
.
Àn
, chunk.
off£t
+
off
, chunk.off£t, 
Ál£
,

551 
Ál£
));

552 
	gcheckÀn
 +
chunk
.
Àn
;

554 
as£π
(
checkÀn
 =
nbyãs
);

557 
	gªÂå
->
	gcou¡
>1) {

558 
u¶ìp
(5000);

560 
dñëe
 
	gªÂå
;

562 i‡(!
	gdupfd
) {

563 
¥óda
(
£ssi⁄s
[
£ssi⁄
]->
ªaddescs
[
thªads
.
size
()], 
tbuf
, 
nbyãs
, 
off
);

565 
	gfûedesc
 = 
dup
(
£ssi⁄s
[
£ssi⁄
]->
ªaddescs
[
thªads
.
size
()]);

566 
¥óda
(
fûedesc
, 
tbuf
, 
nbyãs
, 
off
);

567 
˛o£
(
fûedesc
);

571 
	gm
.
°›_time
(
me
, "¥óda_now", 
Ál£
);

574 
	gãm∂©e
 <
ty≥«me
 
	gT
>

575 
pwrôó_now
(
£ssi⁄
, 
T
 * 
tbuf
, 
size_t
 
nbyãs
, size_à
off
) {

576 
mërics_íåy
 
	gme
 = 
m
.
°¨t_time
();

578 i‡(
com¥es£d_£ssi⁄
(
£ssi⁄
)) {

580 
as£π
(
off
 == 0);

581 
wrôe_com¥es£d
(
£ssi⁄s
[
£ssi⁄
]->
wrôedescs
[0], 
tbuf
, 
nbyãs
);

582 
	gm
.
°›_time
(
me
, "pwrôó_now", 
Ál£
);

586 
	g°d
::
ve˘‹
<
°rùe_chunk
> 
°rùñi°
 = 
°rùe_off£ts
(
£ssi⁄
, 
nbyãs
, 
off
);

587 
size_t
 
	gcheckÀn
=0;

589 
	gi
=0; i<()
	g°rùñi°
.
size
(); i++) {

590 
°rùe_chunk
 
	gchunk
 = 
°rùñi°
[
i
];

591 
pwrôó
(
£ssi⁄s
[
£ssi⁄
]->
wrôedescs
[
chunk
.
m∂ex_thªad
], (*)
tbuf
+chunk.
off£t
, chunk.
Àn
, chunk.off£t+
off
);

592 
	gcheckÀn
 +
chunk
.
Àn
;

594 
as£π
(
checkÀn
 =
nbyãs
);

595 
	gm
.
°›_time
(
me
, "pwrôó_now", 
Ál£
);

606 
	gãm∂©e
 <
ty≥«me
 
	gT
>

607 
m™aged_pwrôó_async
(
£ssi⁄
, 
T
 ** 
tbuf
, 
size_t
 
nbyãs
, size_à
off
, 
boﬁ
 
‰ì_a·î
, boﬁ 
˛o£_fd
=
Ál£
) {

608 
pwrôó_async
(
£ssi⁄
, *
tbuf
, 
nbyãs
, 
off
, 
‰ì_a·î
, 
˛o£_fd
);

611 
	gãm∂©e
 <
ty≥«me
 
	gT
>

612 
m™aged_¥óda_now
(
£ssi⁄
, 
T
 ** 
tbuf
, 
size_t
 
nbyãs
, size_à
off
) {

613 
¥óda_now
(
£ssi⁄
, *
tbuf
, 
nbyãs
, 
off
);

616 
	gãm∂©e
 <
ty≥«me
 
	gT
>

617 
m™aged_pwrôó_now
(
£ssi⁄
, 
T
 ** 
tbuf
, 
size_t
 
nbyãs
, size_à
off
) {

618 
pwrôó_now
(
£ssi⁄
, *
tbuf
, 
nbyãs
, 
off
);

621 
	gãm∂©e
<
ty≥«me
 
	gT
>

622 
m™aged_mÆloc
(
£ssi⁄
, 
T
 ** 
tbuf
, 
size_t
 
nbyãs
, size_à
noff
) {

623 *
	gtbuf
 = (
T
*Ë
mÆloc
(
nbyãs
);

629 
	gãm∂©e
 <
ty≥«me
 
	gT
>

630 
m™aged_¥óda_async
(
£ssi⁄
, 
T
 ** 
tbuf
, 
size_t
 
nbyãs
, size_à
off
, vﬁ©ûê* 
d⁄ïå
 = 
NULL
) {

631 
¥óda_async
(
£ssi⁄
, *
tbuf
, 
nbyãs
, 
off
, 
d⁄ïå
);

634 
	gãm∂©e
 <
ty≥«me
 
	gT
>

635 
m™aged_ªÀa£
(
£ssi⁄
, 
T
 ** 
±r
) {

636 
as£π
(*
±r
 !
NULL
);

637 
‰ì
(*
±r
);

638 *
	g±r
 = 
NULL
;

642 
åunˇã
(
£ssi⁄
, 
size_t
 
nbyãs
) {

643 
as£π
(
mu…ùÀx
 <= 1);

644 
	g°©
 = 
·runˇã
(
£ssi⁄s
[
£ssi⁄
]->
wrôedescs
[0], 
nbyãs
);

645 i‡(
	g°©
 != 0) {

646 
log°ªam
(
LOG_ERROR
Ë<< "CouldÇŸÅrunˇã " << 
£ssi⁄s
[
£ssi⁄
]->
fûíame
 <<

647 "Éº‹: " << 
°ªº‹
(
î∫o
Ë<< 
°d
::
ídl
;

648 
as£π
(
Ál£
);

652 
waô_f‹_ªads
() {

653 
mërics_íåy
 
	gme
 = 
m
.
°¨t_time
();

654 
	glo›s
 = 0;

655 
	gm∂ex
 = (Ë
thªad_öfos
.
size
();

656 
	gi
=0; i<
	gm∂ex
; i++) {

657 
	gthªad_öfos
[
i
]->
	g≥ndög_ªads
 > 0) {

658 
u¶ìp
(10000);

659 
	glo›s
++;

662 
	gm
.
°›_time
(
me
, "°rùedio_waô_f‹_ªads", 
Ál£
);

665 
waô_f‹_wrôes
() {

666 
mërics_íåy
 
	gme
 = 
m
.
°¨t_time
();

667 
	gm∂ex
 = (Ë
thªad_öfos
.
size
();

668 
	gi
=0; i<
	gm∂ex
; i++) {

669 
	gthªad_öfos
[
i
]->
	g≥ndög_wrôes
>0) {

670 
u¶ìp
(10000);

673 
	gm
.
°›_time
(
me
, "°rùedio_waô_f‹_wrôes", 
Ál£
);

677 
	g°d
::
°rög
 
mu…ùÀx¥efix
(
°rùe
) {

678 i‡(
mu…ùÀx
 > 1) {

679 
m°r
[255];

680 
•rötf
(
m°r
, "%d/", 1+
°rùe
%
mu…ùÀx
);

681  
	gmu…ùÀx_roŸ
 + 
	g°d
::
°rög
(
m°r
);

685 
	g°d
::
°rög
 
mu…ùÀx¥efix_øndom
() {

686  
mu…ùÀx¥efix
(()
øndom
(Ë% 
mu…ùÀx
);

693 
	gpublic
:

694 * 
gë_mm≠ed_fûe
(
°d
::
°rög
 &
fûíame
, 
boﬁ
 
wrôe
) {

695 
	g°d
::
°rög
 
ˇchekey
 = (
wrôe
 ? 
fûíame
 + "?w" : filename);

696 * 
	g±r
 = 
NULL
;

697 
	gmm≠lock
.
lock
();

699 i‡(
	gmm≠ed
.
föd
(
ˇchekey
Ë=
mm≠ed
.
íd
()) {

700 
log°ªam
(
LOG_DEBUG
Ë<< "Mm≠: " << 
fûíame
 << 
°d
::
ídl
;

702 
size_t
 
	gmm≠_Àngth
 = 
gë_fûesize
(
fûíame
);

703 
	gfûedesc
 = 
›í
(
fûíame
.
c_°r
(), (
wrôe
 ? 
O_RDWR
 : 
O_RDONLY
));

704 
	g±r
 = 
mm≠
(
NULL
, 
mm≠_Àngth
, (
wrôe
 ? 
PROT_READ
 | 
PROT_WRITE
 : PROT_READ), 
MAP_SHARED
, 
fûedesc
, 0);

705 i‡(!
	g±r
) {

706 
log°ªam
(
LOG_FATAL
Ë<< "CouldÇŸ mm≠ " << 
	gfûíame
 << 
	g°d
::
ídl
;

708 
as£π
(
±r
);

709 
mm≠_öfo
 
	gmöfo
;

710 
	gmöfo
.
	g±r
 = 
±r
;

711 
	gmöfo
.
	gÀngth
 = 
mm≠_Àngth
;

712 
	gmöfo
.
	gfûedesc
 = 
fûedesc
;

713 
	gmm≠ed
[
ˇchekey
] = 
möfo
;

715 
	g±r
 = 
mm≠ed
[
ˇchekey
].
±r
;

717 
	gmm≠lock
.
u∆ock
();

718  
	g±r
;

724 * 
	$io_thªad_lo›
(* 
_öfo
) {

725 
iŸask
 
èsk
;

726 
thröfo
 * 
öfo
 = (thröfo*)
_öfo
;

727 
¡asks
 = 0;

729 
öfo
->
ru¬ög
) {

730 
boﬁ
 
suc˚ss
;

731 i‡(
öfo
->
≥ndög_ªads
>0) {

732 
suc˚ss
 = 
öfo
->
¥ioqueue
->
	`ß„p›
(&
èsk
);

733 i‡(!
suc˚ss
) {

734 
suc˚ss
 = 
öfo
->
ªadqueue
->
	`ß„p›
(&
èsk
);

737 
suc˚ss
 = 
öfo
->
commôqueue
->
	`ß„p›
(&
èsk
);

739 i‡(
suc˚ss
) {

740 ++
¡asks
;

741 i‡(
èsk
.
a˘i⁄
 =
WRITE
) {

742 
mërics_íåy
 
me
 = 
öfo
->
m
->
	`°¨t_time
();

744 i‡(
èsk
.
com¥es£d
) {

745 
	`as£π
(
èsk
.
off£t
 == 0);

746 
	`wrôe_com¥es£d
(
èsk
.
fd
,Åask.
±r
->±r,Åask.
Àngth
);

748 
	`pwrôó
(
èsk
.
fd
,Åask.
±r
->±∏+Åask.
±roff£t
,Åask.
Àngth
,Åask.
off£t
);

750 i‡(
èsk
.
‰ì_a·î
) {

752 i‡(
	`__sync_sub_™d_„tch
(&
èsk
.
±r
->
cou¡
, 1) == 0) {

753 
	`‰ì
(
èsk
.
±r
->ptr);

754 
dñëe
 
èsk
.
±r
;

755 i‡(
èsk
.
˛o£fd
) {

756 
èsk
.
iomgr
->
	`˛o£_£ssi⁄
—ask.
£ssi⁄
);

761 
	`__sync_sub_™d_„tch
(&
öfo
->
≥ndög_wrôes
, 1);

762 
öfo
->
m
->
	`°›_time
(
me
, "commit_thr");

764 i‡(
èsk
.
com¥es£d
) {

765 
	`as£π
(
èsk
.
off£t
 == 0);

766 
	`ªad_com¥es£d
(
èsk
.
fd
,Åask.
±r
->±r,Åask.
Àngth
);

769 
	`¥óda
(
èsk
.
fd
,Åask.
±r
->±r+èsk.
±roff£t
,Åask.
Àngth
,Åask.
off£t
);

771 
	`__sync_sub_™d_„tch
(&
öfo
->
≥ndög_ªads
, 1);

772 i‡(
	`__sync_sub_™d_„tch
(&
èsk
.
±r
->
cou¡
, 1) == 0) {

773 
	`‰ì
(
èsk
.
±r
);

774 i‡(
èsk
.
˛o£fd
) {

775 
èsk
.
iomgr
->
	`˛o£_£ssi⁄
—ask.
£ssi⁄
);

779 i‡(
èsk
.
d⁄ïå
 !
NULL
) {

780 
	`__sync_sub_™d_„tch
(
èsk
.
d⁄ïå
, 1);

783 
	`u¶ìp
(50000);

787  
NULL
;

788 
	}
}

792 
size_t
 
gë_fûesize
(
°d
::
°rög
 
fûíame
) {

793 
°d
::
°rög
 
‚ame
 = 
fûíame
;

794 
	gf
 = 
›í
(
‚ame
.
c_°r
(), 
O_RDONLY
);

796 i‡(
	gf
 < 0) {

797 
log°ªam
(
LOG_ERROR
Ë<< "CouldÇŸ o≥¿fûê" << 
	gfûíame
 << "Éº‹: " << 
°ªº‹
(
î∫o
Ë<< 
	g°d
::
ídl
;

798 
as£π
(
Ál£
);

801 
off_t
 
	gsz
 = 
l£ek
(
f
, 0, 
SEEK_END
);

802 
˛o£
(
f
);

803  
	gsz
;

	@logger/logger.hpp

49 #i‚de‡
GRAPHCHI_LOG_LOG_HPP


50 
	#GRAPHCHI_LOG_LOG_HPP


	)

51 
	~<f°ªam
>

52 
	~<s°ªam
>

53 
	~<c°dlib
>

54 
	~<io°ªam
>

55 
	~<ˇs£π
>

56 
	~<c°rög
>

57 
	~<c°d¨g
>

58 
	~<±hªad.h
>

71 
	#LOG_NONE
 5

	)

72 
	#LOG_FATAL
 4

	)

73 
	#LOG_ERROR
 3

	)

74 
	#LOG_WARNING
 2

	)

75 
	#LOG_INFO
 1

	)

76 
	#LOG_DEBUG
 0

	)

85 #i‚de‡
OUTPUTLEVEL


86 
	#OUTPUTLEVEL
 
LOG_DEBUG


	)

89 
	#COLOROUTPUT


	)

100 #i‡
OUTPUTLEVEL
 =
LOG_NONE


102 
	#loggî
(
lvl
,
fmt
,...)

	)

103 
	#logbuf
(
lvl
,
fmt
,...)

	)

104 
	#log°ªam


	)

107 
	#loggî
(
lvl
,
fmt
,...) \

108 (
log_di•©ch
<(
lvl
 >
OUTPUTLEVEL
)>::
	`exec
÷vl,
__FILE__
, 
__func__
 ,
__LINE__
,
fmt
,##
__VA_ARGS__
))

	)

111 
	#logbuf
(
lvl
,
buf
,
Àn
) \

112 (
log_di•©ch
<(
lvl
 >
OUTPUTLEVEL
)>::
	`exec
÷vl,
__FILE__
, \

113 
__func__
 ,
__LINE__
,
buf
,
Àn
))

	)

115 
	#log°ªam
(
lvl
) \

116 (
log_°ªam_di•©ch
<(
lvl
 >
OUTPUTLEVEL
)>::
	`exec
÷vl,
__FILE__
, 
__func__
 ,
__LINE__
Ë)

	)

119 c⁄° * 
	gmesßges
[] = { "DEBUG: ",

125 
«me•a˚
 
	gloggî_im∂
 {

126 
	s°ªambuff_és_íåy
 {

127 
	g°d
::
°rög°ªam
 
°ªambuf„r
;

128 
boﬁ
 
	g°ªama˘ive
;

137 ˛as†
	cfûe_loggî
{

138 
	mpublic
:

150 
	$£t_log_to_c⁄sﬁe
(
boﬁ
 
c⁄sﬁñog
) {

151 
log_to_c⁄sﬁe
 = 
c⁄sﬁñog
;

155 
°d
::
°rög
 
	$gë_log_fûe
() {

156  
log_fûe
;

157 
	}
}

160 
boﬁ
 
	$gë_log_to_c⁄sﬁe
() {

161  
log_to_c⁄sﬁe
;

162 
	}
}

165 
	$gë_log_Àvñ
() {

166  
log_Àvñ
;

167 
	}
}

170 
	gãm∂©e
 <
ty≥«me
 
	gT
>

171 
	gfûe_loggî
& 
	g›î©‹
<<(
T
 
	ga
) {

173 
	gloggî_im∂
::
°ªambuff_és_íåy
* 
°ªambu„¡ry
 = 
ªöãΩªt_ˇ°
<
loggî_im∂
::streambuff_tls_entry*>(

174 
±hªad_gë•ecific
(
°ªambuffkey
));

175 i‡(
	g°ªambu„¡ry
 !
NULL
) {

176 
°d
::
°rög°ªam
& 
°ªambuf„r
 = 
°ªambu„¡ry
->streambuffer;

177 
	gboﬁ
& 
	g°ªama˘ive
 = 
°ªambu„¡ry
->
°ªama˘ive
;

179 i‡(
	g°ªama˘ive
Ë
	g°ªambuf„r
 << 
	ga
;

181  *
	gthis
;

184 
	gfûe_loggî
& 
	g›î©‹
<<(c⁄° * 
	ga
) {

186 
	gloggî_im∂
::
°ªambuff_és_íåy
* 
°ªambu„¡ry
 = 
ªöãΩªt_ˇ°
<
loggî_im∂
::streambuff_tls_entry*>(

187 
±hªad_gë•ecific
(
°ªambuffkey
));

188 i‡(
	g°ªambu„¡ry
 !
NULL
) {

189 
°d
::
°rög°ªam
& 
°ªambuf„r
 = 
°ªambu„¡ry
->streambuffer;

190 
	gboﬁ
& 
	g°ªama˘ive
 = 
°ªambu„¡ry
->
°ªama˘ive
;

192 i‡(
	g°ªama˘ive
) {

193 
	g°ªambuf„r
 << 
	ga
;

194 i‡(
	ga
[
°æí
(
a
)-1] == '\n') {

195 
°ªam_Êush
();

199  *
	gthis
;

202 
	gfûe_loggî
& 
	g›î©‹
<<(
	g°d
::
o°ªam
& (*
f
)(
°d
::ostream&)){

204 
loggî_im∂
::
°ªambuff_és_íåy
* 
°ªambu„¡ry
 = 
ªöãΩªt_ˇ°
<logger_impl::streambuff_tls_entry*>(

205 
±hªad_gë•ecific
(
°ªambuffkey
));

206 i‡(
	g°ªambu„¡ry
 !
NULL
) {

207 
°d
::
°rög°ªam
& 
°ªambuf„r
 = 
°ªambu„¡ry
->streambuffer;

208 
	gboﬁ
& 
	g°ªama˘ive
 = 
°ªambu„¡ry
->
°ªama˘ive
;

210 
	g°d
::
	to°ªam
& (*
	tíd…y≥
)(
	t°d
::ostream&);

211 i‡(
	g°ªama˘ive
) {

212 i‡(
íd…y≥
(
f
Ë=íd…y≥(
°d
::
ídl
)) {

213 
°ªambuf„r
 << "\n";

214 
°ªam_Êush
();

215 if(
	g°ªamlogÀvñ
 =
LOG_FATAL
) {

216 
throw
 "log fatal";

222  *
	gthis
;

229 
	$£t_log_Àvñ
(
√w_log_Àvñ
) {

230 
log_Àvñ
 = 
√w_log_Àvñ
;

231 
	}
}

239 
	$°ªambuffde°ru˘‹
(* 
v
){

240 
loggî_im∂
::
°ªambuff_és_íåy
* 
t
 =

241 
ªöãΩªt_ˇ°
<
loggî_im∂
::
°ªambuff_és_íåy
*>(
v
);

242 
dñëe
 
t
;

243 
	}
}

250 
	$fûe_loggî
() {

251 
log_fûe
 = "";

252 
log_to_c⁄sﬁe
 = 
åue
;

253 
log_Àvñ
 = 
LOG_DEBUG
;

254 
	`±hªad_muãx_öô
(&
mut
, 
NULL
);

255 
	`±hªad_key_¸óã
(&
°ªambuffkey
, 
°ªambuffde°ru˘‹
);

256 
	}
}

258 ~
	$fûe_loggî
() {

259 i‡(
fout
.
	`good
()) {

260 
fout
.
	`Êush
();

261 
fout
.
	`˛o£
();

264 
	`±hªad_muãx_de°roy
(&
mut
);

265 
	}
}

267 
boﬁ
 
£t_log_fûe
(
°d
::
°rög
 
fûe
) {

269 i‡(
fout
.
good
()) {

270 
fout
.
Êush
();

271 
	gfout
.
˛o£
();

272 
	glog_fûe
 = "";

275 i‡(
	gfûe
.
Àngth
() > 0) {

276 
	gfout
.
›í
(
fûe
.
c_°r
());

277 i‡(
	gfout
.
Áû
()Ë 
	gÁl£
;

278 
	glog_fûe
 = 
fûe
;

280  
	gåue
;

285 
	#RESET
 0

	)

286 
	#BRIGHT
 1

	)

287 
	#DIM
 2

	)

288 
	#UNDERLINE
 3

	)

289 
	#BLINK
 4

	)

290 
	#REVERSE
 7

	)

291 
	#HIDDEN
 8

	)

293 
	#BLACK
 0

	)

294 
	#RED
 1

	)

295 
	#GREEN
 2

	)

296 
	#YELLOW
 3

	)

297 
	#BLUE
 4

	)

298 
	#MAGENTA
 5

	)

299 
	#CYAN
 6

	)

300 
	#WHITE
 7

	)

302 
	$ãxtcﬁ‹
(
FILE
* 
h™dÀ
, 
©å
, 
fg
)

304 
comm™d
[13];

306 
	`•rötf
(
comm™d
, "%c[%d;%dm", 0x1B, 
©å
, 
fg
 + 30);

307 
	`Ârötf
(
h™dÀ
, "%s", 
comm™d
);

308 
	}
}

310 
	$ª£t_cﬁ‹
(
FILE
* 
h™dÀ
)

312 
comm™d
[20];

314 
	`•rötf
(
comm™d
, "%c[0m", 0x1B);

315 
	`Ârötf
(
h™dÀ
, "%s", 
comm™d
);

316 
	}
}

320 
	$_log
(
löñogÀvñ
,c⁄° * 
fûe
,c⁄° * 
fun˘i⁄
,

321 
löe
,c⁄° * 
fmt
, 
va_li°
 
≠
 ){

323 i‡(
löñogÀvñ
 >0 &&ÜöñogÀvñ <3 &&ÜöñogÀvñ >
log_Àvñ
){

326 
fûe
 = ((
	`°ºchr
(file, '/') ? : file- 1) + 1);

328 
°r
[1024];

331 
byãswrôãn
 = 
	`¢¥ötf
(
°r
,1024, "%s%s(%s:%d): ",

332 
mesßges
[
löñogÀvñ
],
fûe
,
fun˘i⁄
,
löe
);

335 
byãswrôãn
 +
	`v¢¥ötf
(
°r
 + byãswrôãn,1024 - byãswrôãn,
fmt
,
≠
);

337 
°r
[
byãswrôãn
] = '\n';

338 
°r
[
byãswrôãn
+1] = 0;

340 i‡(
fout
.
	`good
()) {

341 
	`±hªad_muãx_lock
(&
mut
);

342 
fout
 << 
°r
;;

343 
	`±hªad_muãx_u∆ock
(&
mut
);

345 i‡(
log_to_c⁄sﬁe
) {

346 #ifde‡
COLOROUTPUT


347 i‡(
löñogÀvñ
 =
LOG_FATAL
) {

348 
	`ãxtcﬁ‹
(
°dîr
, 
BRIGHT
, 
RED
);

350 i‡(
löñogÀvñ
 =
LOG_ERROR
) {

351 
	`ãxtcﬁ‹
(
°dîr
, 
BRIGHT
, 
RED
);

353 i‡(
löñogÀvñ
 =
LOG_WARNING
) {

354 
	`ãxtcﬁ‹
(
°dîr
, 
BRIGHT
, 
GREEN
);

357 
°d
::
˚º
 << 
°r
;;

358 #ifde‡
COLOROUTPUT


359 
	`ª£t_cﬁ‹
(
°dîr
);

363 
	}
}

367 
	$_logbuf
(
löñogÀvñ
,c⁄° * 
fûe
,c⁄° * 
fun˘i⁄
,

368 
löe
,c⁄° * 
buf
, 
Àn
) {

370 i‡(
löñogÀvñ
 >0 &&ÜöñogÀvñ <3 &&ÜöñogÀvñ >
log_Àvñ
){

373 
fûe
 = ((
	`°ºchr
(file, '/') ? : file- 1) + 1);

376 
size_t
 
hódîÀn
 = 
	`¢¥ötf
(
NULL
,0,"%s%s(%s:%d): ",

377 
mesßges
[
löñogÀvñ
],
fûe
,
fun˘i⁄
,
löe
);

379 i‡(
hódîÀn
> 2047) {

380 
°d
::
˚º
 << "HeaderÜengthÉxceed bufferÜength!";

383 
°r
[2048];

384 c⁄° *
√wlöe
="\n";

386 
byãswrôãn
 = 
	`¢¥ötf
(
°r
,2047,"%s%s(%s:%d): ",

387 
mesßges
[
löñogÀvñ
],
fûe
,
fun˘i⁄
,
löe
);

388 
	`_logøw
(
löñogÀvñ
,
°r
, 
byãswrôãn
);

389 
	`_logøw
(
löñogÀvñ
,
buf
, 
Àn
);

390 
	`_logøw
(
löñogÀvñ
,
√wlöe
, ()
	`°æí
(newline));

393 
	}
}

395 
	$_logøw
(
löñogÀvñ
, c⁄° * 
buf
, 
Àn
) {

396 i‡(
fout
.
	`good
()) {

397 
	`±hªad_muãx_lock
(&
mut
);

398 
fout
.
	`wrôe
(
buf
,
Àn
);

399 
	`±hªad_muãx_u∆ock
(&
mut
);

401 i‡(
log_to_c⁄sﬁe
) {

402 #ifde‡
COLOROUTPUT


403 i‡(
löñogÀvñ
 =
LOG_FATAL
) {

404 
	`ãxtcﬁ‹
(
°dîr
, 
BRIGHT
, 
RED
);

406 i‡(
löñogÀvñ
 =
LOG_ERROR
) {

407 
	`ãxtcﬁ‹
(
°dîr
, 
BRIGHT
, 
RED
);

409 i‡(
löñogÀvñ
 =
LOG_WARNING
) {

410 
	`ãxtcﬁ‹
(
°dîr
, 
BRIGHT
, 
GREEN
);

412 i‡(
löñogÀvñ
 =
LOG_DEBUG
) {

413 
	`ãxtcﬁ‹
(
°dîr
, 
BRIGHT
, 
YELLOW
);

417 
°d
::
˚º
.
	`wrôe
(
buf
,
Àn
);

418 #ifde‡
COLOROUTPUT


419 
	`ª£t_cﬁ‹
(
°dîr
);

422 
	}
}

424 
	gfûe_loggî
& 
	$°¨t_°ªam
(
löñogÀvñ
,c⁄° * 
fûe
,c⁄° * 
fun˘i⁄
, 
löe
) {

426 
loggî_im∂
::
°ªambuff_és_íåy
* 
°ªambu„¡ry
 = 
ªöãΩªt_ˇ°
<logger_impl::streambuff_tls_entry*>(

427 
	`±hªad_gë•ecific
(
°ªambuffkey
));

429 i‡(
°ªambu„¡ry
 =
NULL
) {

430 
°ªambu„¡ry
 = 
√w
 
loggî_im∂
::
°ªambuff_és_íåy
;

431 
	`±hªad_£t•ecific
(
°ªambuffkey
, 
°ªambu„¡ry
);

433 
°d
::
°rög°ªam
& 
°ªambuf„r
 = 
°ªambu„¡ry
->streambuffer;

434 
boﬁ
& 
°ªama˘ive
 = 
°ªambu„¡ry
->streamactive;

436 
fûe
 = ((
	`°ºchr
(file, '/') ? : file- 1) + 1);

438 i‡(
löñogÀvñ
 >
log_Àvñ
){

439 i‡(
°ªambuf„r
.
	`°r
().
	`Àngth
() == 0) {

440 
°ªambuf„r
 << 
mesßges
[
löñogÀvñ
] << 
fûe


441 << "(" << 
fun˘i⁄
 << ":" <<
löe
<<"): ";

443 
°ªama˘ive
 = 
åue
;

444 
°ªamlogÀvñ
 = 
löñogÀvñ
;

447 
°ªama˘ive
 = 
Ál£
;

449  *
this
;

450 
	}
}

454 
	$°ªam_Êush
() {

456 
loggî_im∂
::
°ªambuff_és_íåy
* 
°ªambu„¡ry
 = 
ªöãΩªt_ˇ°
<logger_impl::streambuff_tls_entry*>(

457 
	`±hªad_gë•ecific
(
°ªambuffkey
));

458 i‡(
°ªambu„¡ry
 !
NULL
) {

459 
°d
::
°rög°ªam
& 
°ªambuf„r
 = 
°ªambu„¡ry
->streambuffer;

461 
°ªambuf„r
.
	`Êush
();

462 
	`_logøw
(
°ªamlogÀvñ
,

463 
°ªambuf„r
.
	`°r
().
	`c_°r
(),

464 ()(
°ªambuf„r
.
	`°r
().
	`Àngth
()));

465 
°ªambuf„r
.
	`°r
("");

467 
	}
}

468 
	g¥iv©e
:

469 
°d
::
of°ªam
 
fout
;

470 
	g°d
::
°rög
 
log_fûe
;

472 
±hªad_key_t
 
	g°ªambuffkey
;

474 
	g°ªamlogÀvñ
;

475 
±hªad_muãx_t
 
	gmut
;

477 
boﬁ
 
	glog_to_c⁄sﬁe
;

478 
	glog_Àvñ
;

483 
	gfûe_loggî
& 
globÆ_loggî
();

488 
	gãm∂©e
 <
boﬁ
 
	gdo°uff
>

489 
	slog_di•©ch
 {};

491 
	gãm∂©e
 <>

492 
	glog_di•©ch
<
	gåue
> {

493 
ölöe
 
exec
(
logÀvñ
,c⁄° * 
fûe
,c⁄° * 
fun˘i⁄
,

494 
löe
,c⁄° * 
fmt
, ... ) {

495 
va_li°
 
	g¨gp
;

496 
va_°¨t
(
¨gp
, 
fmt
);

497 
globÆ_loggî
().
_log
(
logÀvñ
, 
fûe
, 
fun˘i⁄
, 
löe
, 
fmt
, 
¨gp
);

498 
va_íd
(
¨gp
);

502 
	gãm∂©e
 <>

503 
	glog_di•©ch
<
	gÁl£
> {

504 
ölöe
 
exec
(
logÀvñ
,c⁄° * 
fûe
,c⁄° * 
fun˘i⁄
,

505 
löe
,c⁄° * 
fmt
, ... ) {}

509 
	snuŒ_°ªam
 {

510 
	mãm∂©e
<
ty≥«me
 
	mT
>

511 
ölöe
 
nuŒ_°ªam
 
	m›î©‹
<<(
T
 
	mt
) { Çull_stream(); }

512 
ölöe
 
nuŒ_°ªam
 
	m›î©‹
<<(c⁄° * 
	ma
) { Çull_stream(); }

513 
ölöe
 
nuŒ_°ªam
 
	m›î©‹
<<(
	m°d
::
o°ªam
& (*
f
)(
°d
::ostream&)) { Çull_stream(); }

517 
	gãm∂©e
 <
boﬁ
 
	gdo°uff
>

518 
	slog_°ªam_di•©ch
 {};

520 
	gãm∂©e
 <>

521 
	glog_°ªam_di•©ch
<
	gåue
> {

522 
ölöe
 
	gfûe_loggî
& 
exec
(
löñogÀvñ
,c⁄° * 
fûe
,c⁄° * 
fun˘i⁄
, 
löe
) {

523  
globÆ_loggî
().
°¨t_°ªam
(
löñogÀvñ
, 
fûe
, 
fun˘i⁄
, 
löe
);

527 
	gãm∂©e
 <>

528 
	glog_°ªam_di•©ch
<
	gÁl£
> {

529 
ölöe
 
nuŒ_°ªam
 
exec
(
löñogÀvñ
,c⁄° * 
fûe
,c⁄° * 
fun˘i⁄
, 
löe
) {

530  
nuŒ_°ªam
();

534 
ãxtcﬁ‹
(
FILE
* 
h™dÀ
, 
©å
, 
fg
);

535 
ª£t_cﬁ‹
(
FILE
* 
h™dÀ
);

537 
	gfûe_loggî
& 
	$globÆ_loggî
() {

538 
fûe_loggî
 
l
;

539  
l
;

540 
	}
}

	@metrics/imetrics_reporter.hpp

32 #i‚de‡
DEF_GRAPHCHI_IMETRICS_REPORTER


33 
	#DEF_GRAPHCHI_IMETRICS_REPORTER


	)

35 
	~<m≠
>

38 
«me•a˚
 
	ggøphchi
 {

39 ˛as†
	cimërics_ªp‹ãr
 {

41 
	gpublic
:

42 
vútuÆ
 
do_ªp‹t
(
°d
::
°rög
 
«me
, std::°rög 
id
, std::
m≠
<°d::°rög, 
mërics_íåy
> & 
íåõs
) = 0;

	@metrics/metrics.hpp

30 #i‚de‡
DEF_METRICS_HPP


31 
	#DEF_METRICS_HPP


	)

33 
	~<c°rög
>

34 
	~<m≠
>

35 
	~<ve˘‹
>

36 
	~<limôs
>

37 
	~<as£π.h
>

38 
	~<sys/time.h
>

40 
	~"utû/±hªad_toﬁs.hµ
"

41 
	~"utû/cmd›ts.hµ
"

43 
«me•a˚
 
	ggøphchi
 {

46 
	emëri˘y≥
 {
	gREAL
, 
	gINTEGER
, 
	gTIME
, 
	gSTRING
, 
	gVECTOR
};

52 
	smërics_íåy
 {

53 
size_t
 
	gcou¡
;

54 
	gvÆue
;

55 
	gmövÆue
;

56 
	gcumvÆue
;

57 
	gmaxvÆue
;

58 
mëri˘y≥
 
	gvÆty≥
;

59 
	g°d
::
°rög
 
°rögvÆ
;

60 
	g°d
::
ve˘‹
<> 
v
;

61 
timevÆ
 
	g°¨t_time
;

62 
	gœ°time
;

64 
mërics_íåy
() {}

66 
ölöe
 
mërics_íåy
(
fú°vÆue
, 
mëri˘y≥
 
_vÆty≥
) {

67 
	gmövÆue
 = 
fú°vÆue
;

68 
	gmaxvÆue
 = 
fú°vÆue
;

69 
	gvÆue
 = 
fú°vÆue
;

70 
	gvÆty≥
 = 
_vÆty≥
;

71 
	gcumvÆue
 = 
vÆue
;

72 
	gcou¡
 = 1;

73 i‡(
	gvÆty≥
 =
VECTOR
Ë
v
.
push_back
(
fú°vÆue
);

75 
ölöe
 
mërics_íåy
(
°d
::
°rög
 
svÆue
) {

76 
vÆty≥
 = 
STRING
;

77 
	g°rögvÆ
 = 
svÆue
;

79 
ölöe
 
mërics_íåy
(
mëri˘y≥
 
_vÆty≥
) {

80 
	gvÆty≥
 = 
_vÆty≥
;

81 
	gcou¡
 = 0;

82 
	gcumvÆue
 = 0;

83 
	gvÆue
 = 0;

84 
	gmövÆue
 = 
°d
::
numîic_limôs
<>::
max
();

85 
	gmaxvÆue
 = 
°d
::
numîic_limôs
<>::
mö
();

87 
ölöe
 
adj
(
v
) {

88 i‡(
	gcou¡
 == 0) {

89 
mövÆue
 = 
v
;

90 
	gmaxvÆue
 = 
v
;

92 
	gmövÆue
 = 
°d
::
mö
(
v
,
mövÆue
);

93 
	gmaxvÆue
 = 
°d
::
max
(
v
,
maxvÆue
);

98 
ölöe
 
add
(
x
) {

99 
adj
(
x
);

100 
	gvÆue
 +
x
;

101 
	gcumvÆue
 +
x
;

102 ++
	gcou¡
;

103 i‡(
	gvÆty≥
 =
VECTOR
) {

104 
v
.
push_back
(
x
);

111 
ölöe
 
£t
(
v
) {

112 
adj
(
v
);

113 
	gvÆue
 = 
v
;

114 
	gcumvÆue
 +
v
;

116 
ölöe
 
£t
(
°d
::
°rög
 
s
) {

117 
°rögvÆ
 = 
s
;

120 
ölöe
 
add_ve˘‹_íåy
(
size_t
 
i
, 
x
) {

121 i‡(
	gv
.
size
(Ë< 
	gi
 + 1Ëv.
ªsize
(
i
 + 1);

122 
	gcou¡
 = 
v
.
size
();

123 
	gvÆue
 +
x
;

124 
	gcumvÆue
 +
x
;

125 
	gv
[
i
] +
x
;

126 
adj
(
v
[
i
]);

129 
ölöe
 
£t_ve˘‹_íåy
(
size_t
 
i
, 
x
) {

130 i‡(
	gv
.
size
(Ë< 
	gi
 + 1Ëv.
ªsize
(
i
 + 1);

131 
	gcou¡
 = 
v
.
size
();

132 
	gvÆue
 = 
vÆue
 - 
v
[
i
] + 
x
;

133 
	gcumvÆue
 = 
cumvÆue
 - 
v
[
i
] + 
x
;

134 
	gv
[
i
] = 
x
;

136 
	gmövÆue
 = 
x
; 
	gmaxvÆue
 = x;

137 
size_t
 
	gi
 = 0; i < 
	gv
.
size
(); ++i) {

138 
adj
(
v
[
i
]);

142 
ölöe
 
timî_°¨t
() {

143 
gëtimeofday
(&
°¨t_time
, 
NULL
);

146 
ölöe
 
timî_°›
() {

147 
timevÆ
 
	gíd
;

148 
gëtimeofday
(&
íd
, 
NULL
);

149 
	gœ°time
 = 
íd
.
tv_£c
 - 
°¨t_time
.tv_£¯+ (()”nd.
tv_u£c
 - start_time.tv_usec)) / 1.0E6;

150 
add
(
œ°time
);

154 ˛as†
	cimërics_ªp‹ãr
 {

156 
	gpublic
:

157 
vútuÆ
 ~
imërics_ªp‹ãr
() {}

158 
vútuÆ
 
do_ªp‹t
(
°d
::
°rög
 
«me
, std::°rög 
id
, std::
m≠
<°d::°rög, 
mërics_íåy
> & 
íåõs
) = 0;

165 ˛as†
	cmërics
 {

167 
	g°d
::
°rög
 
«me
, 
	gidít
;

168 
	g°d
::
m≠
<
°d
::
°rög
, 
	gmërics_íåy
> 
	gíåõs
;

169 
muãx
 
	gmlock
;

171 
	gpublic
:

172 
ölöe
 
mërics
(
°d
::
°rög
 
_«me
 = "", std::°rög 
_id
 = ""Ë: 
«me
(_«me), 
idít
 (_id) {

173 
	gthis
->
£t
("≠p", 
_«me
);

176 
ölöe
 
˛ór
() {

177 
	gíåõs
.
˛ór
();

181 
ölöe
 
	g°d
::
°rög
 
ôîkey
(
°d
::°rög 
key
, 
ôî
) {

182 
	gs
[256];

183 
•rötf
(
s
, "%s.%d", 
key
.
c_°r
(), 
ôî
);

184  
	g°d
::
°rög
(
s
);

190 
ölöe
 
add
(
°d
::
°rög
 
key
, 
vÆue
, 
mëri˘y≥
 
ty≥
 = 
REAL
) {

191 
mlock
.
lock
();

192 i‡(
	gíåõs
.
cou¡
(
key
) == 0) {

193 
íåõs
[
key
] = 
mërics_íåy
(
vÆue
, 
ty≥
);

195 
	gíåõs
[
key
].
add
(
vÆue
);

197 
	gmlock
.
u∆ock
();

200 
ölöe
 
add_to_ve˘‹
(
°d
::
°rög
 
key
, 
vÆue
) {

201 i‡(
	gíåõs
.
cou¡
(
key
) == 0) {

202 
íåõs
[
key
] = 
mërics_íåy
(
vÆue
, 
VECTOR
);

204 
	gíåõs
[
key
].
add
(
vÆue
);

208 
ölöe
 
add_ve˘‹_íåy
(
°d
::
°rög
 
key
, 
size_t
 
idx
, 
vÆue
) {

209 i‡(
	gíåõs
.
cou¡
(
key
) == 0) {

210 
íåõs
[
key
] = 
mërics_íåy
(
VECTOR
);

212 
	gíåõs
[
key
].
add_ve˘‹_íåy
(
idx
, 
vÆue
);

215 
ölöe
 
£t
(
°d
::
°rög
 
key
, 
size_t
 
vÆue
) {

216 
£t
(
key
, ()
vÆue
, 
INTEGER
);

220 
ölöe
 
£t
(
°d
::
°rög
 
key
, 
vÆue
) {

221 
£t
(
key
, ()
vÆue
, 
INTEGER
);

224 
ölöe
 
£t
(
°d
::
°rög
 
key
, 
vÆue
, 
mëri˘y≥
 
ty≥
 = 
REAL
) {

225 i‡(
íåõs
.
cou¡
(
key
) == 0) {

226 
íåõs
[
key
] = 
mërics_íåy
(
vÆue
, 
ty≥
);

228 
	gíåõs
[
key
].
£t
(
vÆue
);

232 
ölöe
 
£t_öãgî
(
°d
::
°rög
 
key
, 
size_t
 
vÆue
) {

233 i‡(
	gíåõs
.
cou¡
(
key
) == 0) {

234 
íåõs
[
key
] = 
mërics_íåy
(()
vÆue
, 
INTEGER
);

236 
	gíåõs
[
key
].
£t
(()
vÆue
);

240 
ölöe
 
£t
(
°d
::
°rög
 
key
, std::°rög 
s
) {

241 i‡(
íåõs
.
cou¡
(
key
) == 0) {

242 
íåõs
[
key
] = 
mërics_íåy
(
s
);

244 
	gíåõs
[
key
].
£t
(
s
);

248 
ölöe
 
£t_ve˘‹_íåy_öãgî
(
°d
::
°rög
 
key
, 
size_t
 
idx
, size_à
vÆue
) {

249 
£t_ve˘‹_íåy
(
key
, 
idx
, ()(
vÆue
));

252 
ölöe
 
£t_ve˘‹_íåy
(
°d
::
°rög
 
key
, 
size_t
 
idx
, 
vÆue
) {

253 
	gmlock
.
lock
();

255 i‡(
	gíåõs
.
cou¡
(
key
) == 0) {

256 
íåõs
[
key
] = 
mërics_íåy
(
VECTOR
);

258 
	gíåõs
[
key
].
£t_ve˘‹_íåy
(
idx
, 
vÆue
);

259 
	gmlock
.
u∆ock
();

262 
ölöe
 
°¨t_time
(
°d
::
°rög
 
key
) {

263 
mlock
.
lock
();

265 i‡(
	gíåõs
.
cou¡
(
key
) == 0) {

266 
íåõs
[
key
] = 
mërics_íåy
(
TIME
);

268 
	gíåõs
[
key
].
timî_°¨t
();

269 
	gmlock
.
u∆ock
();

273 
mërics_íåy
 
°¨t_time
() {

274 
mërics_íåy
 
me
(
TIME
);

275 
	gme
.
timî_°¨t
();

276  
	gme
;

281 
ölöe
 
°›_time
(
mërics_íåy
 
me
, 
°d
::
°rög
 
key
, 
boﬁ
 
show
=
Ál£
) {

282 
me
.
timî_°›
();

283 
	gmlock
.
lock
();

285 i‡(
	gíåõs
.
cou¡
(
key
) == 0) {

286 
íåõs
[
key
] = 
mërics_íåy
(
TIME
);

288 
	gíåõs
[
key
].
add
(
me
.
œ°time
);

289 i‡(
	gshow
)

290 
	g°d
::
cout
 << 
key
 << ": " << 
me
.
œ°time
 << " secs." << 
°d
::
ídl
;

291 
	gmlock
.
u∆ock
();

295 
ölöe
 
°›_time
(
mërics_íåy
 
me
, 
°d
::
°rög
 
key
, 
ôînum
, 
boﬁ
 
show
=
Ál£
) {

296 
me
.
timî_°›
();

297 
	gmlock
.
lock
();

299 
	gt
 = 
me
.
œ°time
;

300 i‡(
	gíåõs
.
cou¡
(
key
) == 0) {

301 
íåõs
[
key
] = 
mërics_íåy
(
TIME
);

303 
	gíåõs
[
key
].
add
(
t
);

304 i‡(
	gshow
)

305 
	g°d
::
cout
 << 
key
 << ": " << 
me
.
œ°time
 << " secs." << 
°d
::
ídl
;

307 
	gs
[256];

308 
•rötf
(
s
, "%s.%d", 
key
.
c_°r
(), 
ôînum
);

309 
	g°d
::
°rög
 
ikey
(
s
);

310 i‡(
	gíåõs
.
cou¡
(
ikey
) == 0) {

311 
íåõs
[
ikey
] = 
mërics_íåy
(
TIME
);

313 
	gíåõs
[
ikey
].
add
(
t
);

315 
	gmlock
.
u∆ock
();

320 
ölöe
 
°›_time
(
°d
::
°rög
 
key
, 
boﬁ
 
show
 = 
Ál£
) {

321 
íåõs
[
key
].
timî_°›
();

322 i‡(
	gshow
)

323 
	g°d
::
cout
 << 
key
 << ": " << 
íåõs
[key].
œ°time
 << " secs." << 
°d
::
ídl
;

326 
ölöe
 
mërics_íåy
 
gë
(
°d
::
°rög
 
key
) {

327  
íåõs
[
key
];

331 
ªp‹t
(
imërics_ªp‹ãr
 & 
ªp‹ãr
) {

332 i‡(
	g«me
 != "") {

333 
ªp‹ãr
.
do_ªp‹t
(
«me
, 
idít
, 
íåõs
);

	@metrics/reps/basic_reporter.hpp

32 #i‚de‡
GRAPHCHI_BASIC_REPORTER


33 
	#GRAPHCHI_BASIC_REPORTER


	)

35 
	~<io°ªam
>

36 
	~<m≠
>

38 
	~"mërics/mërics.hµ
"

45 
«me•a˚
 
	ggøphchi
 {

47 ˛as†
	cbasic_ªp‹ãr
 : 
public
 
imërics_ªp‹ãr
 {

49 
public
:

50 
vútuÆ
 ~
basic_ªp‹ãr
() {}

51 
vútuÆ
 
do_ªp‹t
(
°d
::
°rög
 
«me
, std::°rög 
idít
, std::
m≠
<°d::°rög, 
mërics_íåy
> & 
íåõs
) {

53 i‡(
	gidít
 !
«me
) {

54 
°d
::
cout
 << std::
ídl
 << " ==REPORT FOR " << 
«me
 << "(" << 
idít
 << ") ===" << std::endl;

56 
	g°d
::
cout
 << 
°d
::
ídl
 << " ==REPORT FOR " << 
«me
 << " ===" << std::endl;

60 
	ground
=0;Ñound<4;Ñound++) {

61 
	g°d
::
m≠
<
°d
::
°rög
, 
	gmërics_íåy
>::
ôî©‹
 
ô
;

62 
	gc
 = 0;

64 
	gô
 = 
íåõs
.
begö
(); ià!íåõs.
íd
(); ++it) {

65 
mërics_íåy
 
	gít
 = 
ô
->
£c⁄d
;

66 
	gít
.
	gvÆty≥
) {

67 
	gREAL
:

68 
INTEGER
:

69 i‡(
round
 == 0) {

70 i‡(
c
++ =0Ë
°d
::
cout
 << "[Numîic]" << std::
ídl
;

71 
	g°d
::
cout
 << 
ô
->
fú°
 << ":\t\t";

72 i‡(
	gít
.
	gcou¡
 > 1) {

73 
	g°d
::
cout
 << 
ít
.
vÆue
 << "\t(cou¡: " <<É¡.
cou¡
 << ", mö: " <<É¡.
mövÆue
 <<

74 ", max: " << 
ít
.
maxvÆue
 << ",ávg: "

75 << 
ít
.
cumvÆue
/(Î¡.
cou¡
 << ")" << 
°d
::
ídl
;

77 
	g°d
::
cout
 << 
ít
.
vÆue
 << 
°d
::
ídl
;

81 
	gTIME
:

82 i‡(
round
 == 1) {

83 i‡(
c
++ =0Ë
°d
::
cout
 << "[Timögs]" << std::
ídl
;

84 
	g°d
::
cout
 << 
ô
->
fú°
 << ":\t\t";

85 i‡(
	gít
.
	gcou¡
>1) {

86 
	g°d
::
cout
 << 
ít
.
vÆue
 << "s\à(cou¡: " <<É¡.
cou¡
 << ", mö: " <<É¡.
mövÆue
 <<

87 "s, " << "max: " << 
ít
.
maxvÆue
 << ",ávg: "

88 << 
ít
.
cumvÆue
/(Î¡.
cou¡
 << "s)" << 
°d
::
ídl
;

90 
	g°d
::
cout
 << 
ít
.
vÆue
 << " s" << 
°d
::
ídl
;

94 
	gSTRING
:

95 i‡(
round
 == 2) {

96 i‡(
c
++ =0Ë
°d
::
cout
 << "[Othî]" << std::
ídl
;

97 
	g°d
::
cout
 << 
ô
->
fú°
 << ":\t";

98 
	g°d
::
cout
 << 
ít
.
°rögvÆ
 << 
°d
::
ídl
;

101 
	gVECTOR
:

102 i‡(
round
 == 3) {

103 i‡(
c
++ =0Ë
°d
::
cout
 << "[Numîic]" << std::
ídl
;

104 
	g°d
::
cout
 << 
ô
->
fú°
 << ":\t\t";

105 i‡(
	gít
.
	gcou¡
 > 1) {

106 
	g°d
::
cout
 << 
ít
.
vÆue
 << "\t(cou¡: " <<É¡.
cou¡
 << ", mö: " <<É¡.
mövÆue
 <<

107 ", max: " << 
ít
.
maxvÆue
 << ",ávg: "

108 << 
ít
.
cumvÆue
/(Î¡.
cou¡
 << ")" << 
°d
::
ídl
;

110 
	g°d
::
cout
 << 
ít
.
vÆue
 << 
°d
::
ídl
;

112 
	g°d
::
cout
 << 
ô
->
fú°
 << ".values:\t\t";

113 
size_t
 
	gj
=0; j<
	gít
.
	gv
.
size
(); j++Ë
	g°d
::
cout
 << 
ít
.
v
[
j
] << ",";

114 
	g°d
::
cout
 << 
°d
::
ídl
;

	@metrics/reps/file_reporter.hpp

30 #i‚de‡
DEF_GRAPHCHI_FILE_REPORTER


31 
	#DEF_GRAPHCHI_FILE_REPORTER


	)

33 
	~<f°ªam
>

34 
	~<c°dio
>

36 
	~"mërics/mërics.hµ
"

37 
	~"utû/cmd›ts.hµ
"

41 
«me•a˚
 
	ggøphchi
 {

43 ˛as†
	cfûe_ªp‹ãr
 : 
public
 
imërics_ªp‹ãr
 {

44 
¥iv©e
:

45 
fûe_ªp‹ãr
() {}

47 
°d
::
°rög
 
fûíame
;

48 
FILE
 * 
	gf
;

49 
	gpublic
:

52 
fûe_ªp‹ãr
(
°d
::
°rög
 
‚ame
Ë: 
fûíame
(fname) {

54 
f
 = 
f›í
(
‚ame
.
c_°r
(), "w");

55 
as£π
(
f
 !
NULL
);

58 
	gvútuÆ
 ~
fûe_ªp‹ãr
() {}

60 
vútuÆ
 
do_ªp‹t
(
°d
::
°rög
 
«me
, std::°rög 
idít
, std::
m≠
<°d::°rög, 
mërics_íåy
> & 
íåõs
) {

61 i‡(
	gidít
 !
«me
) {

62 
Ârötf
(
f
, "[%s:%s]\n", 
«me
.
c_°r
(), 
idít
.c_str());

64 
Ârötf
(
f
, "[%s]\n", 
«me
.
c_°r
());

66 
	g°d
::
m≠
<
°d
::
°rög
, 
	gmërics_íåy
>::
ôî©‹
 
ô
;

68 
	gô
 = 
íåõs
.
begö
(); ià!íåõs.
íd
(); ++it) {

69 
mërics_íåy
 
	gít
 = 
ô
->
£c⁄d
;

70 
	gít
.
	gvÆty≥
) {

71 
	gINTEGER
:

73 
Ârötf
(
f
, "%s.%s=%ld\n", 
idít
.
c_°r
(), 
ô
->
fú°
.c_°r(), (Ë(
ít
.
vÆue
));

74 
Ârötf
(
f
, "%s.%s.cou¡=%lu\n", 
idít
.
c_°r
(), 
ô
->
fú°
.c_°r(), 
ít
.
cou¡
);

75 
Ârötf
(
f
, "%s.%s.mö=%ld\n", 
idít
.
c_°r
(), 
ô
->
fú°
.c_°r(), (Ë(
ít
.
mövÆue
));

76 
Ârötf
(
f
, "%s.%s.max=%ld\n", 
idít
.
c_°r
(), 
ô
->
fú°
.c_°r(), (Ë(
ít
.
maxvÆue
));

77 
Ârötf
(
f
, "%s.%s.avg=%lf\n", 
idít
.
c_°r
(), 
ô
->
fú°
.c_°r(), 
ít
.
cumvÆue
/ít.
cou¡
);

79 
	gREAL
:

80 
TIME
:

81 
Ârötf
(
f
, "%s.%s=%lf\n", 
idít
.
c_°r
(), 
ô
->
fú°
.c_°r(), (
ít
.
vÆue
));

82 
Ârötf
(
f
, "%s.%s.cou¡=%lu\n", 
idít
.
c_°r
(), 
ô
->
fú°
.c_°r(), 
ít
.
cou¡
);

83 
Ârötf
(
f
, "%s.%s.mö=%lf\n", 
idít
.
c_°r
(), 
ô
->
fú°
.c_°r(), (
ít
.
mövÆue
));

84 
Ârötf
(
f
, "%s.%s.max=%lf\n", 
idít
.
c_°r
(), 
ô
->
fú°
.c_°r(), (
ít
.
maxvÆue
));

85 
Ârötf
(
f
, "%s.%s.avg=%lf\n", 
idít
.
c_°r
(), 
ô
->
fú°
.c_°r(), 
ít
.
cumvÆue
/ít.
cou¡
);

87 
	gSTRING
:

88 
Ârötf
(
f
, "%s.%s=%s\n", 
idít
.
c_°r
(), 
ô
->
fú°
.c_°r(), it->
£c⁄d
.
°rögvÆ
.c_str());

90 
	gVECTOR
:

95 
fÊush
(
f
);

96 
f˛o£
(
f
);

99 i‡(
gë_›ti⁄_öt
("metrics.insert_to_db", 0) == 1) {

100 
°d
::
°rög
 
cmd
 = "pyth⁄2.7 bíchtodb.py " + 
fûíame
;

101 
	gîr
 = 
sy°em
(
cmd
.
c_°r
());

102 i‡(
	gîr
 != 0) {

103 
°d
::
cout
 << "Eº‹Ñu¬ögÅhêpyth⁄ s¸ùt." << std::
ídl
;

	@metrics/reps/html_reporter.hpp

31 #i‚de‡
GRAPHCHI_HTML_REPORTER


32 
	#GRAPHCHI_HTML_REPORTER


	)

34 
	~<c°dio
>

36 
	~"mërics/mërics.hµ
"

43 
«me•a˚
 
	ggøphchi
 {

45 ˛as†
	chtml_ªp‹ãr
 : 
public
 
imërics_ªp‹ãr
 {

46 
¥iv©e
:

47 
html_ªp‹ãr
() {}

49 
°d
::
°rög
 
fûíame
;

50 
FILE
 * 
	gf
;

51 
	gpublic
:

54 
html_ªp‹ãr
(
°d
::
°rög
 
‚ame
Ë: 
fûíame
(fname) {

56 
f
 = 
f›í
(
‚ame
.
c_°r
(), "w");

57 
as£π
(
f
 !
NULL
);

58 
Ârötf
(
f
, "<html><head><title>GraphCHI Metrics Report</title>");

59 
Ârötf
(
f
, "<style>\n");

60 
Ârötf
(
f
, "table { border: 1px solid #999999; font:Çormal 80%%/140%%árial, helvetica, sans-serif; color: #555; background: #fff;}Åd,Åh {border: 1px dotted #bbb;Öadding: .5em; width:100px} ");

61 
Ârötf
(
f
, "</style></head><body>");

64 
	gvútuÆ
 ~
html_ªp‹ãr
() {

65 
Ârötf
(
f
, "</body></html>");

66 
f˛o£
(
f
);

69 
vútuÆ
 
do_ªp‹t
(
°d
::
°rög
 
«me
, std::°rög 
idít
, std::
m≠
<°d::°rög, 
mërics_íåy
> & 
íåõs
) {

70 i‡(
	gidít
 !
«me
) {

71 
Ârötf
(
f
, "<h3>%s:%s</h3>\n", 
«me
.
c_°r
(), 
idít
.c_str());

73 
Ârötf
(
f
, "<h3>%s</h3>\n", 
«me
.
c_°r
());

78 
	ground
=0;Ñound<4;Ñound++) {

79 
	g°d
::
m≠
<
°d
::
°rög
, 
	gmërics_íåy
>::
ôî©‹
 
ô
;

80 
	gc
 = 0;

81 
Ârötf
(
f
, "<!-- Round %d -->\n", 
round
);

82 
Ârötf
(
f
, "\n<p>");

83 
	gô
 = 
íåõs
.
begö
(); ià!íåõs.
íd
(); ++it) {

84 
mërics_íåy
 
	gít
 = 
ô
->
£c⁄d
;

85 
	gít
.
	gvÆty≥
) {

86 
	gINTEGER
:

87 i‡(
round
 == 0) {

88 i‡(
c
++ == 0)

89 
Ârötf
(
f
, "<table><tr><th>Key</th><th>Value</th><th>Count</th><th>Min</th><th>Max</th><th>Average</th></tr>");

91 
Ârötf
(
f
, "<å><td>%s</td>\n", 
ô
->
fú°
.
c_°r
());

93 
Ârötf
(
f
, "<td>%ld</td>\n", (Ë
ít
.
vÆue
);

94 i‡(
	gít
.
	gcou¡
 > 1) {

95 
Ârötf
(
f
, "<td>%ld</td>\n", (Ë
ít
.
cou¡
);

96 
Ârötf
(
f
, "<td>%ld</td>\n", (Ë
ít
.
mövÆue
);

97 
Ârötf
(
f
, "<td>%ld</td>\n", (Ë
ít
.
maxvÆue
);

98 
Ârötf
(
f
, "<td>%.3lf</td>\n", 
ít
.
cumvÆue
/(Î¡.
cou¡
);

99 } 
Ârötf
(
f
, "<td colspan=4>&nbsp;</td>");

100 
Ârötf
(
f
, "</tr>");

103 
	gREAL
:

104 i‡(
round
 == 0) {

105 i‡(
c
++ == 0)

106 
Ârötf
(
f
, "<table><tr><th>Key</th><th>Value</th><th>Count</th><th>Min</th><th>Max</th><th>Average</th></tr>");

108 
	gTIME
:

109 i‡(
ít
.
vÆty≥
 =
TIME
 && 
round
 == 1) {

110 i‡(
c
++ == 0)

111 
Ârötf
(
f
, "<table><tr><th>Key</th><th>Value (sec)</th><th>Count</th><th>Min (sec)</th><th>Max (sec)</th><th>Average (sec)</th></tr>\n");

113 i‡((
	ground
 =0 && 
ít
.
vÆty≥
 =
REAL
)||(
round
 =1 &&É¡.vÆty≥ =
TIME
)) {

114 
Ârötf
(
f
, "<å><td>%s</td>\n", 
ô
->
fú°
.
c_°r
());

116 
Ârötf
(
f
, "<td>%lf</td>\n", 
ít
.
vÆue
);

117 i‡(
	gít
.
	gcou¡
 > 1) {

118 
Ârötf
(
f
, "<td>%ld</td>\n", (Ë
ít
.
cou¡
);

119 
Ârötf
(
f
, "<td>%.3lf</td>\n", 
ít
.
mövÆue
);

120 
Ârötf
(
f
, "<td>%.3lf</td>\n", 
ít
.
maxvÆue
);

121 
Ârötf
(
f
, "<td>%.3lf</td>\n", 
ít
.
cumvÆue
/(Î¡.
cou¡
);

122 } 
Ârötf
(
f
, "<td colspan=4>&nbsp;</td>");

123 
Ârötf
(
f
, "</tr>");

126 
	gSTRING
:

127 i‡(
round
 == 2) {

128 i‡(
c
++ == 0)

129 
Ârötf
(
f
, "<table><tr><th>Key</th><th>Value</th></tr>\n");

130 
Ârötf
(
f
, "<å><td>%s</td><td width=400>%s</td>\n", 
ô
->
fú°
.
c_°r
(), 
ít
.
°rögvÆ
.c_str());

131 
Ârötf
(
f
, "</tr>");

135 
	gVECTOR
:

136 i‡(
round
 == 3) {

142 i‡(
	gc
>0Ë
Ârötf
(
f
, "</table>");

143 
Ârötf
(
f
, " </p>");

146 
fÊush
(
f
);

	@metrics/reps/null_reporter.hpp

28 #i‚de‡
GRAPHLAB_NULL_REPORTER


29 
	#GRAPHLAB_NULL_REPORTER


	)

31 
	~"mërics/mërics.hµ
"

38 
«me•a˚
 
	ggøphchi
 {

40 ˛as†
	cnuŒ_ªp‹ãr
 : 
public
 
imërics_ªp‹ãr
 {

42 
public
:

43 
vútuÆ
 ~
nuŒ_ªp‹ãr
();

44 
vútuÆ
 
do_ªp‹t
(
°d
::
°rög
 
«me
, std::°rög 
idít
, std::
m≠
<°d::°rög, 
mërics_íåy
> & 
íåõs
) {

	@output/output.hpp

30 #i‚de‡
DEF_OUTPUT_HPP


31 
	#DEF_OUTPUT_HPP


	)

33 
	~"gøphchi_ty≥s.hµ
"

34 
	~"utû/±hªad_toﬁs.hµ
"

35 
	~<f°ªam
>

37 
«me•a˚
 
	ggøphchi
 {

39 
	gãm∂©e
 <
ty≥«me
 
	gVT
,Åy≥«mê
	gET
>

40 ˛as†
	ciouçut
{

42 
	gpublic
:

43 
vútuÆ
 
ouçut_edge
(
vid_t
 
‰om
, vid_à
to
) = 0;

47 
vútuÆ
 
ouçut_edge
(
vid_t
 
‰om
, vid_à
to
, 
vÆue
) = 0;

49 
vútuÆ
 
ouçut_edge
(
vid_t
 
‰om
, vid_à
to
, 
vÆue
) = 0;

51 
vútuÆ
 
ouçut_edge
(
vid_t
 
‰om
, vid_à
to
, 
vÆue
) = 0;

53 
vútuÆ
 
ouçut_edge
(
vid_t
 
‰om
, vid_à
to
, 
size_t
 
vÆue
) = 0;

57 
vútuÆ
 
ouçut_vÆue
(
vid_t
 
vid
, 
VT
 
vÆue
) = 0;

61 
vútuÆ
 
˛o£
() = 0;

66 
	gãm∂©e
 <
ty≥«me
 
	gVT
,Åy≥«mê
	gET
>

67 
˛ass
 
	gbasic_ãxt_ouçut
 : 
public
 
iouçut
<
VT
, 
	gET
> {

69 
	g°d
::
of°ªam
 
°rm
;

70 
	g°d
::
°rög
 
dñimôî
;

71 
muãx
 
	glock
;

73 
	gpublic
:

75 
basic_ãxt_ouçut
(
°d
::
°rög
 
fûíame
, std::°rög 
dñimôî
="\t"Ë: 
°rm
(fûíame.
c_°r
(),°d::
of°ªam
::
out
),

76 
dñimôî
(delimiter) {

79 ~
basic_ãxt_ouçut
() {

80 
	g°rm
.
˛o£
();

84 
	g¥Ÿe˘ed
:

85 
ãm∂©e
 <
ty≥«me
 
T
>

86 
_ouçut_edge
(
vid_t
 
‰om
, vid_à
to
, 
T
 
vÆ
) {

87 
	glock
.
lock
();

88 
	g°rm
 << 
	g‰om
 << 
	gdñimôî
 << 
	gto
 << dñimôî << 
	gvÆ
 << "\n";

89 
	glock
.
u∆ock
();

92 
	gpublic
:

93 
ouçut_edge
(
vid_t
 
‰om
, vid_à
to
) {

94 
	glock
.
lock
();

95 
	g°rm
 << 
	g‰om
 << 
	gdñimôî
 << 
	gto
 << "\n";

96 
	glock
.
u∆ock
();

102 
vútuÆ
 
ouçut_edge
(
vid_t
 
‰om
, vid_à
to
, 
vÆue
) {

103 
_ouçut_edge
(
‰om
, 
to
, 
vÆue
);

106 
vútuÆ
 
ouçut_edge
(
vid_t
 
‰om
, vid_à
to
, 
vÆue
) {

107 
_ouçut_edge
(
‰om
, 
to
, 
vÆue
);

111 
vútuÆ
 
ouçut_edge
(
vid_t
 
‰om
, vid_à
to
, 
vÆue
) {

112 
_ouçut_edge
(
‰om
, 
to
, 
vÆue
);

115 
vútuÆ
 
ouçut_edge
(
vid_t
 
‰om
, vid_à
to
, 
size_t
 
vÆue
) {

116 
_ouçut_edge
(
‰om
, 
to
, 
vÆue
);

119 
ouçut_edgevÆ
(
vid_t
 
‰om
, vid_à
to
, 
ET
 
vÆue
) {

120 
as£π
(
Ál£
);

124 
ouçut_vÆue
(
vid_t
 
vid
, 
VT
 
vÆue
) {

125 
	glock
.
lock
();

126 
	g°rm
 << 
	gvid
 << 
	gdñimôî
 << 
	gvÆue
 << "\n";

127 
	glock
.
u∆ock
();

132 
˛o£
() {

133 
	g°rm
.
˛o£
();

	@preprocessing/blocksplitter.cpp

28 
	~<io°ªam
>

29 
	~<°dlib.h
>

30 
	~<°rög
>

31 
	~<as£π.h
>

32 
	~<uni°d.h
>

33 
	~<f°ªam
>

34 
	~<sys/°©.h
>

36 
	~"≠i/chifûíames.hµ
"

37 
	~"io/°rùedio.hµ
"

38 
	~"loggî/loggî.hµ
"

39 
	~"utû/ioutû.hµ
"

40 
	~"utû/cmd›ts.hµ
"

41 
	~"¥ïro˚ssög/c⁄vîsi⁄s.hµ
"

42 
	~"¥ïro˚ssög/sh¨dî.hµ
"

44 
usög
 
«me•a˚
 
	ggøphchi
;

47 
	tEdgeD©aTy≥
;

49 
	$maö
(
¨gc
, c⁄° ** 
¨gv
) {

50 
	`gøphchi_öô
(
¨gc
, 
¨gv
);

52 
	`globÆ_loggî
().
	`£t_log_Àvñ
(
LOG_DEBUG
);

55 
°d
::
°rög
 
fûíame
 = 
	`gë_›ti⁄_°rög
("file");

56 
nsh¨ds
 = 
c⁄vît_if_nŸexi°s
<
EdgeD©aTy≥
>(
fûíame
, 
	`gë_›ti⁄_°rög
("nshards", "auto"));

57 
size_t
 
blocksize

	`gë_›ti⁄_l⁄g
("blocksize", 1024 * 1024);

59 * 
buf
 = (*Ë
	`mÆloc
(
blocksize
);

60 
p
=0;Ö < 
nsh¨ds
;Ö++) {

61 
°d
::
°rög
 
sh¨d_fûíame
 = 
fûíame_sh¨d_ed©a
<
EdgeD©aTy≥
>(
fûíame
, 
p
, 
nsh¨ds
);

62 
f
 = 
	`›í
(
sh¨d_fûíame
.
	`c_°r
(), 
O_RDONLY
);

63 
size_t
 
fsize
 = 
	`gë_fûesize
(
sh¨d_fûíame
);

65 
size_t
 
nblocks
 = 
fsize
 / 
blocksize
 + (fsize % blocksize != 0);

66 
size_t
 
idx
 = 0;

67 
°d
::
°rög
 
block_dú«me
 = 
	`dú«me_sh¨d_ed©a_block
(
sh¨d_fûíame
, 
blocksize
);

68 
	`log°ªam
(
LOG_INFO
Ë<< "GoögÅÿ¸óã: " << 
block_dú«me
 << 
°d
::
ídl
;

69 
îr
 = 
	`mkdú
(
block_dú«me
.
	`c_°r
(), 0777);

70 i‡(
îr
 != 0) {

71 
	`log°ªam
(
LOG_ERROR
Ë<< 
	`°ªº‹
(
î∫o
Ë<< 
°d
::
ídl
;

74 
i
=0; i < 
nblocks
; i++) {

75 
size_t
 
Àn
 = 
°d
::
	`mö
(
blocksize
, 
fsize
 - 
idx
);

76 
	`¥óda
(
f
, 
buf
, 
Àn
, 
idx
);

78 
°d
::
°rög
 
block_fûíame
 = 
	`fûíame_sh¨d_ed©a_block
(
sh¨d_fûíame
, 
i
, 
blocksize
);

79 
bf
 = 
	`›í
(
block_fûíame
.
	`c_°r
(), 
O_RDWR
 | 
O_CREAT
, 
S_IROTH
 | 
S_IWOTH
 | 
S_IWUSR
 | 
S_IRUSR
);

80 
	`wrôe_com¥es£d
(
bf
, 
buf
, 
Àn
);

81 
	`˛o£
(
bf
);

83 
idx
 +
blocksize
;

85 
	`˛o£
(
f
);

87 
°d
::
°rög
 
sizefûíame
 = 
sh¨d_fûíame
 + ".size";

88 
°d
::
of°ªam
 
	`ofs
(
sizefûíame
.
	`c_°r
());

89 
ofs
 << 
fsize
;

90 
ofs
.
	`˛o£
();

92 
	}
}

	@preprocessing/conversions.hpp

28 #i‚de‡
GRAPHCHI_CONVERSIONS_DEF


29 
	#GRAPHCHI_CONVERSIONS_DEF


	)

31 
	~<f˙é.h
>

32 
	~<uni°d.h
>

33 
	~<sys/ty≥s.h
>

34 
	~<dúít.h
>

35 
	~<sys/°©.h
>

37 
	~<f°ªam
>

38 
	~<io°ªam
>

42 
	~"gøphchi_ty≥s.hµ
"

43 
	~"loggî/loggî.hµ
"

44 
	~"¥ïro˚ssög/sh¨dî.hµ
"

50 #ifde‡
__GNUC__


51 
	#VARIABLE_IS_NOT_USED
 
	`__©åibuã__
 ((
unu£d
))

	)

53 
	#VARIABLE_IS_NOT_USED


	)

56 
«me•a˚
 
	ggøphchi
 {

58 
	sdummy
 {

61 
	gãm∂©e
 <
ty≥«me
 
	gT
>

62 
	sdummyC
 {

63 
›î©‹
 
T
() {  T(); }

67 
VARIABLE_IS_NOT_USED
 
∑r£
(&
x
, c⁄° * 
s
);

68 
VARIABLE_IS_NOT_USED
 
∑r£
(&
x
, c⁄° * 
s
);

69 
VARIABLE_IS_NOT_USED
 
∑r£
(&
x
, c⁄° * 
s
);

70 
VARIABLE_IS_NOT_USED
 
∑r£
(&
x
, c⁄° * 
s
);

71 
VARIABLE_IS_NOT_USED
 
∑r£
(&
x
, c⁄° * 
s
);

72 
VARIABLE_IS_NOT_USED
 
∑r£
(
boﬁ
 &
x
, c⁄° * 
s
);

73 
VARIABLE_IS_NOT_USED
 
∑r£
(&
x
, c⁄° * 
s
);

74 
VARIABLE_IS_NOT_USED
 
∑r£
(&
x
, c⁄° * 
s
);

75 
FIXLINE
(* 
s
);

77 
∑r£
(&
x
, c⁄° * 
s
) {

78 
	gx
 = 
©oi
(
s
);

81 
∑r£
(&
x
, c⁄° * 
s
) {

82 
	gx
 = (Ë
°πoul
(
s
, 
NULL
, 10);

85 
∑r£
(&
x
, c⁄° * 
s
) {

86 
	gx
 = (Ë
©of
(
s
);

89 
∑r£
(
dummy
 &
x
, c⁄° *
s
) {}

95 
	gãm∂©e
 <
ty≥«me
 
	gT
>

96 
∑r£
(
PaúC⁄èöî
<
T
> &
x
, c⁄° * 
s
) {

97 
∑r£
(
x
.
À·
, 
s
);

98 
∑r£
(
x
.
right
, 
s
);

101 
∑r£
(&
x
, c⁄° * 
s
) {

102 
	gx
 = 
©ﬁ
(
s
);

105 
∑r£
(&
x
, c⁄° * 
s
) {

106 
	gx
 = 
s
[0];

109 
∑r£
(
boﬁ
 &
x
, c⁄° * 
s
) {

110 
	gx
 = 
©oi
(
s
) == 1;

113 
∑r£
(&
x
, c⁄° * 
s
) {

114 
	gx
 = 
©of
(
s
);

117 
∑r£
(&
x
, c⁄° * 
s
) {

118 
	gx
 = (Ë
©oi
(
s
);

121 #ifde‡
DYNAMICEDATA


122 
VARIABLE_IS_NOT_USED
 
∑r£_mu…ùÀ
(
°d
::
ve˘‹
<
dummy
> &
vÆues
, * 
s
);

123 
VARIABLE_IS_NOT_USED
 
∑r£_mu…ùÀ
(
°d
::
ve˘‹
<
dummy
> & 
vÆues
, * 
s
) {

124 
as£π
(
Ál£
);

130 
	gãm∂©e
 <
ty≥«me
 
	gT
>

131 
∑r£_mu…ùÀ
(
ty≥«me
 
°d
::
ve˘‹
<
T
> & 
vÆues
, * 
s
) {

132 
	gdñims
[] = ":";

133 * 
	gt
;

134 
	gt
 = 
°πok
(
s
, 
dñims
);

135 
T
 
	gx
;

136 
∑r£
(
x
, (c⁄° *Ë
t
);

137 
	gvÆues
.
push_back
(
x
);

138 (
	gt
 = 
°πok
(
NULL
, 
dñims
)) != NULL) {

139 
∑r£
(
x
, (c⁄° *Ë
t
);

140 
	gvÆues
.
push_back
(
x
);

148 
	gãm∂©e
 <
ty≥«me
 
	gT
>

149 
∑r£
(
T
 &
x
, c⁄° * 
s
) {

150 
log°ªam
(
LOG_FATAL
) << "YouÇeedÅo defineÖarse<your-type>(your-type &x, const char *s) function"

151 << "Åÿsuµ‹à∑rsögÅhêedgêvÆue." << 
	g°d
::
ídl
;

152 
as£π
(
Ál£
);

158 
ölöe
 
FIXLINE
(* 
s
) {

159 
	gÀn
 = (Ë
°æí
(
s
)-1;

160 if(
	gs
[
Àn
] ='\n'Ë
s
[len] = 0;

165 
VARIABLE_IS_NOT_USED
 
gëdú
 (
°d
::
°rög
 
dú
, std::
ve˘‹
<°d::°rög> &
fûes
);

166 
VARIABLE_IS_NOT_USED
 
gëdú
 (
°d
::
°rög
 
dú
, std::
ve˘‹
<°d::°rög> &
fûes
)

168 
DIR
 *
dp
;

169 
dúít
 *
	gdúp
;

170 if((
	gdp
 = 
›ídú
(
dú
.
c_°r
())Ë=
NULL
) {

171 
°d
::
cout
 << "Eº‹(" << 
î∫o
 << "Ë›íög " << 
dú
 << std::
ídl
;

172  
	gî∫o
;

175 (
	gdúp
 = 
ªaddú
(
dp
)Ë!
NULL
) {

176 
fûes
.
push_back
(
°d
::
°rög
(
dúp
->
d_«me
));

178 
˛o£dú
(
dp
);

182 
VARIABLE_IS_NOT_USED
 
	g°d
::
°rög
 
gë_dú«me
(
°d
::°rög 
¨g
);

183 
VARIABLE_IS_NOT_USED
 
	g°d
::
°rög
 
gë_dú«me
(
°d
::°rög 
¨g
) {

184 
size_t
 
a
 = 
¨g
.
föd_œ°_of
("/");

185 i‡(
	ga
 !
¨g
.
≈os
) {

186 
°d
::
°rög
 
dú
 = 
¨g
.
sub°r
(0, 
a
);

187  
	gdú
;

189 
as£π
(
Ál£
);

194 
	g°d
::
°rög
 
VARIABLE_IS_NOT_USED
 
gë_fûíame
(
°d
::°rög 
¨g
);

195 
	g°d
::
°rög
 
VARIABLE_IS_NOT_USED
 
gë_fûíame
(
°d
::°rög 
¨g
) {

196 
size_t
 
a
 = 
¨g
.
föd_œ°_of
("/");

197 i‡(
	ga
 !
¨g
.
≈os
) {

198 
°d
::
°rög
 
f
 = 
¨g
.
sub°r
(
a
 + 1);

199  
	gf
;

201 
as£π
(
Ál£
);

210 
	gãm∂©e
 <
ty≥«me
 
	gEdgeD©aTy≥
,Åy≥«mê
	gFöÆEdgeD©aTy≥
>

211 
c⁄vît_edgñi°
(
°d
::
°rög
 
öputfûe
, 
sh¨dî
<
EdgeD©aTy≥
, 
FöÆEdgeD©aTy≥
> &
sh¨dîobj
, 
boﬁ
 
mu…ivÆue_edges
=
Ál£
) {

213 
FILE
 * 
öf
 = 
f›í
(
öputfûe
.
c_°r
(), "r");

214 
size_t
 
	gbyã§ód
 = 0;

215 
size_t
 
	glöíum
 = 0;

216 i‡(
	göf
 =
NULL
) {

217 
log°ªam
(
LOG_FATAL
Ë<< "CouldÇŸÜﬂd :" << 
öputfûe
 << "Éº‹: " << 
°ªº‹
(
î∫o
Ë<< 
°d
::
ídl
;

219 
as£π
(
öf
 !
NULL
);

221 
log°ªam
(
LOG_INFO
Ë<< "Ródög i¿edgêli° f‹m©!" << 
	g°d
::
ídl
;

222 
	gs
[1024];

223 
fgës
(
s
, 1024, 
öf
Ë!
NULL
) {

224 
löíum
++;

225 i‡(
	glöíum
 % 10000000 == 0) {

226 
log°ªam
(
LOG_DEBUG
Ë<< "Ród " << 
löíum
 << "Üöes, " << 
byã§ód
 / 1024 / 1024. << " MB" << 
°d
::
ídl
;

228 
FIXLINE
(
s
);

229 
	gbyã§ód
 +
°æí
(
s
);

230 i‡(
	gs
[0] == '#') ;

231 i‡(
	gs
[0] == '%') ;

233 
	gdñims
[] = "\t, ";

234 * 
	gt
;

235 
	gt
 = 
°πok
(
s
, 
dñims
);

236 i‡(
	gt
 =
NULL
) {

237 
log°ªam
(
LOG_ERROR
) << "Input file isÇot inÑight format. "

239 << "Cuºíàlöe: \"" << 
s
 << "\"\n";

240 
as£π
(
Ál£
);

242 
vid_t
 
	g‰om
 = 
©oi
(
t
);

243 
	gt
 = 
°πok
(
NULL
, 
dñims
);

244 i‡(
	gt
 =
NULL
) {

245 
log°ªam
(
LOG_ERROR
) << "Input file isÇot inÑight format. "

247 << "Cuºíàlöe: \"" << 
s
 << "\"\n";

248 
as£π
(
Ál£
);

250 
vid_t
 
	gto
 = 
©oi
(
t
);

253 
	gt
 = 
°πok
(
NULL
, 
dñims
);

255 i‡(!
	gmu…ivÆue_edges
) {

256 
EdgeD©aTy≥
 
	gvÆ
;

257 i‡(
	gt
 !
NULL
) {

258 
∑r£
(
vÆ
, (c⁄° *Ë
t
);

260 i‡(
	g‰om
 !
to
) {

261 i‡(
t
 !
NULL
) {

262 
sh¨dîobj
.
¥ïro˚ssög_add_edge
(
‰om
, 
to
, 
vÆ
);

264 
	gsh¨dîobj
.
¥ïro˚ssög_add_edge
(
‰om
, 
to
);

268 #ifde‡
DYNAMICEDATA


269 
	g°d
::
ve˘‹
<
EdgeD©aTy≥
> 
vÆs
;

271 
∑r£_mu…ùÀ
(
vÆs
, (*Ë
t
);

272 i‡(
	g‰om
 !
to
) {

273 i‡(
vÆs
.
size
() == 0) {

275 
log°ªam
(
LOG_FATAL
Ë<< "EachÉdgê√ed†©Üó° o√ vÆue." << 
°d
::
ídl
;

276 
as£π
(
vÆs
.
size
() > 0);

278 
	gsh¨dîobj
.
¥ïro˚ssög_add_edge_mu…ivÆ
(
‰om
, 
to
, 
vÆs
);

282 
log°ªam
(
LOG_FATAL
Ë<< "Tÿsuµ‹àmu…ivÆue-edges, dy«mi¯edgêd©®√ed†tÿbêu£d." << 
	g°d
::
ídl
;

283 
as£π
(
Ál£
);

287 
f˛o£
(
öf
);

296 
	gãm∂©e
 <
ty≥«me
 
	gEdgeD©aTy≥
,Åy≥«mê
	gFöÆEdgeD©aTy≥
>

297 
c⁄vît_adjli°
(
°d
::
°rög
 
öputfûe
, 
sh¨dî
<
EdgeD©aTy≥
, 
FöÆEdgeD©aTy≥
> &
sh¨dîobj
) {

298 
FILE
 * 
	göf
 = 
f›í
(
öputfûe
.
c_°r
(), "r");

299 i‡(
	göf
 =
NULL
) {

300 
log°ªam
(
LOG_FATAL
Ë<< "CouldÇŸÜﬂd :" << 
öputfûe
 << "Éº‹: " << 
°ªº‹
(
î∫o
Ë<< 
°d
::
ídl
;

302 
as£π
(
öf
 !
NULL
);

303 
log°ªam
(
LOG_INFO
Ë<< "Ródög i¿adja˚ncyÜi° f‹m©!" << 
	g°d
::
ídl
;

305 
	gmaxÀn
 = 100000000;

306 * 
	gs
 = (*Ë
mÆloc
(
maxÀn
);

308 
size_t
 
	gbyã§ód
 = 0;

310 
	gdñims
[] = " \t";

311 
size_t
 
	glöíum
 = 0;

312 
size_t
 
	gœ°log
 = 0;

314 
fgës
(
s
, 
maxÀn
, 
öf
Ë!
NULL
) {

315 
löíum
++;

316 i‡(
	gbyã§ód
 - 
	gœ°log
 >= 500000000) {

317 
log°ªam
(
LOG_DEBUG
Ë<< "Ród " << 
löíum
 << "Üöes, " << 
byã§ód
 / 1024 / 1024. << " MB" << 
°d
::
ídl
;

318 
	gœ°log
 = 
byã§ód
;

320 
FIXLINE
(
s
);

321 
	gbyã§ód
 +
°æí
(
s
);

323 i‡(
	gs
[0] == '#') ;

324 i‡(
	gs
[0] == '%') ;

325 * 
	gt
 = 
°πok
(
s
, 
dñims
);

326 
vid_t
 
	g‰om
 = 
©oi
(
t
);

327 
	gt
 = 
°πok
(
NULL
,
dñims
);

328 i‡(
	gt
 !
NULL
) {

329 
vid_t
 
num
 = 
©oi
(
t
);

330 
vid_t
 
	gi
 = 0;

331 (
	gt
 = 
°πok
(
NULL
,
dñims
)) != NULL) {

332 
vid_t
 
to
 = 
©oi
(
t
);

333 i‡(
	g‰om
 !
to
) {

334 
sh¨dîobj
.
¥ïro˚ssög_add_edge
(
‰om
, 
to
, 
EdgeD©aTy≥
());

336 
	gi
++;

338 i‡(
	gnum
 !
i
) {

339 
log°ªam
(
LOG_ERROR
Ë<< "Mism©ch whíÑódögádja˚ncyÜi°: " << 
num
 << " !" << 
i
 << " s: " << 
°d
::
°rög
(
s
)

340 << " o¿löe: " << 
löíum
 << 
°d
::
ídl
;

345 
‰ì
(
s
);

346 
f˛o£
(
öf
);

356 
	g°d
::
ve˘‹
<
vid_t
> 
VARIABLE_IS_NOT_USED
 
∑r£Löe
(
°d
::
°rög
 
löe
);

357 
	g°d
::
ve˘‹
<
vid_t
> 
VARIABLE_IS_NOT_USED
 
∑r£Löe
(
°d
::
°rög
 
löe
) {

359 
°d
::
°rög°ªam
 
°ªam
(
löe
);

360 
	g°d
::
°rög
 
tokí
;

361 
	gdñim
 = ' ';

362 
	g°d
::
ve˘‹
<
vid_t
> 
adja˚ncõs
;

365 
	g°d
::
gëlöe
(
°ªam
, 
tokí
, 
dñim
)) {

366 i‡(
	gtokí
.
size
() != 0) {

367 
vid_t
 
v
 = 
©oi
(
tokí
.
c_°r
());

368 
	gadja˚ncõs
.
push_back
(
v
);

372  
	gadja˚ncõs
;

380 
	gãm∂©e
 <
ty≥«me
 
	gEdgeD©aTy≥
,Åy≥«mê
	gFöÆEdgeD©aTy≥
>

381 
c⁄vît_mëis
(
°d
::
°rög
 
öputP©h
, 
sh¨dî
<
EdgeD©aTy≥
, 
FöÆEdgeD©aTy≥
> &
sh¨dîobj
) {

383 
	g°d
::
cout
 << "[INFO]Ñódög METIS gøph fûe" << 
°d
::
ídl
;

385 
	g°d
::
if°ªam
 
gøphFûe
(
öputP©h
.
c_°r
());

387 i‡(! 
	ggøphFûe
.
good
()) {

388 
log°ªam
(
LOG_FATAL
Ë<< "CouldÇŸÜﬂd :" << 
	göputP©h
 << "Éº‹: " << 
°ªº‹
(
î∫o
Ë<< 
	g°d
::
ídl
;

391 
	g°d
::
°rög
 
löe
;

394 
	gn
 = 0;

395 
	gm
 = 0;

396 
	gweighãd
;

398 i‡(
	g°d
::
gëlöe
(
gøphFûe
, 
löe
)) {

399 
	glöe
[0] == '%') {

400 
°d
::
gëlöe
(
gøphFûe
, 
löe
);

403 
	g°d
::
ve˘‹
<
uöt
> 
tokís
 = 
∑r£Löe
(
löe
);

404 
	gn
 = 
tokís
[0];

405 
	gm
 = 
tokís
[1];

406 i‡(
	gtokís
.
size
() == 2) {

407 
weighãd
 = 0;

408 } i‡(
	gtokís
.
size
() == 3) {

409 
weighãd
 = 
tokís
[2];

410 i‡(
	gweighãd
 != 0) {

411 
log°ªam
(
LOG_FATAL
Ë<< "nodê™dÉdgêweight†cuºíéyÇŸ suµ‹ãd byÖ¨£r" << 
°d
::
ídl
;

415 
log°ªam
(
LOG_FATAL
Ë<< "gëtög METIS fûêhódî faûed" << 
	g°d
::
ídl
;

418 
log°ªam
(
LOG_INFO
Ë<< "ªadög gøph wôhÇ=" << 
	gn
 << ", m=" << 
	gm
 << 
	g°d
::
ídl
;

420 
vid_t
 
	gu
 = 0;

423 
	ggøphFûe
.
good
()) {

425 
	g°d
::
gëlöe
(
gøphFûe
, 
löe
);

426 } 
	glöe
[0] == '%');

429 
	g°d
::
ve˘‹
<
vid_t
> 
adja˚ncõs
 = 
∑r£Löe
(
löe
);

430 
	g°d
::
ve˘‹
<
vid_t
>::
ôî©‹
 
ô
=
adja˚ncõs
.
begö
(); 
	gô
 !adja˚ncõs.
íd
(); ++it) {

431 
vid_t
 
	gv
 = *
ô
;

432 i‡(
	gu
 <
v
) {

433 
sh¨dîobj
.
¥ïro˚ssög_add_edge
(
u
, 
v
, 
EdgeD©aTy≥
());

437 
	gu
++;

446 
	gãm∂©e
 <
ty≥«me
 
	gEdgeD©aTy≥
,Åy≥«mê
	gFöÆEdgeD©aTy≥
>

447 
c⁄vît_ˇssov¨y
(
°d
::
°rög
 
ba£fûíame
, 
sh¨dî
<
EdgeD©aTy≥
, 
FöÆEdgeD©aTy≥
> &
sh¨dîobj
) {

448 
	g°d
::
ve˘‹
<
°d
::
°rög
> 
∑πs
;

449 
	g°d
::
°rög
 
dú«me
 = 
gë_dú«me
(
ba£fûíame
);

450 
	g°d
::
°rög
 
¥efix
 = 
gë_fûíame
(
ba£fûíame
);

452 
	g°d
::
cout
 << "dú=[" << 
dú«me
 << "]Öªfix=[" << 
¥efix
 << "]" << 
°d
::
ídl
;

453 
gëdú
(
dú«me
, 
∑πs
);

455 
	g°d
::
ve˘‹
<
°d
::
°rög
>::
ôî©‹
 
ô
=
∑πs
.
begö
(); 
	gô
 !∑πs.
íd
(); ++it) {

456 
	g°d
::
°rög
 
öputfûe
 = *
ô
;

457 i‡(
	göputfûe
.
föd
(
¥efix
Ë=0 && 
öputfûe
.föd("tmp"Ë=öputfûe.
≈os
) {

458 
°d
::
cout
 << "GoögÅÿ¥o˚ss: " << 
öputfûe
 << std::
ídl
;

462 
	g°d
::
ve˘‹
<
°d
::
°rög
>::
ôî©‹
 
ô
=
∑πs
.
begö
(); 
	gô
 !∑πs.
íd
(); ++it) {

463 
	g°d
::
°rög
 
öputfûe
 = *
ô
;

464 i‡(
	göputfûe
.
föd
(
¥efix
Ë=0 && 
öputfûe
.föd(".tmp"Ë=öputfûe.
≈os
) {

465 
öputfûe
 = 
dú«me
 + "/" + inputfile;

466 
	g°d
::
cout
 << "Pro˚ss: " << 
öputfûe
 << 
°d
::
ídl
;

467 
FILE
 * 
	göf
 = 
f›í
(
öputfûe
.
c_°r
(), "r");

468 i‡(
	göf
 =
NULL
) {

469 
log°ªam
(
LOG_FATAL
Ë<< "CouldÇŸÜﬂd :" << 
öputfûe
 << "Éº‹: " << 
°ªº‹
(
î∫o
Ë<< 
°d
::
ídl
;

471 
as£π
(
öf
 !
NULL
);

472 
log°ªam
(
LOG_INFO
Ë<< "Ródög i¿ˇssov¨y f‹m©!" << 
	g°d
::
ídl
;

474 
	gmaxÀn
 = 100000000;

475 * 
	gs
 = (*Ë
mÆloc
(
maxÀn
);

477 
size_t
 
	gbyã§ód
 = 0;

479 
	gdñims
[] = " \t";

480 
size_t
 
	glöíum
 = 0;

481 
size_t
 
	gœ°log
 = 0;

482 
fgës
(
s
, 
maxÀn
, 
öf
Ë!
NULL
) {

483 
löíum
++;

484 i‡(
	gbyã§ód
 - 
	gœ°log
 >= 500000000) {

485 
log°ªam
(
LOG_DEBUG
Ë<< "Ród " << 
löíum
 << "Üöes, " << 
byã§ód
 / 1024 / 1024. << " MB" << 
°d
::
ídl
;

486 
	gœ°log
 = 
byã§ód
;

488 
FIXLINE
(
s
);

489 
	gbyã§ód
 +
°æí
(
s
);

491 i‡(
	gs
[0] == '#') ;

492 i‡(
	gs
[0] == '%') ;

493 * 
	gt
 = 
°πok
(
s
, 
dñims
);

494 
vid_t
 
	g‰om
 = 
©oi
(
t
);

495 
	gt
 = 
°πok
(
NULL
,
dñims
);

496 i‡(
	gt
 !
NULL
) {

497 
vid_t
 
num
 = 
©oi
(
t
);

500 
	glöíum
 +
num
 + 1;

501 
vid_t
 
	gi
=0; i < 
	gnum
; i++) {

502 
	gs
 = 
fgës
(
s
, 
maxÀn
, 
öf
);

503 
FIXLINE
(
s
);

504 
vid_t
 
	gto
 = 
©oi
(
s
);

505 i‡(
	g‰om
 !
to
) {

506 
sh¨dîobj
.
¥ïro˚ssög_add_edge
(
‰om
, 
to
, 
EdgeD©aTy≥
());

512 
‰ì
(
s
);

513 
f˛o£
(
öf
);

522 
	gãm∂©e
 <
ty≥«me
 
	gEdgeD©aTy≥
,Åy≥«mê
	gFöÆEdgeD©aTy≥
>

523 
c⁄vît_böedgñi°
(
°d
::
°rög
 
ba£fûíame
, 
sh¨dî
<
EdgeD©aTy≥
, 
FöÆEdgeD©aTy≥
> &
sh¨dîobj
) {

524 
	g°d
::
ve˘‹
<
°d
::
°rög
> 
∑πs
;

525 
	g°d
::
°rög
 
dú«me
 = 
gë_dú«me
(
ba£fûíame
);

526 
	g°d
::
°rög
 
¥efix
 = 
gë_fûíame
(
ba£fûíame
);

528 
	g°d
::
cout
 << "dú=[" << 
dú«me
 << "]Öªfix=[" << 
¥efix
 << "]" << 
°d
::
ídl
;

529 
gëdú
(
dú«me
, 
∑πs
);

531 
	g°d
::
ve˘‹
<
°d
::
°rög
>::
ôî©‹
 
ô
=
∑πs
.
begö
(); 
	gô
 !∑πs.
íd
(); ++it) {

532 
	g°d
::
°rög
 
öputfûe
 = *
ô
;

533 i‡(
	göputfûe
.
föd
(
¥efix
Ë=0 && 
öputfûe
.föd("tmp"Ë=öputfûe.
≈os
) {

534 
°d
::
cout
 << "GoögÅÿ¥o˚ss: " << 
öputfûe
 << std::
ídl
;

538 
	g°d
::
ve˘‹
<
°d
::
°rög
>::
ôî©‹
 
ô
=
∑πs
.
begö
(); 
	gô
 !∑πs.
íd
(); ++it) {

539 
	g°d
::
°rög
 
öputfûe
 = *
ô
;

540 i‡(
	göputfûe
.
föd
(
¥efix
Ë=0 && 
öputfûe
.föd(".tmp"Ë=öputfûe.
≈os
) {

541 
öputfûe
 = 
dú«me
 + "/" + inputfile;

542 
	g°d
::
cout
 << "Pro˚ss: " << 
öputfûe
 << 
°d
::
ídl
;

543 
FILE
 * 
	göf
 = 
f›í
(
öputfûe
.
c_°r
(), "r");

545 !
„of
(
öf
)) {

546 
vid_t
 
	g‰om
;

547 
vid_t
 
	gto
;

549 
size_t
 
	gªs1
 = 
‰ód
(&
‰om
, (
vid_t
), 1, 
öf
);

550 
size_t
 
	gªs2
 = 
‰ód
(&
to
, (
vid_t
), 1, 
öf
);

552 
as£π
(
ªs1
 > 0 && 
ªs2
 > 0);

553 i‡(
	g‰om
 !
to
) {

554 
sh¨dîobj
.
¥ïro˚ssög_add_edge
(
‰om
, 
to
, 
EdgeD©aTy≥
());

557 
f˛o£
(
öf
);

563 
	gãm∂©e
 <
ty≥«me
 
	gEdgeD©aTy≥
,Åy≥«mê
	gFöÆEdgeD©aTy≥
>

564 
c⁄vît_böedgñi°vÆ
(
°d
::
°rög
 
ba£fûíame
, 
sh¨dî
<
EdgeD©aTy≥
, 
FöÆEdgeD©aTy≥
> &
sh¨dîobj
) {

565 
	g°d
::
ve˘‹
<
°d
::
°rög
> 
∑πs
;

566 
	g°d
::
°rög
 
dú«me
 = 
gë_dú«me
(
ba£fûíame
);

567 
	g°d
::
°rög
 
¥efix
 = 
gë_fûíame
(
ba£fûíame
);

569 
	g°d
::
cout
 << "dú=[" << 
dú«me
 << "]Öªfix=[" << 
¥efix
 << "]" << 
°d
::
ídl
;

570 
gëdú
(
dú«me
, 
∑πs
);

572 
	g°d
::
ve˘‹
<
°d
::
°rög
>::
ôî©‹
 
ô
=
∑πs
.
begö
(); 
	gô
 !∑πs.
íd
(); ++it) {

573 
	g°d
::
°rög
 
öputfûe
 = *
ô
;

574 i‡(
	göputfûe
.
föd
(
¥efix
Ë=0 && 
öputfûe
.föd("tmp"Ë=öputfûe.
≈os
) {

575 
°d
::
cout
 << "GoögÅÿ¥o˚ss: " << 
öputfûe
 << std::
ídl
;

579 
	g°d
::
ve˘‹
<
°d
::
°rög
>::
ôî©‹
 
ô
=
∑πs
.
begö
(); 
	gô
 !∑πs.
íd
(); ++it) {

580 
	g°d
::
°rög
 
öputfûe
 = *
ô
;

581 i‡(
	göputfûe
.
föd
(
¥efix
Ë=0 && 
öputfûe
.föd(".tmp"Ë=öputfûe.
≈os
) {

582 
öputfûe
 = 
dú«me
 + "/" + inputfile;

583 
	g°d
::
cout
 << "Pro˚ss: " << 
öputfûe
 << 
°d
::
ídl
;

584 
FILE
 * 
	göf
 = 
f›í
(
öputfûe
.
c_°r
(), "r");

586 !
„of
(
öf
)) {

587 
vid_t
 
	g‰om
;

588 
vid_t
 
	gto
;

589 
EdgeD©aTy≥
 
	gedgevÆ
;

591 
size_t
 
	gªs1
 = 
‰ód
(&
‰om
, (
vid_t
), 1, 
öf
);

592 
size_t
 
	gªs2
 = 
‰ód
(&
to
, (
vid_t
), 1, 
öf
);

593 
size_t
 
	gªs3
 = 
‰ód
(&
edgevÆ
, (
EdgeD©aTy≥
), 1, 
öf
);

594 
as£π
(
ªs1
 > 0 && 
ªs2
 > 0 && 
ªs3
 > 0);

595 i‡(
	g‰om
 !
to
) {

596 
sh¨dîobj
.
¥ïro˚ssög_add_edge
(
‰om
, 
to
, 
edgevÆ
);

599 
f˛o£
(
öf
);

611 
	gãm∂©e
 <
ty≥«me
 
	gEdgeD©aTy≥
,Åy≥«mê
	gFöÆEdgeD©aTy≥
>

612 
c⁄vît
(
°d
::
°rög
 
ba£fûíame
, std::°rög 
nsh¨ds_°rög
) {

613 
sh¨dî
<
EdgeD©aTy≥
, 
	gFöÆEdgeD©aTy≥
> 
sh¨dîobj
(
ba£fûíame
);

615 
	g°d
::
°rög
 
fûe_ty≥_°r
 = 
gë_›ti⁄_°rög_öãø˘ive
("filetype", "edgelist,ádjlist, binedgelist, metis");

616 i‡(
	gfûe_ty≥_°r
 !"adjli°" && 
fûe_ty≥_°r
 != "edgelist" && file_type_str != "binedgelist" &&

617 
fûe_ty≥_°r
 != "multivalueedgelist" && file_type_str != "metis") {

618 
log°ªam
(
LOG_ERROR
Ë<< "YouÇìdÅÿ•ecify fûëy≥: 'edgñi°', 'adjli°', 'böedgñi°', o∏'mëis'." << 
°d
::
ídl
;

619 
as£π
(
Ál£
);

623 
	gsh¨dîobj
.
°¨t_¥ïro˚ssög
();

625 i‡(
	gfûe_ty≥_°r
 == "adjlist") {

626 
c⁄vît_adjli°
<
EdgeD©aTy≥
, 
FöÆEdgeD©aTy≥
>(
ba£fûíame
, 
sh¨dîobj
);

627 } i‡(
	gfûe_ty≥_°r
 == "edgelist") {

628 
c⁄vît_edgñi°
<
EdgeD©aTy≥
, 
FöÆEdgeD©aTy≥
>(
ba£fûíame
, 
sh¨dîobj
);

629 #ifde‡
DYNAMICEDATA


630 } i‡(
	gfûe_ty≥_°r
 == "multivalueedgelist" ) {

631 
c⁄vît_edgñi°
<
EdgeD©aTy≥
, 
FöÆEdgeD©aTy≥
>(
ba£fûíame
, 
sh¨dîobj
, 
åue
);

633 } i‡(
	gfûe_ty≥_°r
 == "binedgelist") {

634 
c⁄vît_böedgñi°vÆ
<
EdgeD©aTy≥
, 
FöÆEdgeD©aTy≥
>(
ba£fûíame
, 
sh¨dîobj
);

635 } i‡(
	gfûe_ty≥_°r
 == "metis") {

636 
c⁄vît_mëis
<
EdgeD©aTy≥
, 
FöÆEdgeD©aTy≥
>(
ba£fûíame
, 
sh¨dîobj
);

638 
as£π
(
Ál£
);

642 
	gsh¨dîobj
.
íd_¥ïro˚ssög
();

644 
vid_t
 
	gmax_vîãx_id
 = 
gë_›ti⁄_öt
("maxvertex", 0);

645 i‡(
	gmax_vîãx_id
 > 0) {

646 
	gsh¨dîobj
.
£t_max_vîãx_id
(
max_vîãx_id
);

649 
	gnsh¨ds
 = 
sh¨dîobj
.
execuã_sh¨dög
(
nsh¨ds_°rög
);

650 
log°ªam
(
LOG_INFO
Ë<< "Suc˚ssfuŒy föished sh¨dög f‹ " << 
	gba£fûíame
 << 
	g°d
::
ídl
;

651 
log°ªam
(
LOG_INFO
Ë<< "Cª©ed " << 
	gnsh¨ds
 << " sh¨ds." << 
	g°d
::
ídl
;

652  
	gnsh¨ds
;

660 
VARIABLE_IS_NOT_USED
 
c⁄vît_n⁄e
(
°d
::
°rög
 
ba£fûíame
, std::°rög 
nsh¨ds_°rög
);

661 
VARIABLE_IS_NOT_USED
 
c⁄vît_n⁄e
(
°d
::
°rög
 
ba£fûíame
, std::°rög 
nsh¨ds_°rög
) {

662 
sh¨dî
<
dummy
> 
sh¨dîobj
(
ba£fûíame
);

663 
	gsh¨dîobj
.
£t_no_edgevÆues
();

665 
	g°d
::
°rög
 
fûe_ty≥_°r
 = 
gë_›ti⁄_°rög_öãø˘ive
("filetype", "edgelist,ádjlist, cassovary, binedgelist");

666 i‡(
	gfûe_ty≥_°r
 !"adjli°" && 
fûe_ty≥_°r
 != "edgelist" && file_type_str != "cassovary" && file_type_str != "binedgelist" && file_type_str != "metis") {

667 
log°ªam
(
LOG_ERROR
Ë<< "YouÇìdÅÿ•ecify fûëy≥: 'edgñi°' o∏'adjli°'." << 
°d
::
ídl
;

668 
as£π
(
Ál£
);

672 
	gsh¨dîobj
.
°¨t_¥ïro˚ssög
();

674 i‡(
	gfûe_ty≥_°r
 == "adjlist") {

675 
c⁄vît_adjli°
<
dummy
>(
ba£fûíame
, 
sh¨dîobj
);

676 } i‡(
	gfûe_ty≥_°r
 == "edgelist") {

677 
c⁄vît_edgñi°
<
dummy
>(
ba£fûíame
, 
sh¨dîobj
);

678 } i‡(
	gfûe_ty≥_°r
 == "cassovary") {

679 
c⁄vît_ˇssov¨y
<
dummy
>(
ba£fûíame
, 
sh¨dîobj
);

680 } i‡(
	gfûe_ty≥_°r
 == "binedgelist") {

681 
c⁄vît_böedgñi°
<
dummy
>(
ba£fûíame
, 
sh¨dîobj
);

682 } i‡(
	gfûe_ty≥_°r
 == "metis") {

683 
c⁄vît_mëis
<
dummy
>(
ba£fûíame
, 
sh¨dîobj
);

687 
	gsh¨dîobj
.
íd_¥ïro˚ssög
();

689 i‡(
gë_›ti⁄_öt
("skipsharding", 0) == 1) {

690 
°d
::
cout
 << "Skù sh¨dög..." << std::
ídl
;

691 
exô
(0);

694 
vid_t
 
	gmax_vîãx_id
 = 
gë_›ti⁄_öt
("maxvertex", 0);

695 i‡(
	gmax_vîãx_id
 > 0) {

696 
	gsh¨dîobj
.
£t_max_vîãx_id
(
max_vîãx_id
);

699 
	gnsh¨ds
 = 
sh¨dîobj
.
execuã_sh¨dög
(
nsh¨ds_°rög
);

700 
log°ªam
(
LOG_INFO
Ë<< "Suc˚ssfuŒy föished sh¨dög f‹ " << 
	gba£fûíame
 << 
	g°d
::
ídl
;

701 
log°ªam
(
LOG_INFO
Ë<< "Cª©ed " << 
	gnsh¨ds
 << " sh¨ds." << 
	g°d
::
ídl
;

702  
	gnsh¨ds
;

705 
	gãm∂©e
 <
ty≥«me
 
	gEdgeD©aTy≥
>

706 
c⁄vît_if_nŸexi°s_novÆues
(
°d
::
°rög
 
ba£fûíame
, std::°rög 
nsh¨ds_°rög
, 
boﬁ
 &
didexi°
) {

707 
	gnsh¨ds
;

710 i‡((
	gnsh¨ds
 = 
föd_sh¨ds
<
EdgeD©aTy≥
>(
ba£fûíame
, 
	gnsh¨ds_°rög
))) {

711 
log°ªam
(
LOG_INFO
Ë<< "FoundÖª¥o˚s£d fûe†f‹ " << 
	gba£fûíame
 << ",Çum sh¨ds=" << 
	gnsh¨ds
 << 
	g°d
::
ídl
;

712 
	gdidexi°
 = 
åue
;

713 i‡(
	gcheck_‹igfûe_modifiˇti⁄_óæõr
<
	gEdgeD©aTy≥
>(
	gba£fûíame
, 
	gnsh¨ds
)) {

714  
	gnsh¨ds
;

718 
	gdidexi°
 = 
Ál£
;

720 
log°ªam
(
LOG_INFO
Ë<< "DidÇŸ födÖª¥o˚s£d sh¨d†f‹ " << 
	gba£fûíame
 << 
	g°d
::
ídl
;

722 
log°ªam
(
LOG_INFO
Ë<< "(Edge-vÆuêsize: " << (
	gEdgeD©aTy≥
Ë<< ")" << 
	g°d
::
ídl
;

723 
log°ªam
(
LOG_INFO
Ë<< "Wû»åy cª©êthemÇow..." << 
	g°d
::
ídl
;

724 
	gnsh¨ds
 = 
c⁄vît
<
dummyC
<
EdgeD©aTy≥
>, 
	gEdgeD©aTy≥
>(
	gba£fûíame
, 
	gnsh¨ds_°rög
);

725  
	gnsh¨ds
;

728 
	gãm∂©e
 <
ty≥«me
 
	gEdgeD©aTy≥
>

729 
c⁄vît_if_nŸexi°s
(
°d
::
°rög
 
ba£fûíame
, std::°rög 
nsh¨ds_°rög
, 
boﬁ
 &
didexi°
) {

730 
	gnsh¨ds
;

733 i‡((
	gnsh¨ds
 = 
föd_sh¨ds
<
EdgeD©aTy≥
>(
ba£fûíame
, 
	gnsh¨ds_°rög
))) {

734 
log°ªam
(
LOG_INFO
Ë<< "FoundÖª¥o˚s£d fûe†f‹ " << 
	gba£fûíame
 << ",Çum sh¨ds=" << 
	gnsh¨ds
 << 
	g°d
::
ídl
;

735 
	gdidexi°
 = 
åue
;

736 i‡(
	gcheck_‹igfûe_modifiˇti⁄_óæõr
<
	gEdgeD©aTy≥
>(
	gba£fûíame
, 
	gnsh¨ds
)) {

737  
	gnsh¨ds
;

741 
	gdidexi°
 = 
Ál£
;

743 
log°ªam
(
LOG_INFO
Ë<< "DidÇŸ födÖª¥o˚s£d sh¨d†f‹ " << 
	gba£fûíame
 << 
	g°d
::
ídl
;

745 
log°ªam
(
LOG_INFO
Ë<< "(Edge-vÆuêsize: " << (
	gEdgeD©aTy≥
Ë<< ")" << 
	g°d
::
ídl
;

746 
log°ªam
(
LOG_INFO
Ë<< "Wû»åy cª©êthemÇow..." << 
	g°d
::
ídl
;

747 
	gnsh¨ds
 = 
c⁄vît
<
EdgeD©aTy≥
, 
	gEdgeD©aTy≥
>(
	gba£fûíame
, 
	gnsh¨ds_°rög
);

748  
	gnsh¨ds
;

752 
	gãm∂©e
 <
ty≥«me
 
	gEdgeD©aTy≥
,Åy≥«mê
	gFöÆEdgeTy≥
>

753 
c⁄vît_if_nŸexi°s
(
°d
::
°rög
 
ba£fûíame
, std::°rög 
nsh¨ds_°rög
, 
boﬁ
 &
didexi°
) {

754 
	gnsh¨ds
;

757 i‡((
	gnsh¨ds
 = 
föd_sh¨ds
<
FöÆEdgeTy≥
>(
ba£fûíame
, 
	gnsh¨ds_°rög
))) {

758 
log°ªam
(
LOG_INFO
Ë<< "FoundÖª¥o˚s£d fûe†f‹ " << 
	gba£fûíame
 << ",Çum sh¨ds=" << 
	gnsh¨ds
 << 
	g°d
::
ídl
;

759 
	gdidexi°
 = 
åue
;

760 i‡(
	gcheck_‹igfûe_modifiˇti⁄_óæõr
<
	gFöÆEdgeTy≥
>(
	gba£fûíame
, 
	gnsh¨ds
)) {

761  
	gnsh¨ds
;

765 
	gdidexi°
 = 
Ál£
;

767 
log°ªam
(
LOG_INFO
Ë<< "DidÇŸ födÖª¥o˚s£d sh¨d†f‹ " << 
	gba£fûíame
 << 
	g°d
::
ídl
;

768 
log°ªam
(
LOG_INFO
Ë<< "(Edge-vÆuêsize: " << (
	gFöÆEdgeTy≥
Ë<< ")" << 
	g°d
::
ídl
;

769 
log°ªam
(
LOG_INFO
Ë<< "Wû»åy cª©êthemÇow..." << 
	g°d
::
ídl
;

770 
	gnsh¨ds
 = 
c⁄vît
<
EdgeD©aTy≥
, 
	gFöÆEdgeTy≥
>(
	gba£fûíame
, 
	gnsh¨ds_°rög
);

771  
	gnsh¨ds
;

774 
	gãm∂©e
 <
ty≥«me
 
	gEdgeD©aTy≥
,Åy≥«mê
	gFöÆEdgeTy≥
>

775 
c⁄vît_if_nŸexi°s
(
°d
::
°rög
 
ba£fûíame
, std::°rög 
nsh¨ds_°rög
) {

776 
boﬁ
 
b
;

777  
	gc⁄vît_if_nŸexi°s
<
	gEdgeD©aTy≥
, 
	gFöÆEdgeTy≥
>(
	gba£fûíame
, 
	gnsh¨ds_°rög
, 
	gb
);

780 
	gãm∂©e
 <
ty≥«me
 
	gEdgeD©aTy≥
>

781 
c⁄vît_if_nŸexi°s
(
°d
::
°rög
 
ba£fûíame
, std::°rög 
nsh¨ds_°rög
) {

782 
boﬁ
 
b
;

783  
	gc⁄vît_if_nŸexi°s
<
	gEdgeD©aTy≥
, EdgeD©aTy≥>(
	gba£fûíame
, 
	gnsh¨ds_°rög
, 
	gb
);

786 
	gãm∂©e
 <
ty≥«me
 
	gEdgeD©aTy≥
>

787 
c⁄vît_if_nŸexi°s_novÆues
(
°d
::
°rög
 
ba£fûíame
, std::°rög 
nsh¨ds_°rög
) {

788 
boﬁ
 
b
;

789  
	gc⁄vît_if_nŸexi°s_novÆues
<
	gEdgeD©aTy≥
>(
	gba£fûíame
, 
	gnsh¨ds_°rög
, 
	gb
);

	@preprocessing/sharder.hpp

35 #i‚de‡
GRAPHCHI_SHARDER_DEF


36 
	#GRAPHCHI_SHARDER_DEF


	)

39 
	~<io°ªam
>

40 
	~<c°dio
>

41 
	~<f˙é.h
>

42 
	~<uni°d.h
>

43 
	~<sys/°©.h
>

45 
	~<ve˘‹
>

46 
	~<omp.h
>

47 
	~<î∫o.h
>

48 
	~<s°ªam
>

49 
	~<°rög
>

51 
	~"≠i/chifûíames.hµ
"

52 
	~"≠i/gøphchi_c⁄ãxt.hµ
"

53 
	~"gøphchi_ty≥s.hµ
"

54 
	~"io/°rùedio.hµ
"

55 
	~"loggî/loggî.hµ
"

56 
	~"ígöe/auxd©a/degªe_d©a.hµ
"

57 
	~"mërics/mërics.hµ
"

58 
	~"mërics/ªps/basic_ªp‹ãr.hµ
"

59 
	~"sh¨ds/mem‹ysh¨d.hµ
"

60 
	~"sh¨ds/¶idögsh¨d.hµ
"

61 
	~"ouçut/ouçut.hµ
"

62 
	~"utû/ioutû.hµ
"

63 
	~"utû/ødixS‹t.hµ
"

64 
	~"utû/kwaymîge.hµ
"

65 #ifde‡
DYNAMICEDATA


66 
	~"utû/qs‹t.hµ
"

68 
«me•a˚
 
	ggøphchi
 {

69 
	gãm∂©e
 <
ty≥«me
 
	gVT
,Åy≥«mê
	gET
,Åy≥«mê
	gETFöÆ
> 
˛ass
 
	gsh¨ded_gøph_ouçut
;

72 
	#SHARDER_BUFSIZE
 (64 * 1024 * 1024)

	)

74 
	eProcPha£
 { 
	gCOMPUTE_INTERVALS
=1, 
	gSHOVEL
=2 };

76 
	gãm∂©e
 <
ty≥«me
 
	gEdgeD©aTy≥
>

77 ˛as†
	cDu∂iˇãEdgeFûãr
 {

78 
	gpublic
:

79 
vútuÆ
 
boﬁ
 
ac˚±Fú°
(
EdgeD©aTy≥
& 
fú°
, EdgeD©aTy≥& 
£c⁄d
) = 0;

83 
	gãm∂©e
 <
ty≥«me
 
	gEdgeD©aTy≥
>

84 
	sedge_wôh_vÆue
 {

85 
vid_t
 
	g§c
;

86 
vid_t
 
	gd°
;

87 
EdgeD©aTy≥
 
	gvÆue
;

89 #ifde‡
DYNAMICEDATA


92 
boﬁ
 
	gis_chivec_vÆue
;

93 
uöt16_t
 
	gvÆödex
;

95 
edge_wôh_vÆue
() {}

97 
edge_wôh_vÆue
(
vid_t
 
§c
, vid_à
d°
, 
EdgeD©aTy≥
 
vÆue
) : src(src), dst(dst), value(value) {

98 #ifde‡
DYNAMICEDATA


99 
	gis_chivec_vÆue
 = 
Ál£
;

100 
	gvÆödex
 = 0;

105 
boﬁ
 
	g›î©‹
< (
	gedge_wôh_vÆue
<
	gEdgeD©aTy≥
> &
	gx2
) {

106  (
	gd°
 < 
	gx2
.dst);

110 
boﬁ
 
°›≥r
(Ë{  
	g§c
 =0 && 
d°
 == 0; }

113 
	gãm∂©e
 <
ty≥«me
 
	gEdgeD©aTy≥
>

114 
boﬁ
 
edge_t_§c_Àss
(c⁄° 
edge_wôh_vÆue
<
EdgeD©aTy≥
> &
a
, c⁄°Édge_wôh_vÆue<EdgeD©aTy≥> &
b
) {

115 i‡(
	ga
.
	g§c
 =
b
.
§c
) {

116 #ifde‡
DYNAMICEDATA


117 i‡(
a
.
d°
 =
b
.dst) {

118  
a
.
vÆödex
 < 
b
.valindex;

121  
	ga
.
	gd°
 < 
	gb
.dst;

123  
	ga
.
	g§c
 < 
	gb
.src;

126 
	gãm∂©e
 <
ty≥«me
 
	gEdgeD©aTy≥
>

127 
boﬁ
 
edge_t_d°_Àss
(c⁄° 
edge_wôh_vÆue
<
EdgeD©aTy≥
> &
a
, c⁄°Édge_wôh_vÆue<EdgeD©aTy≥> &
b
) {

128  
	ga
.
	gd°
 < 
	gb
.dst;

131 
	gãm∂©e
 <
˛ass
 
	gEdgeD©aTy≥
>

132 
	sd°F
 {

133 
ölöe
 
vid_t
 
›î©‹
(Ë(
	gedge_wôh_vÆue
<
	gEdgeD©aTy≥
> 
	ga
Ë{á.
	gd°
;}

138 
	gãm∂©e
 <
˛ass
 
	gEdgeD©aTy≥
>

139 
	sd°SrcF
 {

140 
size_t
 
	gmaxvîãx
;

141 
d°SrcF
(
vid_t
 
maxvîãx
) : maxvertex(maxvertex + 1) {}

142 
ölöe
 
size_t
 
›î©‹
(Ë(
edge_wôh_vÆue
<
EdgeD©aTy≥
> 
a
Ë{ size_t◊.
d°
Ë* 
maxvîãx
 +á.
§c
;}

145 
	gãm∂©e
 <
˛ass
 
	gEdgeD©aTy≥
>

146 
	s§cF
 {
ölöe
 
vid_t
 
›î©‹
(Ë(
	gedge_wôh_vÆue
<
	gEdgeD©aTy≥
> 
	ga
Ë{á.
	g§c
;} };

150 
	gãm∂©e
 <
ty≥«me
 
	gEdgeD©aTy≥
>

151 
	ssh¨d_Êushöfo
 {

152 
	g°d
::
°rög
 
shovñ«me
;

153 
size_t
 
	gnumedges
;

154 
	gedge_wôh_vÆue
<
	gEdgeD©aTy≥
> * 
	gbuf„r
;

155 
vid_t
 
	gmax_vîãx
;

156 
	gDu∂iˇãEdgeFûãr
<
	gEdgeD©aTy≥
> * 
	gdu∂iˇã_fûãr
;

158 
sh¨d_Êushöfo
(
°d
::
°rög
 
shovñ«me
, 
vid_t
 
max_vîãx
, 
size_t
 
numedges
, 
edge_wôh_vÆue
<
EdgeD©aTy≥
> * 
buf„r
, 
Du∂iˇãEdgeFûãr
<EdgeD©aTy≥> * 
du∂iˇã_fûãr
) :

159 
shovñ«me
(shovñ«me), 
numedges
“umedges), 
buf„r
(buf„r), 
max_vîãx
(max_vîãx), 
du∂iˇã_fûãr
(duplicate_filter) {}

161 
Êush
() {

165 i‡(
	gdu∂iˇã_fûãr
 !
NULL
) {

167 
log°ªam
(
LOG_INFO
Ë<< "S‹tög shovñ: " << 
shovñ«me
 << ", max:" << 
max_vîãx
 << 
°d
::
ídl
;

168 
iS‹t
(
buf„r
, (
ötT
)
numedges
, i¡T(
max_vîãx
)*ötT(max_vîãx)+ötT(max_vîãx), 
d°SrcF
<
EdgeD©aTy≥
>(max_vertex));

169 
log°ªam
(
LOG_INFO
Ë<< "S‹àd⁄e." << 
	gshovñ«me
 << 
	g°d
::
ídl
;

171 
	gedge_wôh_vÆue
<
	gEdgeD©aTy≥
> * 
	gtmpbuf
 = (
edge_wôh_vÆue
<
EdgeD©aTy≥
> *Ë
ˇŒoc
(”dge_wôh_vÆue<EdgeD©aTy≥>), 
numedges
);

172 
size_t
 
	gi
 = 1;

173 
	gtmpbuf
[0] = 
buf„r
[0];

174 
size_t
 
	gj
=1; j<
	gnumedges
; j++) {

175 
	gedge_wôh_vÆue
<
	gEdgeD©aTy≥
> 
	g¥ev
 = 
tmpbuf
[
i
 - 1];

176 
	gedge_wôh_vÆue
<
	gEdgeD©aTy≥
> 
	gcur
 = 
buf„r
[
j
];

177 i‡(
	g¥ev
.
	g§c
 =
cur
.
§c
 && 
¥ev
.
d°
 == cur.dst) {

178 i‡(
du∂iˇã_fûãr
->
ac˚±Fú°
(
cur
.
vÆue
, 
¥ev
.value)) {

180 
tmpbuf
[
i
 - 1] = 
cur
;

183 
	gtmpbuf
[
i
++] = 
cur
;

186 
	g°d
::
cout
 << "Pª-du∂iˇã fûã∏whûêshovñög: " << 
numedges
 << " --> " << 
i
 << 
°d
::
ídl
;

187 
	gnumedges
 = 
i
;

188 
‰ì
(
buf„r
);

189 
	gbuf„r
 = 
tmpbuf
;

191 
log°ªam
(
LOG_INFO
Ë<< "S‹tög shovñ: " << 
	gshovñ«me
 << ", max:" << 
	gmax_vîãx
 << 
	g°d
::
ídl
;

192 
iS‹t
(
buf„r
, (
ötT
)
numedges
, (ötT)
max_vîãx
, 
d°F
<
EdgeD©aTy≥
>());

193 
log°ªam
(
LOG_INFO
Ë<< "S‹àd⁄e." << 
	gshovñ«me
 << 
	g°d
::
ídl
;

198 
	gf
 = 
›í
(
shovñ«me
.
c_°r
(), 
O_WRONLY
 | 
O_CREAT
, 
S_IROTH
 | 
S_IWOTH
 | 
S_IWUSR
 | 
S_IRUSR
);

199 
wrôó
(
f
, 
buf„r
, 
numedges
 * (
edge_wôh_vÆue
<
EdgeD©aTy≥
>));

200 
˛o£
(
f
);

201 
‰ì
(
buf„r
);

206 
	gãm∂©e
 <
ty≥«me
 
	gEdgeD©aTy≥
>

207 * 
	$sh¨d_Êush_run
(* 
_öfo
) {

208 
sh¨d_Êushöfo
<
EdgeD©aTy≥
> * 
èsk
 = (sh¨d_Êushöfo<EdgeD©aTy≥>*)
_öfo
;

209 
èsk
->
	`Êush
();

210  
NULL
;

211 
	}
}

214 
	gãm∂©e
 <
ty≥«me
 
	gEdgeD©aTy≥
>

215 
	gshovñ_mîge_sour˚
 : 
public
 
mîge_sour˚
<
edge_wôh_vÆue
<
EdgeD©aTy≥
> > {

217 
size_t
 
bufsize_byãs
;

218 
size_t
 
	gbufsize_edges
;

219 
	g°d
::
°rög
 
shovñfûe
;

220 
size_t
 
	gidx
;

221 
size_t
 
	gbufidx
;

222 
	gedge_wôh_vÆue
<
	gEdgeD©aTy≥
> * 
	gbuf„r
;

223 
	gf
;

224 
size_t
 
	gnumedges
;

226 
shovñ_mîge_sour˚
(
size_t
 
bufsize_byãs
, 
°d
::
°rög
 
shovñfûe
) : bufsize_bytes(bufsize_bytes),

227 
shovñfûe
(shovñfûe), 
idx
(0), 
bufidx
(0) {

228 
as£π
(
bufsize_byãs
 % (
edge_wôh_vÆue
<
EdgeD©aTy≥
>) == 0);

229 
	gf
 = 
›í
(
shovñfûe
.
c_°r
(), 
O_RDONLY
);

231 i‡(
	gf
 < 0) {

232 
log°ªam
(
LOG_ERROR
Ë<< "CouldÇŸ o≥¿shovñ fûe: " << 
	gshovñfûe
 << 
	g°d
::
ídl
;

233 
¥ötf
("Eº‹: %d, %s\n", 
î∫o
, 
°ªº‹
(errno));

236 
as£π
(
f
>=0);

238 
	gbuf„r
 = (
edge_wôh_vÆue
<
EdgeD©aTy≥
> *Ë
mÆloc
(
bufsize_byãs
);

239 
	gnumedges
 = (
gë_fûesize
(
shovñfûe
Ë/ (
edge_wôh_vÆue
<
EdgeD©aTy≥
> ));

240 
	gbufsize_edges
 = (
bufsize_byãs
 / (
edge_wôh_vÆue
<
EdgeD©aTy≥
>));

241 
lﬂd_√xt
();

244 
	gvútuÆ
 ~
shovñ_mîge_sour˚
() {

245 i‡(
	gbuf„r
 !
NULL
Ë
‰ì
(
buf„r
);

246 
	gbuf„r
 = 
NULL
;

249 
föish
() {

250 
˛o£
(
f
);

251 
ªmove
(
shovñfûe
.
c_°r
());

253 
‰ì
(
buf„r
);

254 
	gbuf„r
 = 
NULL
;

257 
lﬂd_√xt
() {

258 
size_t
 
	gÀn
 = 
°d
::
mö
(
bufsize_byãs
, ((
numedges
 - 
idx
Ë* (
edge_wôh_vÆue
<
EdgeD©aTy≥
>)));

259 
¥óda
(
f
, 
buf„r
, 
Àn
, 
idx
 * (
edge_wôh_vÆue
<
EdgeD©aTy≥
>));

260 
	gbufidx
 = 0;

263 
boﬁ
 
has_m‹e
() {

264  
	gidx
 < 
	gnumedges
;

267 
	gedge_wôh_vÆue
<
	gEdgeD©aTy≥
> 
√xt
() {

268 i‡(
	gbufidx
 =
bufsize_edges
) {

269 
lﬂd_√xt
();

271 
	gidx
++;

272 i‡(
	gidx
 =
numedges
) {

273 
edge_wôh_vÆue
<
EdgeD©aTy≥
> 
x
 = 
buf„r
[
bufidx
++];

274 
föish
();

275  
	gx
;

277  
	gbuf„r
[
bufidx
++];

281 
	gãm∂©e
 <
ty≥«me
 
	gEdgeD©aTy≥
,Åy≥«mê
	gFöÆEdgeD©aTy≥
=
EdgeD©aTy≥
>

282 
˛ass
 
sh¨dî
 : 
public
 
mîge_sök
<
edge_wôh_vÆue
<
EdgeD©aTy≥
> > {

284 
edge_wôh_vÆue
<
	tEdgeD©aTy≥
> 
	tedge_t
;

286 
	g¥Ÿe˘ed
:

287 
°d
::
°rög
 
ba£fûíame
;

289 
vid_t
 
	gmax_vîãx_id
;

292 
	gnsh¨ds
;

293 
	g°d
::
ve˘‹
< 
°d
::
∑ú
<
vid_t
, 
	gvid_t
> > 
	göãrvÆs
;

295 
	gpha£
;

297 
	gvîãxchunk
;

298 
size_t
 
	g√dges
;

299 
	g°d
::
°rög
 
¥efix
;

301 
	gcom¥es£d_block_size
;

303 * 
	gbuÂås
;

304 
size_t
 
	gbufsize
;

305 
size_t
 
	gedged©asize
;

306 
size_t
 
	gebuf„r_size
;

307 
size_t
 
	gedges_≥r_block
;

309 
vid_t
 
	gfûãr_max_vîãx
;

311 
	gDu∂iˇãEdgeFûãr
<
	gEdgeD©aTy≥
> * 
	gdu∂iˇã_edge_fûãr
;

313 
boﬁ
 
	gno_edgevÆues
;

314 #ifde‡
DYNAMICEDATA


315 
edge_t
 
	gœ°_added_edge
;

318 
mërics
 
	gm
;

321 
size_t
 
	gcurshovñ_idx
;

322 
size_t
 
	gshovñsize
;

323 
	gnumshovñs
;

324 
size_t
 
	gshovñed_edges
;

325 
boﬁ
 
	gshovñ_s‹ãd
;

326 
	gedge_wôh_vÆue
<
	gEdgeD©aTy≥
> * 
	gcurshovñ_buf„r
;

327 
	g°d
::
ve˘‹
<
±hªad_t
> 
shovñthªads
;

328 
	g°d
::
ve˘‹
<
sh¨d_Êushöfo
<
EdgeD©aTy≥
> *> 
shovñèsks
;

330 
	gpublic
:

332 
sh¨dî
(
°d
::
°rög
 
ba£fûíame
Ë: ba£fûíame(ba£fûíame), 
m
("sharder") {

334 
	gedged©asize
 = (
FöÆEdgeD©aTy≥
);

335 
	gno_edgevÆues
 = 
Ál£
;

336 
	gcom¥es£d_block_size
 = 1024 * 1024;

337 
	gfûãr_max_vîãx
 = 0;

338 
	gcurshovñ_buf„r
 = 
NULL
;

339 
	gcom¥es£d_block_size
 % (
	gFöÆEdgeD©aTy≥
Ë!0Ë
com¥es£d_block_size
++;

340 
	gedges_≥r_block
 = 
com¥es£d_block_size
 / (
FöÆEdgeD©aTy≥
);

341 
	gdu∂iˇã_edge_fûãr
 = 
NULL
;

345 
	gvútuÆ
 ~
sh¨dî
() {

346 i‡(
	gcurshovñ_buf„r
 =
NULL
Ë
‰ì
(
curshovñ_buf„r
);

349 
£t_du∂iˇã_fûãr
(
Du∂iˇãEdgeFûãr
<
EdgeD©aTy≥
> * 
fûãr
) {

350 
	gthis
->
	gdu∂iˇã_edge_fûãr
 = 
fûãr
;

353 
£t_max_vîãx_id
(
vid_t
 
maxid
) {

354 
	gfûãr_max_vîãx
 = 
maxid
;

357 
£t_no_edgevÆues
() {

358 
	gno_edgevÆues
 = 
åue
;

364 
°¨t_¥ïro˚ssög
() {

365 
	gm
.
°¨t_time
("preprocessing");

366 
	gnumshovñs
 = 0;

367 
	gshovñsize
 = (1024»* 1024»* 
size_t
(
gë_›ti⁄_öt
("membudgë_mb", 1024)Ë/ 4»/ (
	gedge_wôh_vÆue
<
	gEdgeD©aTy≥
>));

368 
	gcurshovñ_idx
 = 0;

370 
log°ªam
(
LOG_INFO
Ë<< "SèπögÖª¥o˚ssög, shovñ size: " << 
	gshovñsize
 << 
	g°d
::
ídl
;

372 
	gcurshovñ_buf„r
 = (
edge_wôh_vÆue
<
EdgeD©aTy≥
> *Ë
ˇŒoc
(
shovñsize
, (edge_with_value<EdgeDataType>));

374 
as£π
(
curshovñ_buf„r
 !
NULL
);

376 
	gshovñthªads
.
˛ór
();

379 
	gmax_vîãx_id
 = 0;

380 
	gshovñed_edges
 = 0;

386 
íd_¥ïro˚ssög
() {

387 
	gm
.
°›_time
("preprocessing");

388 
Êush_shovñ
(
Ál£
);

391 
Êush_shovñ
(
boﬁ
 
async
=
åue
) {

393 
sh¨d_Êushöfo
<
EdgeD©aTy≥
> * 
Êushöfo
 = 
√w
 sh¨d_Êushöfo<EdgeD©aTy≥>(
shovñ_fûíame
(
numshovñs
), 
	gmax_vîãx_id
, 
	gcurshovñ_idx
, 
	gcurshovñ_buf„r
, 
	gdu∂iˇã_edge_fûãr
);

394 
	gshovñèsks
.
push_back
(
Êushöfo
);

396 i‡(!
	gasync
) {

397 
	gcurshovñ_buf„r
 = 
NULL
;

398 
	gÊushöfo
->
Êush
();

401 
log°ªam
(
LOG_INFO
Ë<< "Waôög shovñögÅhªads..." << 
	g°d
::
ídl
;

402 
	gi
=0; i < ()
	gshovñthªads
.
size
(); i++) {

403 
±hªad_joö
(
shovñthªads
[
i
], 
NULL
);

406 i‡(
	gshovñthªads
.
size
() > 2) {

407 
log°ªam
(
LOG_INFO
Ë<< "Toÿm™y out°™dög shovñögÅhªads..." << 
	g°d
::
ídl
;

409 
	gi
=0; i < ()
	gshovñthªads
.
size
(); i++) {

410 
±hªad_joö
(
shovñthªads
[
i
], 
NULL
);

412 
	gshovñthªads
.
˛ór
();

414 
	gcurshovñ_buf„r
 = (
edge_wôh_vÆue
<
EdgeD©aTy≥
> *Ë
ˇŒoc
(
shovñsize
, (edge_with_value<EdgeDataType>));

415 
±hªad_t
 
	gt
;

416 
	gªt
 = 
±hªad_¸óã
(&
t
, 
NULL
, 
sh¨d_Êush_run
<
EdgeD©aTy≥
>, (*)
Êushöfo
);

417 
	gshovñthªads
.
push_back
(
t
);

418 
as£π
(
ªt
>=0);

420 
	gnumshovñs
++;

421 
	gcurshovñ_idx
=0;

427 
¥ïro˚ssög_add_edge
(
vid_t
 
‰om
, vid_à
to
, 
EdgeD©aTy≥
 
vÆ
, 
boﬁ
 
öput_vÆue
=
Ál£
) {

428 i‡(
‰om
 =
to
) {

432 
	gedge_wôh_vÆue
<
	gEdgeD©aTy≥
> 
e
(
‰om
, 
to
, 
vÆ
);

433 #ifde‡
DYNAMICEDATA


434 
	ge
.
	gis_chivec_vÆue
 = 
öput_vÆue
;

435 i‡(
	ge
.
	g§c
 =
œ°_added_edge
.
§c
 && 
e
.
d°
 ==Üast_added_edge.dst) {

436 
e
.
vÆödex
 = 
œ°_added_edge
.valindex + 1;

438 
	gœ°_added_edge
 = 
e
;

440 
	gcurshovñ_buf„r
[
curshovñ_idx
++] = 
e
;

441 i‡(
	gcurshovñ_idx
 =
shovñsize
) {

442 
Êush_shovñ
();

445 
	gmax_vîãx_id
 = 
°d
::
max
(°d::max(
‰om
, 
to
), 
max_vîãx_id
);

448 #ifde‡
DYNAMICEDATA


449 
¥ïro˚ssög_add_edge_mu…ivÆ
(
vid_t
 
‰om
, vid_à
to
, 
°d
::
ve˘‹
<
EdgeD©aTy≥
> & 
vÆs
) {

450 
ty≥«me
 
°d
::
ve˘‹
<
EdgeD©aTy≥
>::
ôî©‹
 
ôî
;

451 
	gôî
=
vÆs
.
begö
(); iã∏!vÆs.
íd
(); ++iter) {

452 
¥ïro˚ssög_add_edge
(
‰om
, 
to
, *
ôî
, 
åue
);

454 
	gmax_vîãx_id
 = 
°d
::
max
(°d::max(
‰om
, 
to
), 
max_vîãx_id
);

462 
¥ïro˚ssög_add_edge
(
vid_t
 
‰om
, vid_à
to
) {

463 
¥ïro˚ssög_add_edge
(
‰om
, 
to
, 
EdgeD©aTy≥
());

466 
size_t
 
	gcuødjfûïos
;

469 
	gãm∂©e
 <
ty≥«me
 
	gT
>

470 
bwrôe
(
f
, * 
buf
, * &
buÂå
, 
T
 
vÆ
) {

471 
	gcuødjfûïos
 +(
T
);

472 i‡(
	gbuÂå
 + (
	gT
Ë- 
	gbuf
 >
SHARDER_BUFSIZE
) {

473 
wrôó
(
f
, 
buf
, 
buÂå
 - buf);

474 
	gbuÂå
 = 
buf
;

476 *((
	gT
*)
	gbuÂå
Ë
vÆ
;

477 
	gbuÂå
 +(
T
);

480 
	gblockid
;

482 
	gãm∂©e
 <
ty≥«me
 
	gT
>

483 
ed©a_Êush
(* 
buf
, * 
buÂå
, 
°d
::
°rög
 & 
sh¨d_fûíame
, 
size_t
 
tŸbyãs
) {

484 
	gÀn
 = (Ë(
buÂå
 - 
buf
);

486 
	gm
.
°¨t_time
("edata_flush");

488 
	g°d
::
°rög
 
block_fûíame
 = 
fûíame_sh¨d_ed©a_block
(
sh¨d_fûíame
, 
blockid
, 
com¥es£d_block_size
);

489 
	gf
 = 
›í
(
block_fûíame
.
c_°r
(), 
O_RDWR
 | 
O_CREAT
, 
S_IROTH
 | 
S_IWOTH
 | 
S_IWUSR
 | 
S_IRUSR
);

490 
wrôe_com¥es£d
(
f
, 
buf
, 
Àn
);

491 
˛o£
(
f
);

493 
	gm
.
°›_time
("edata_flush");

496 #ifde‡
DYNAMICEDATA


498 
wrôe_block_uncom¥es£d_size
(
block_fûíame
, 
Àn
);

502 
	gblockid
++;

505 
	gãm∂©e
 <
ty≥«me
 
	gT
>

506 
bwrôe_ed©a
(* &
buf
, * &
buÂå
, 
T
 
vÆ
, 
size_t
 & 
tŸbyãs
, 
°d
::
°rög
 & 
sh¨d_fûíame
,

507 
size_t
 & 
edgecou¡î
) {

508 i‡(
	gno_edgevÆues
) ;

510 i‡(
	gedgecou¡î
 =
edges_≥r_block
) {

511 
ed©a_Êush
<
T
>(
buf
, 
buÂå
, 
sh¨d_fûíame
, 
tŸbyãs
);

512 
	gbuÂå
 = 
buf
;

513 
	gedgecou¡î
 = 0;

517 i‡(
	gbuÂå
 - 
	gbuf
 + (
	gT
Ë> 
	gebuf„r_size
) {

518 
	gebuf„r_size
 *= 2;

519 
log°ªam
(
LOG_DEBUG
Ë<< "In¸ó£d buf„∏sizêto: " << 
	gebuf„r_size
 << 
	g°d
::
ídl
;

520 
size_t
 
	g±roff
 = 
buÂå
 - 
buf
;

521 
	gbuf
 = (*Ë
ªÆloc
(
buf
, 
ebuf„r_size
);

522 
	gbuÂå
 = 
buf
 + 
±roff
;

525 
	gtŸbyãs
 +(
T
);

526 *((
	gT
*)
	gbuÂå
Ë
vÆ
;

527 
	gbuÂå
 +(
T
);

535 
execuã_sh¨dög
(
°d
::
°rög
 
nsh¨ds_°rög
) {

536 
m
.
°¨t_time
("execute_sharding");

538 
dëîmöe_numbî_of_sh¨ds
(
nsh¨ds_°rög
);

539 
wrôe_sh¨ds
();

541 
	gm
.
°›_time
("execute_sharding");

544 
basic_ªp‹ãr
 
	gbasi¸ï
;

545 
	gm
.
ªp‹t
(
basi¸ï
);

547  
	gnsh¨ds
;

553 
	g¥Ÿe˘ed
:

555 
vútuÆ
 
dëîmöe_numbî_of_sh¨ds
(
°d
::
°rög
 
nsh¨ds_°rög
) {

557 
shovñed_edges
 = 0;

558 
	gi
=0; i<()
	gshovñèsks
.
size
(); i++) {

559 
	gshovñed_edges
 +
shovñèsks
[
i
]->
numedges
;

560 
dñëe
 
	gshovñèsks
[
i
];

563 i‡(
	gnsh¨ds_°rög
.
föd
("auto"Ë!
°d
::
°rög
::
≈os
 || 
nsh¨ds_°rög
 == "0") {

564 
log°ªam
(
LOG_INFO
Ë<< "DëîmöögÇumbî o‡sh¨d†autom©iˇŒy." << 
°d
::
ídl
;

566 
	gmembudgë_mb
 = 
gë_›ti⁄_öt
("membudget_mb", 1024);

567 
log°ªam
(
LOG_INFO
Ë<< "AssumögávaûabÀ mem‹y i†" << 
	gmembudgë_mb
 << " megabyãs. " << 
	g°d
::
ídl
;

568 
log°ªam
(
LOG_INFO
Ë<< " (Thi†ˇ¿bêdeföed wôh c⁄figuøti⁄Ö¨amëî 'membudgë_mb')" << 
	g°d
::
ídl
;

570 
size_t
 
	gnumedges
 = 
shovñed_edges
;

572 
	gmax_sh¨dsize
 = 
membudgë_mb
 * 1024. * 1024. / 8;

573 
log°ªam
(
LOG_INFO
Ë<< "Dëîmöög maximum sh¨d size: " << (
	gmax_sh¨dsize
 / 1024. / 1024.Ë<< " MB." << 
	g°d
::
ídl
;

575 
	gnsh¨ds
 = (Ë–1 + (
numedges
 * (
FöÆEdgeD©aTy≥
Ë/ 
max_sh¨dsize
) + 0.5);

577 #ifde‡
DYNAMICEDATA


579 
	gnsh¨ds
 = (Ë–2 + 4 * (
numedges
 * (
FöÆEdgeD©aTy≥
Ë/ 
max_sh¨dsize
) + 0.5);

583 
	gnsh¨ds
 = 
©oi
(
nsh¨ds_°rög
.
c_°r
());

585 
as£π
(
nsh¨ds
 > 0);

586 
log°ªam
(
LOG_INFO
Ë<< "Numbî o‡sh¨d†tÿbê¸óãd: " << 
	gnsh¨ds
 << 
	g°d
::
ídl
;

590 
	g¥Ÿe˘ed
:

592 
⁄e_sh¨d_öãrvÆs
() {

593 
as£π
(
nsh¨ds
 == 1);

594 
	g°d
::
°rög
 
‚ame
 = 
fûíame_öãrvÆs
(
ba£fûíame
, 
nsh¨ds
);

595 
FILE
 * 
	gf
 = 
f›í
(
‚ame
.
c_°r
(), "w");

596 
	göãrvÆs
.
push_back
(
°d
::
∑ú
<
vid_t
,vid_t>(0, 
max_vîãx_id
));

597 
Ârötf
(
f
, "%u\n", 
max_vîãx_id
);

598 
f˛o£
(
f
);

601 
	g°d
::
°rög
 
numv_fûíame
 = 
ba£fûíame
 + ".numvertices";

602 
	gf
 = 
f›í
(
numv_fûíame
.
c_°r
(), "w");

603 
Ârötf
(
f
, "%u\n", 1 + 
max_vîãx_id
);

604 
f˛o£
(
f
);

606 
as£π
(
nsh¨ds
 =()
öãrvÆs
.
size
());

610 
	g°d
::
°rög
 
shovñ_fûíame
(
idx
) {

611 
°d
::
°rög°ªam
 
ss
;

612 
	gss
 << 
	gba£fûíame
 << (
	gEdgeD©aTy≥
Ë<< "." << 
	gidx
 << ".shovel";

613  
	gss
.
°r
();

617 
	gœ°∑π
;

618 
degªe
 * 
	gdegªes
;

620 
vútuÆ
 
föish_sh¨d
(
sh¨d
, 
edge_t
 * 
shovñbuf
, 
size_t
 
shovñsize
) {

621 
	gm
.
°¨t_time
("shard_final");

622 
	gblockid
 = 0;

623 
size_t
 
	gedgecou¡î
 = 0;

624 
	gcuødjfûïos
 = 0;

625 
log°ªam
(
LOG_INFO
Ë<< "Sèπög föÆÖro˚ssög f‹ sh¨d: " << 
	gsh¨d
 << 
	g°d
::
ídl
;

627 
	g°d
::
°rög
 
‚ame
 = 
fûíame_sh¨d_adj
(
ba£fûíame
, 
sh¨d
, 
nsh¨ds
);

628 
	g°d
::
°rög
 
ed‚ame
 = 
fûíame_sh¨d_ed©a
<
FöÆEdgeD©aTy≥
>(
ba£fûíame
, 
	gsh¨d
, 
	gnsh¨ds
);

629 
	g°d
::
°rög
 
edblockdú«me
 = 
dú«me_sh¨d_ed©a_block
(
ed‚ame
, 
com¥es£d_block_size
);

632 i‡(!
	gno_edgevÆues
)

633 
mkdú
(
edblockdú«me
.
c_°r
(), 0777);

634 
size_t
 
	gnumedges
 = 
shovñsize
 / (
edge_t
);

636 
log°ªam
(
LOG_DEBUG
Ë<< "Shovñ size:" << 
	gshovñsize
 << "Édges: " << 
	gnumedges
 << 
	g°d
::
ídl
;

638 
	gm
.
°¨t_time
("finish_shard.sort");

639 #i‚de‡
DYNAMICEDATA


640 
iS‹t
(
shovñbuf
, ()
numedges
, 
max_vîãx_id
, 
§cF
<
EdgeD©aTy≥
>());

642 
quickS‹t
(
shovñbuf
, ()
numedges
, 
edge_t_§c_Àss
<
EdgeD©aTy≥
>);

644 
	gm
.
°›_time
("finish_shard.sort");

647 i‡(
	gdu∂iˇã_edge_fûãr
 !
NULL
 && 
numedges
 > 0) {

648 
edge_t
 * 
tmpbuf
 = (edge_t*Ë
ˇŒoc
(
numedges
, (edge_t));

649 
size_t
 
	gi
 = 1;

650 
	gtmpbuf
[0] = 
shovñbuf
[0];

651 
size_t
 
	gj
=1; j<
	gnumedges
; j++) {

652 
edge_t
 
	g¥ev
 = 
tmpbuf
[
i
 - 1];

653 
edge_t
 
	gcur
 = 
shovñbuf
[
j
];

655 i‡(
	g¥ev
.
	g§c
 =
cur
.
§c
 && 
¥ev
.
d°
 == cur.dst) {

656 i‡(
du∂iˇã_edge_fûãr
->
ac˚±Fú°
(
cur
.
vÆue
, 
¥ev
.value)) {

658 
tmpbuf
[
i
 - 1] = 
cur
;

661 
	gtmpbuf
[
i
++] = 
cur
;

664 
	gnumedges
 = 
i
;

665 
log°ªam
(
LOG_DEBUG
Ë<< "A·î du∂iˇãÉlimö©i⁄: " << 
	gnumedges
 << "Édges" << 
	g°d
::
ídl
;

666 
‰ì
(
shovñbuf
);

667 
	gshovñbuf
 = 
tmpbuf
; 
	gtmpbuf
 = 
NULL
;

671 
	g°d
::
°rög
 
ödexfûe
 = 
fûíame_sh¨d_adjidx
(
‚ame
);

672 
	gidxf
 = 
›í
(
ödexfûe
.
c_°r
(), 
O_WRONLY
 | 
O_CREAT
, 
S_IROTH
 | 
S_IWOTH
 | 
S_IWUSR
 | 
S_IRUSR
);

673 
size_t
 
	gœ°_ödex_ouçut
 = 0;

674 
size_t
 
	gödex_öãrvÆ_edges
 = 1024 * 1024;

677 
	gf
 = 
›í
(
‚ame
.
c_°r
(), 
O_WRONLY
 | 
O_CREAT
, 
S_IROTH
 | 
S_IWOTH
 | 
S_IWUSR
 | 
S_IRUSR
);

678 i‡(
	gf
 < 0) {

679 
log°ªam
(
LOG_ERROR
Ë<< "CouldÇŸ o≥¿" << 
	g‚ame
 << "Éº‹: " << 
°ªº‹
(
î∫o
Ë<< 
	g°d
::
ídl
;

681 
as£π
(
f
 >= 0);

682 
	gåîr
 = 
·runˇã
(
f
, 0);

683 
as£π
(
åîr
 == 0);

685 * 
	gbuf
 = (*Ë
mÆloc
(
SHARDER_BUFSIZE
);

686 * 
	gbuÂå
 = 
buf
;

688 * 
	gebuf
 = (*Ë
mÆloc
(
com¥es£d_block_size
);

689 
	gebuf„r_size
 = 
com¥es£d_block_size
;

690 * 
	gebuÂå
 = 
ebuf
;

692 
vid_t
 
	gcurvid
=0;

693 #ifde‡
DYNAMICEDATA


694 
vid_t
 
	gœ°d°
 = 0xffffffff;

695 
	gjumpovî
 = 0;

696 
size_t
 
	gnum_uniq_edges
 = 0;

697 
size_t
 
	gœ°_edge_cou¡
 = 0;

699 
size_t
 
	gi°¨t
 = 0;

700 
size_t
 
	gtŸ_ed©abyãs
 = 0;

701 
size_t
 
	gi
=0; i <
numedges
; i++) {

702 i‡(
	gi
 % 10000000 =0Ë
log°ªam
(
LOG_DEBUG
Ë<< 
i
 << " / " << 
numedges
 << 
°d
::
ídl
;

703 #ifde‡
DYNAMICEDATA


704 
	gi
 +
jumpovî
;

705 
	gjumpovî
 = 0;

707 
edge_t
 
	gedge
 = (
i
 < 
numedges
 ? 
shovñbuf
[i] :Édge_t(0, 0, 
EdgeD©aTy≥
()));

709 #ifde‡
DYNAMICEDATA


711 i‡(
	gœ°d°
 =
edge
.
d°
 &&Édge.
§c
 =
curvid
) {

713 
log°ªam
(
LOG_ERROR
Ë<< "Du∂iˇãÉdgêöÅhê°ªam -áb‹tög" << 
°d
::
ídl
;

714 
as£π
(
Ál£
);

716 
	gœ°d°
 = 
edge
.
d°
;

719 i‡(!
	gedge
.
°›≥r
()) {

720 #i‚de‡
DYNAMICEDATA


721 
	gbwrôe_ed©a
<
	gFöÆEdgeD©aTy≥
>(
	gebuf
, 
	gebuÂå
, 
FöÆEdgeD©aTy≥
(
edge
.
vÆue
), 
	gtŸ_ed©abyãs
, 
	ged‚ame
, 
	gedgecou¡î
);

724 i‡(
	gedge
.
	gis_chivec_vÆue
) {

726 
	gcou¡
 = 1;

727 
	gshovñbuf
[
i
 + 
cou¡
].
	gvÆödex
 == count) { count++; }

729 
as£π
(
cou¡
 < 32768);

731 
ty≥«me
 
	gchive˘‹
<
	gEdgeD©aTy≥
>::
sizew‹d_t
 
szw
;

732 ((
	guöt16_t
 *Ë&
	gszw
)[0] = (
uöt16_t
)
cou¡
;

733 ((
	guöt16_t
 *Ë&
	gszw
)[1] = (
uöt16_t
)
cou¡
;

734 
	gbwrôe_ed©a
<
ty≥«me
 
	gchive˘‹
<
	gEdgeD©aTy≥
>::
sizew‹d_t
>(
ebuf
, 
	gebuÂå
, 
	gszw
, 
	gtŸ_ed©abyãs
, 
	ged‚ame
, 
	gedgecou¡î
);

735 
	gj
=0; j < 
	gcou¡
; j++) {

736 
	gbwrôe_ed©a
<
	gEdgeD©aTy≥
>(
	gebuf
, 
	gebuÂå
, 
EdgeD©aTy≥
(
shovñbuf
[
i
 + 
j
].
vÆue
), 
	gtŸ_ed©abyãs
, 
	ged‚ame
, 
	gedgecou¡î
);

738 
	gjumpovî
 = 
cou¡
 - 1;

741 
	gbwrôe_ed©a
<>(
	gebuf
, 
	gebuÂå
, 0, 
	gtŸ_ed©abyãs
, 
	ged‚ame
, 
	gedgecou¡î
);

743 
	gnum_uniq_edges
++;

746 
	gedgecou¡î
++;

748 i‡(
	gdegªes
 !
NULL
 && 
edge
.
§c
 !edge.
d°
) {

749 
degªes
[
edge
.
§c
].
outdegªe
++;

750 
	gdegªes
[
edge
.
d°
].
	gödegªe
++;

753 i‡((
	gedge
.
	g§c
 !
curvid
Ë|| 
edge
.
°›≥r
()) {

755 #i‚de‡
DYNAMICEDATA


756 
size_t
 
cou¡
 = 
i
 - 
i°¨t
;

758 
size_t
 
	gcou¡
 = 
num_uniq_edges
 - 1 - 
œ°_edge_cou¡
;

759 
	gœ°_edge_cou¡
 = 
num_uniq_edges
 - 1;

760 i‡(
	gedge
.
°›≥r
()Ë
	gcou¡
++;

762 
as£π
(
cou¡
>0 || 
curvid
==0);

765 i‡(
	gi°¨t
 - 
	gœ°_ödex_ouçut
 >
ödex_öãrvÆ_edges
) {

766 
size_t
 
curÂos
 = 
cuødjfûïos
;

767 
sh¨d_ödex
 
sidx
(
curvid
, 
curÂos
, 
i°¨t
);

768 
size_t
 
	ga
 = 
wrôe
(
idxf
, &
sidx
, (
sh¨d_ödex
));

769 
as£π
(
a
>0);

770 
	gœ°_ödex_ouçut
 = 
i°¨t
;

774 i‡(
	gcou¡
>0) {

775 i‡(
	gcou¡
 < 255) {

776 
uöt8_t
 
	gx
 = (uöt8_t)
cou¡
;

777 
	gbwrôe
<
	guöt8_t
>(
	gf
, 
	gbuf
, 
	gbuÂå
, 
	gx
);

779 
	gbwrôe
<
	guöt8_t
>(
	gf
, 
	gbuf
, 
	gbuÂå
, 0xff);

780 
	gbwrôe
<
	guöt32_t
>(
	gf
, 
	gbuf
, 
	gbuÂå
, (uöt32_t)
	gcou¡
);

784 #i‚de‡
DYNAMICEDATA


788 
size_t
 
	gj
=
i°¨t
; j < 
	gi
; j++) {

789 
bwrôe
(
f
, 
buf
, 
buÂå
, 
shovñbuf
[
j
].
d°
);

795 
size_t
 
	gj
=
i°¨t
; j < 
	gi
; j++) {

796 i‡(
	gj
 =
i°¨t
 || 
shovñbuf
[
j
 - 1].
d°
 != shovelbuf[j].dst) {

797 
bwrôe
(
f
, 
buf
, 
buÂå
, 
shovñbuf
[
j
].
d°
);

801 
	gi°¨t
 = 
i
;

802 #ifde‡
DYNAMICEDATA


803 
	gi°¨t
 +
jumpovî
;

807 i‡(!
	gedge
.
°›≥r
()) {

808 i‡(
	gedge
.
	g§c
 - 
	gcurvid
 > 1 || (
	gi
 =0 && 
edge
.
§c
>0)) {

809 
nz
 = 
edge
.
§c
 - 
curvid
 - 1;

810 i‡(
	gi
 =0 && 
edge
.
§c
 > 0Ë
nz
 =Édge.src;

812 
	gbwrôe
<
	guöt8_t
>(
	gf
, 
	gbuf
, 
	gbuÂå
, 0);

813 
	gnz
--;

814 
	gäz
 = 
°d
::
mö
(254, 
nz
);

815 
	gbwrôe
<
	guöt8_t
>(
	gf
, 
	gbuf
, 
	gbuÂå
, (uöt8_tË
	gäz
);

816 
	gnz
 -
äz
;

817 } 
	gnz
>0);

820 
	gcurvid
 = 
edge
.
§c
;

825 
wrôó
(
f
, 
buf
, 
buÂå
 - buf);

826 
‰ì
(
buf
);

827 
‰ì
(
shovñbuf
);

828 
˛o£
(
f
);

829 
˛o£
(
idxf
);

832 i‡(!
	gno_edgevÆues
) {

833 
	ged©a_Êush
<
	gFöÆEdgeD©aTy≥
>(
	gebuf
, 
	gebuÂå
, 
	ged‚ame
, 
	gtŸ_ed©abyãs
);

835 
	g°d
::
°rög
 
sizefûíame
 = 
ed‚ame
 + ".size";

836 
	g°d
::
of°ªam
 
ofs
(
sizefûíame
.
c_°r
());

837 #i‚de‡
DYNAMICEDATA


838 
	gofs
 << 
	gtŸ_ed©abyãs
;

840 
	gofs
 << 
num_uniq_edges
 * ();

843 
	gofs
.
˛o£
();

845 
‰ì
(
ebuf
);

847 
	gm
.
°›_time
("shard_final");

852 
size_t
 
	gedges_≥r_sh¨d
;

853 
size_t
 
	gcur_sh¨d_cou¡î
;

854 
size_t
 
	gsh¨d_ˇ∑côy
;

855 
size_t
 
	gsh¨ded_edges
;

856 
	gsh¨dnum
;

857 
	gedge_wôh_vÆue
<
	gEdgeD©aTy≥
> * 
	gsökbuf„r
;

858 
vid_t
 
	g¥evvid
;

859 
vid_t
 
	gthis_öãrvÆ_°¨t
;

861 
vútuÆ
 
add
(
edge_wôh_vÆue
<
EdgeD©aTy≥
> 
vÆ
) {

862 i‡(
	gcur_sh¨d_cou¡î
 >
edges_≥r_sh¨d
 && 
vÆ
.
d°
 !
¥evvid
) {

863 
¸óã√xtsh¨d
();

866 i‡(
	gcur_sh¨d_cou¡î
 =
sh¨d_ˇ∑côy
) {

868 
log°ªam
(
LOG_WARNING
Ë<< "Sh¨d " << 
sh¨dnum
 << " ovîÊowög! " << 
cur_sh¨d_cou¡î
 << " / " << 
sh¨d_ˇ∑côy
 << 
°d
::
ídl
;

869 
	gsh¨d_ˇ∑côy
 = (
size_t
Ë(1.2 * 
sh¨d_ˇ∑côy
);

870 
	gsökbuf„r
 = (
edge_wôh_vÆue
<
EdgeD©aTy≥
>*Ë
ªÆloc
(
sökbuf„r
, 
sh¨d_ˇ∑côy
 * (edge_with_value<EdgeDataType>));

873 
	gsökbuf„r
[
cur_sh¨d_cou¡î
++] = 
vÆ
;

874 
	g¥evvid
 = 
vÆ
.
d°
;

875 
	gsh¨ded_edges
++;

878 
¸óã√xtsh¨d
() {

879 
as£π
(
sh¨dnum
 < 
nsh¨ds
);

880 
	göãrvÆs
.
push_back
(
°d
::
∑ú
<
vid_t
, vid_t>(
this_öãrvÆ_°¨t
, (
sh¨dnum
 =
nsh¨ds
 - 1 ? 
max_vîãx_id
 : 
¥evvid
)));

881 
	gthis_öãrvÆ_°¨t
 = 
¥evvid
 + 1;

882 
föish_sh¨d
(
sh¨dnum
++, 
sökbuf„r
, 
cur_sh¨d_cou¡î
 * (
edge_wôh_vÆue
<
EdgeD©aTy≥
>));

883 
	gsökbuf„r
 = (
edge_wôh_vÆue
<
EdgeD©aTy≥
> *Ë
mÆloc
(
sh¨d_ˇ∑côy
 * (edge_with_value<EdgeDataType>));

884 
	gcur_sh¨d_cou¡î
 = 0;

887 
log°ªam
(
LOG_INFO
Ë<< "RemaöögÉdges: " << (
	gshovñed_edges
 - 
	gsh¨ded_edges
Ë<< "Ñemaöög sh¨ds:" << (
	gnsh¨ds
 - 
	gsh¨dnum
)

888 << "Édge†≥∏sh¨d=" << 
	gedges_≥r_sh¨d
 << 
	g°d
::
ídl
;

889 i‡(
	gsh¨dnum
 < 
	gnsh¨ds
Ë
	gedges_≥r_sh¨d
 = (
shovñed_edges
 - 
sh¨ded_edges
Ë/ (
nsh¨ds
 - 
sh¨dnum
);

890 
log°ªam
(
LOG_INFO
Ë<< "Edge†≥∏sh¨d: " << 
	gedges_≥r_sh¨d
 << 
	g°d
::
ídl
;

894 
vútuÆ
 
d⁄e
() {

895 
¸óã√xtsh¨d
();

896 i‡(
	gshovñed_edges
 !
sh¨ded_edges
) {

897 
log°ªam
(
LOG_INFO
Ë<< "Shovñed " << 
shovñed_edges
 << " buàsh¨ded " << 
sh¨ded_edges
 << "Édges" << 
°d
::
ídl
;

899 i‡(
	gdu∂iˇã_edge_fûãr
 =
NULL
)

900 
as£π
(
shovñed_edges
 =
sh¨ded_edges
);

903 
log°ªam
(
LOG_INFO
Ë<< "Cª©ed " << 
	gsh¨dnum
 << " sh¨ds, f‹ " << 
	gsh¨ded_edges
 << "Édges";

904 
as£π
(
sh¨dnum
 <
nsh¨ds
);

905 
‰ì
(
sökbuf„r
);

906 
	gsökbuf„r
 = 
NULL
;

909 
	g°d
::
°rög
 
‚ame
 = 
fûíame_öãrvÆs
(
ba£fûíame
, 
nsh¨ds
);

910 
FILE
 * 
	gf
 = 
f›í
(
‚ame
.
c_°r
(), "w");

912 i‡(
	gf
 =
NULL
) {

913 
log°ªam
(
LOG_ERROR
Ë<< "CouldÇŸ o≥¿fûe: " << 
‚ame
 << "Érror: " <<

914 
°ªº‹
(
î∫o
Ë<< 
°d
::
ídl
;

916 
as£π
(
f
 !
NULL
);

917 
	gi
=0; i<()
	göãrvÆs
.
size
(); i++) {

918 
Ârötf
(
f
, "%u\n", 
öãrvÆs
[
i
].
£c⁄d
);

920 
f˛o£
(
f
);

923 
	g°d
::
°rög
 
numv_fûíame
 = 
ba£fûíame
 + ".numvertices";

924 
	gf
 = 
f›í
(
numv_fûíame
.
c_°r
(), "w");

925 
Ârötf
(
f
, "%u\n", 1 + 
max_vîãx_id
);

926 
f˛o£
(
f
);

938 
vútuÆ
 
wrôe_sh¨ds
() {

940 
size_t
 
	gmembudgë_mb
 = (size_tË
gë_›ti⁄_öt
("membudget_mb", 1024);

944 
boﬁ
 
	gcou¡_degªes_ömem
 = 
membudgë_mb
 * 1024 * 1024 / 3 > 
max_vîãx_id
 * (
degªe
);

945 
	gdegªes
 = 
NULL
;

946 #ifde‡
DYNAMICEDATA


947 i‡(!
	gcou¡_degªes_ömem
) {

951 
log°ªam
(
LOG_WARNING
Ë<< "Dy«mi¯edgêd©®suµ‹à⁄ly sh¨dög whíÅhêvîãx degªe†ˇ¿bêcompuãd in-mem‹y." << 
	g°d
::
ídl
;

952 
log°ªam
(
LOG_WARNING
Ë<< "I‡thê¥ogøm gë†vîy slow (°¨t†sw≠pög),Åhêd©®sizêi†toÿbig." << 
	g°d
::
ídl
;

953 
	gcou¡_degªes_ömem
 = 
åue
;

956 i‡(
	gcou¡_degªes_ömem
) {

957 
	gdegªes
 = (
degªe
 *Ë
ˇŒoc
(1 + 
max_vîãx_id
, (degree));

961 
	gsh¨ded_edges
 = 0;

962 
	gedges_≥r_sh¨d
 = 
shovñed_edges
 / 
nsh¨ds
 + 1;

963 
	gsh¨d_ˇ∑côy
 = 
edges_≥r_sh¨d
 / 2 * 3;

964 
	gsh¨dnum
 = 0;

965 
	gthis_öãrvÆ_°¨t
 = 0;

966 
	gsökbuf„r
 = (
edge_wôh_vÆue
<
EdgeD©aTy≥
> *Ë
ˇŒoc
(
sh¨d_ˇ∑côy
, (edge_with_value<EdgeDataType>));

967 
log°ªam
(
LOG_INFO
Ë<< "Edge†≥∏sh¨d: " << 
	gedges_≥r_sh¨d
 << "Çsh¨ds=" << 
	gnsh¨ds
 << "ÅŸÆ: " << 
	gshovñed_edges
 << 
	g°d
::
ídl
;

968 
	gcur_sh¨d_cou¡î
 = 0;

971 
size_t
 
	gB
 = 
membudgë_mb
 * 1024 * 1024 / 2 / 
numshovñs
;

972 
	gB
 % (
	gedge_wôh_vÆue
<
	gEdgeD©aTy≥
>Ë!0Ë
B
++;

973 
log°ªam
(
LOG_INFO
Ë<< "Buf„∏sizêö mîgêpha£: " << 
	gB
 << 
	g°d
::
ídl
;

974 
	g¥evvid
 = (-1);

975 
	g°d
::
ve˘‹
< 
mîge_sour˚
<
edge_wôh_vÆue
<
EdgeD©aTy≥
> > *> 
sour˚s
;

976 
	gi
=0; i < 
	gnumshovñs
; i++) {

977 
	gsour˚s
.
push_back
(
√w
 
shovñ_mîge_sour˚
<
EdgeD©aTy≥
>(
B
, 
shovñ_fûíame
(
i
)));

980 
	gkway_mîge
<
	gedge_wôh_vÆue
<
	gEdgeD©aTy≥
> > 
mîgî
(
sour˚s
, 
this
);

981 
	gmîgî
.
mîge
();

984 
	gi
=0; i < ()
	gsour˚s
.
size
(); i++) {

985 
dñëe
 (
shovñ_mîge_sour˚
<
EdgeD©aTy≥
> *)
	gsour˚s
[
i
];

989 i‡(!
	gcou¡_degªes_ömem
) {

990 #i‚de‡
DYNAMICEDATA


992 
¸óã_degªe_fûe
();

996 
	g°d
::
°rög
 
degªe‚ame
 = 
fûíame_degªe_d©a
(
ba£fûíame
);

997 
	gdegªeOutF
 = 
›í
(
degªe‚ame
.
c_°r
(), 
O_RDWR
 | 
O_CREAT
, 
S_IROTH
 | 
S_IWOTH
 | 
S_IWUSR
 | 
S_IRUSR
);

998 i‡(
	gdegªeOutF
 < 0) {

999 
log°ªam
(
LOG_ERROR
Ë<< "CouldÇŸ cª©e: " << 
	gdegªeOutF
 << 
	g°d
::
ídl
;

1000 
as£π
(
degªeOutF
 >= 0);

1003 
wrôó
(
degªeOutF
, 
degªes
, (
degªe
Ë* (1 + 
max_vîãx_id
));

1004 
‰ì
(
degªes
);

1005 
˛o£
(
degªeOutF
);

1011 
	tdummy_t
;

1013 
	g¶idög_sh¨d
<, 
	tdummy_t
> 
	t¶idögsh¨d_t
;

1014 
	gmem‹y_sh¨d
<, 
	tdummy_t
> 
	tmemsh¨d_t
;

1017 #i‚de‡
DYNAMICEDATA


1018 
¸óã_degªe_fûe
() {

1020 
°rùedio
 * 
	giomgr
 = 
√w
 såùedio(
m
);

1021 
	g°d
::
ve˘‹
<
¶idögsh¨d_t
 * > 
¶idög_sh¨ds
;

1023 
	gsubwödow
 = 5000000;

1024 
	gm
.
£t
("subwödow", (
size_t
)
subwödow
);

1026 
	glﬂdthªads
 = 4;

1028 
	gm
.
°¨t_time
("degrees.runtime");

1031 
	gblocksize
 = 
com¥es£d_block_size
;

1033 
	gp
=0;Ö < 
	gnsh¨ds
;Ö++) {

1034 
log°ªam
(
LOG_INFO
Ë<< "Inôülizê°ªamög sh¨d: " << 
	gp
 << 
	g°d
::
ídl
;

1035 
	g¶idög_sh¨ds
.
push_back
(

1036 
√w
 
¶idögsh¨d_t
(
iomgr
, 
fûíame_sh¨d_ed©a
<
dummy_t
>(
ba£fûíame
, 
p
, 
nsh¨ds
),

1037 
fûíame_sh¨d_adj
(
ba£fûíame
, 
p
, 
nsh¨ds
), 
öãrvÆs
[p].
fú°
,

1038 
öãrvÆs
[
p
].
£c⁄d
,

1039 
blocksize
, 
m
, 
åue
,Årue));

1042 
gøphchi_c⁄ãxt
 
	ggöfo
;

1043 
	ggöfo
.
	gnvîti˚s
 = 1 + 
öãrvÆs
[
nsh¨ds
 - 1].
£c⁄d
;

1044 
	ggöfo
.
	gscheduÀr
 = 
NULL
;

1046 
	g°d
::
°rög
 
ouçut‚ame
 = 
fûíame_degªe_d©a
(
ba£fûíame
);

1048 
	gdegªeOutF
 = 
›í
(
ouçut‚ame
.
c_°r
(), 
O_RDWR
 | 
O_CREAT
, 
S_IROTH
 | 
S_IWOTH
 | 
S_IWUSR
 | 
S_IRUSR
);

1049 i‡(
	gdegªeOutF
 < 0) {

1050 
log°ªam
(
LOG_ERROR
Ë<< "CouldÇŸ cª©e: " << 
	gdegªeOutF
 << 
	g°d
::
ídl
;

1052 
as£π
(
degªeOutF
 >= 0);

1053 
	gåîr
 = 
·runˇã
(
degªeOutF
, 
göfo
.
nvîti˚s
 * () * 2);

1054 
as£π
(
åîr
 == 0);

1055 i‡(
	gåîr
 != 0) {

1056 
log°ªam
(
LOG_FATAL
Ë<< "CouldÇŸÅrunˇã!" << 
°d
::
ídl
;

1057 
exô
(0);

1060 
	gwödow
=0; wödow<
	gnsh¨ds
; window++) {

1061 
mërics_íåy
 
	gmwi
 = 
m
.
°¨t_time
();

1063 
vid_t
 
	göãrvÆ_°
 = 
öãrvÆs
[
wödow
].
fú°
;

1064 
vid_t
 
	göãrvÆ_í
 = 
öãrvÆs
[
wödow
].
£c⁄d
;

1067 
	g¶idög_sh¨ds
[
wödow
]->
Êush
();

1070 
memsh¨d_t
 
memsh¨d
(
iomgr
, 
fûíame_sh¨d_ed©a
<
FöÆEdgeD©aTy≥
>(
ba£fûíame
, 
wödow
, 
nsh¨ds
), 
fûíame_sh¨d_adj
(basefilename, window,Çshards),

1071 
öãrvÆ_°
, 
öãrvÆ_í
, 
blocksize
, 
m
);

1072 
	gmemsh¨d
.
	g⁄ly_adja˚ncy
 = 
åue
;

1073 
log°ªam
(
LOG_INFO
Ë<< "I¡îvÆ: " << 
	göãrvÆ_°
 << " " << 
	göãrvÆ_í
 << 
	g°d
::
ídl
;

1075 
vid_t
 
	gsuböãrvÆ_°
=
öãrvÆ_°
; suböãrvÆ_° <
öãrvÆ_í
; ) {

1076 
vid_t
 
	gsuböãrvÆ_í
 = 
°d
::
mö
(
öãrvÆ_í
, 
suböãrvÆ_°
 + 
subwödow
);

1077 
log°ªam
(
LOG_INFO
Ë<< "(Degªê¥oc.ËSub-wödow: [" << 
	gsuböãrvÆ_°
 << " - " << 
	gsuböãrvÆ_í
 << "]" << 
	g°d
::
ídl
;

1078 
as£π
(
suböãrvÆ_í
 >
suböãrvÆ_°
 && suböãrvÆ_í <
öãrvÆ_í
);

1081 
mërics_íåy
 
	gmí
 = 
m
.
°¨t_time
();

1082 
	gnvîti˚s
 = 
suböãrvÆ_í
 - 
suböãrvÆ_°
 + 1;

1083 
	g°d
::
ve˘‹
< 
gøphchi_vîãx
<, 
	gdummy_t
> > 
vîti˚s
(
nvîti˚s
, gøphchi_vîãx<, 
dummy_t
>());

1086 
	gi
=0; i < 
	gnvîti˚s
; i++) {

1087 
	gvîti˚s
[
i
] = 
gøphchi_vîãx
<, 
	gdummy_t
>(
	gsuböãrvÆ_°
 + 
	gi
, 
	gNULL
, NULL, 0, 0);

1088 
	gvîti˚s
[
i
].
	gscheduÀd
 = 
åue
;

1091 
mërics_íåy
 
	gme
 = 
m
.
°¨t_time
();

1092 
omp_£t_num_thªads
(
lﬂdthªads
);

1093 #¥agm®
omp
 
∑øŒñ
 

1094 
	gp
=-1;Ö < 
	gnsh¨ds
;Ö++) {

1095 i‡(
	gp
 == (-1)) {

1097 i‡(
memsh¨d
.
lﬂded
(Ë=
Ál£
) {

1098 
memsh¨d
.
lﬂd
();

1102 
	gmemsh¨d
.
lﬂd_vîti˚s
(
suböãrvÆ_°
, 
suböãrvÆ_í
, 
vîti˚s
);

1105 i‡(
	gp
 !
wödow
) {

1106 
¶idög_sh¨ds
[
p
]->
ªad_√xt_vîti˚s
(
nvîti˚s
, 
suböãrvÆ_°
, 
vîti˚s
, 
Ál£
);

1111 
	gm
.
°›_time
(
me
, "°ªam_ahód", 
wödow
);

1114 
mërics_íåy
 
	gmev
 = 
m
.
°¨t_time
();

1117 * 
	gvbuf
 = (*Ë
mÆloc
(
nvîti˚s
 * () * 2);

1119 
	gi
=0; i<
	gnvîti˚s
; i++) {

1120 
	gvbuf
[2 * 
i
] = 
vîti˚s
[i].
num_öedges
();

1121 
	gvbuf
[2 * 
i
 +1] = 
vîti˚s
[i].
num_ouãdges
();

1123 
pwrôó
(
degªeOutF
, 
vbuf
, 
nvîti˚s
 * (Ë* 2, 
suböãrvÆ_°
 * () * 2);

1125 
‰ì
(
vbuf
);

1128 
	gsuböãrvÆ_°
 = 
suböãrvÆ_í
+1;

1131 
	g¶idög_sh¨ds
[
wödow
]->
£t_off£t
(
memsh¨d
.
off£t_f‹_°ªam_c⁄t
(), memsh¨d.
off£t_vid_f‹_°ªam_c⁄t
(),

1132 
memsh¨d
.
ed©a_±r_f‹_°ªam_c⁄t
());

1134 
˛o£
(
degªeOutF
);

1135 
	gm
.
°›_time
("degrees.runtime");

1136 
dñëe
 
	giomgr
;

1140 
	gãm∂©e
 <
ty≥«me
 
	gA
,Åy≥«mê
	gB
,Åy≥«mê
	gC
> 
‰õnd
 
˛ass
 
	gsh¨ded_gøph_ouçut
;

1147 
	gãm∂©e
 <
ty≥«me
 
	gVT
,Åy≥«mê
	gET
,Åy≥«mê
	gETFöÆ
=
ET
>

1148 
˛ass
 
sh¨ded_gøph_ouçut
 : 
public
 
iouçut
<
VT
, 
	gET
> {

1150 
	gsh¨dî
<
	gETFöÆ
> * 
	gsh¨dîobj
;

1151 
muãx
 
	glock
;

1152 
size_t
 
	gnum_edges_
;

1154 
	gpublic
:

1155 
sh¨ded_gøph_ouçut
(
°d
::
°rög
 
fûíame
, 
Du∂iˇãEdgeFûãr
<
ETFöÆ
> * 
fûãr
 = 
NULL
Ë: 
num_edges_
(0) {

1156 
sh¨dîobj
 = 
√w
 
sh¨dî
<
ETFöÆ
>(
fûíame
);

1157 
	gsh¨dîobj
->
£t_du∂iˇã_fûãr
(
fûãr
);

1158 
	gsh¨dîobj
->
°¨t_¥ïro˚ssög
();

1161 ~
sh¨ded_gøph_ouçut
() {

1162 
dñëe
 
	gsh¨dîobj
;

1163 
	gsh¨dîobj
 = 
NULL
;

1168 
	gpublic
:

1169 
ouçut_edge
(
vid_t
 
‰om
, vid_à
to
) {

1170 
as£π
(
Ál£
);

1174 
vútuÆ
 
ouçut_edge
(
vid_t
 
‰om
, vid_à
to
, 
vÆue
) {

1175 
as£π
(
Ál£
);

1178 
vútuÆ
 
ouçut_edge
(
vid_t
 
‰om
, vid_à
to
, 
vÆue
) {

1179 
as£π
(
Ál£
);

1183 
vútuÆ
 
ouçut_edge
(
vid_t
 
‰om
, vid_à
to
, 
vÆue
) {

1184 
as£π
(
Ál£
);

1187 
vútuÆ
 
ouçut_edge
(
vid_t
 
‰om
, vid_à
to
, 
size_t
 
vÆue
) {

1188 
as£π
(
Ál£
);

1191 
ouçut_edgevÆ
(
vid_t
 
‰om
, vid_à
to
, 
ETFöÆ
 
vÆue
) {

1192 
	glock
.
lock
();

1193 
	gsh¨dîobj
->
¥ïro˚ssög_add_edge
(
‰om
, 
to
, 
vÆue
);

1194 
	gnum_edges_
++;

1195 
	glock
.
u∆ock
();

1200 
ouçut_vÆue
(
vid_t
 
vid
, 
VT
 
vÆue
) {

1201 
as£π
(
Ál£
);

1205 
˛o£
() {

1208 
size_t
 
num_edges
() {

1209  
	gnum_edges_
;

1212 
size_t
 
föish_sh¨dög
() {

1213 
	gsh¨dîobj
->
íd_¥ïro˚ssög
();

1215 
	gsh¨dîobj
->
execuã_sh¨dög
("auto");

1216  
	gsh¨dîobj
->
	gnsh¨ds
;

	@preprocessing/sharder_basic.cpp

29 
	~<io°ªam
>

30 
	~<°dlib.h
>

31 
	~<°rög
>

32 
	~<as£π.h
>

34 
	~"loggî/loggî.hµ
"

35 
	~"¥ïro˚ssög/c⁄vîsi⁄s.hµ
"

36 
	~"¥ïro˚ssög/sh¨dî.hµ
"

37 
	~"utû/cmd›ts.hµ
"

39 
usög
 
«me•a˚
 
	ggøphchi
;

43 
	$maö
(
¨gc
, c⁄° ** 
¨gv
) {

44 
	`gøphchi_öô
(
¨gc
, 
¨gv
);

46 
	`globÆ_loggî
().
	`£t_log_Àvñ
(
LOG_DEBUG
);

48 
°d
::
°rög
 
ba£fûe
 = 
	`gë_›ti⁄_°rög_öãø˘ive
("file", "[pathÅoÅhe input graph]");

49 
°d
::
°rög
 
edge_d©a_ty≥
 = 
	`gë_›ti⁄_°rög_öãø˘ive
("edgedatatype", "int, uint, short, float, char, double, boolean,Üong, float-float, int-int,Çone");

50 
°d
::
°rög
 
nsh¨ds_°r
 = 
	`gë_›ti⁄_°rög_öãø˘ive
("nshards", "Number of shardsÅo create, or 'auto'");

52 i‡(
edge_d©a_ty≥
 == "float") {

53 
c⁄vît
<, >(
ba£fûe
, 
nsh¨ds_°r
);

54 } i‡(
edge_d©a_ty≥
 == "float-float") {

55 
c⁄vît
<
PaúC⁄èöî
<>, PaúC⁄èöî<> >(
ba£fûe
, 
nsh¨ds_°r
);

56 } i‡(
edge_d©a_ty≥
 == "int") {

57 
c⁄vît
<, >(
ba£fûe
, 
nsh¨ds_°r
);

58 } i‡(
edge_d©a_ty≥
 == "uint") {

59 
c⁄vît
<, >(
ba£fûe
, 
nsh¨ds_°r
);

60 } i‡(
edge_d©a_ty≥
 == "int-int") {

61 
c⁄vît
<
PaúC⁄èöî
<>, PaúC⁄èöî<> >(
ba£fûe
, 
nsh¨ds_°r
);

62 } i‡(
edge_d©a_ty≥
 == "short") {

63 
c⁄vît
<, >(
ba£fûe
, 
nsh¨ds_°r
);

64 } i‡(
edge_d©a_ty≥
 == "double") {

65 
c⁄vît
<, >(
ba£fûe
, 
nsh¨ds_°r
);

66 } i‡(
edge_d©a_ty≥
 == "char") {

67 
c⁄vît
<, >(
ba£fûe
, 
nsh¨ds_°r
);

68 } i‡(
edge_d©a_ty≥
 == "boolean") {

69 
c⁄vît
<
boﬁ
, boﬁ>(
ba£fûe
, 
nsh¨ds_°r
);

70 } i‡(
edge_d©a_ty≥
 == "long") {

71 
c⁄vît
<, >(
ba£fûe
, 
nsh¨ds_°r
);

72 } i‡(
edge_d©a_ty≥
 == "none") {

73 
	`c⁄vît_n⁄e
(
ba£fûe
, 
nsh¨ds_°r
);

75 
	`log°ªam
(
LOG_ERROR
) << "YouÇeedÅo specifyÉdgedatatype. Currently supported: int, short, float, char, double, boolean,Üong.";

80 
	}
}

	@preprocessing/util/orderbydegree.hpp

11 #i‚de‡
DEF_GRAPHCHI_ORDERBYDEGREE


12 
	#DEF_GRAPH


	)

14 
«me•a˚
 
	ggøphchi
 {

16 
	svîãx_degªe
 {

17 
	gdeg
;

18 
vid_t
 
	gid
;

19 
vîãx_degªe
() {}

20 
vîãx_degªe
(
deg
, 
vid_t
 
id
) : deg(deg), id(id) {}

22 
boﬁ
 
vîãx_degªe_Àss
(c⁄° 
vîãx_degªe
 &
a
, c⁄° vîãx_degªê&
b
);

23 
boﬁ
 
vîãx_degªe_Àss
(c⁄° 
vîãx_degªe
 &
a
, c⁄° vîãx_degªê&
b
) {

24  
	ga
.
	gdeg
 < 
	gb
.deg || (a.deg =
b
.
deg
 && 
a
.
id
 < b.id);

31 
	gãm∂©e
 <
ty≥«me
 
	gVT
,Åy≥«mê
	gET
>

32 
˛ass
 
	g•ecül_sh¨dög_vîãx
 : 
public
 
gøphchi_vîãx
<
VT
, 
	gET
> {

33 
	gpublic
:

35 
sh¨dî
<
ET
, 
	gET
> * 
	gsh¨dîobj
;

36 
vid_t
 * 
	gå™¶©ëabÀ
;

37 
•ecül_sh¨dög_vîãx
() {}

38 
•ecül_sh¨dög_vîãx
(
sh¨dî
<
ET
, ET> * 
_sh¨dîobj
, 
vid_t
 
_id
, vid_à* 
_å™¶©ëabÀ
Ë: 
gøphchi_vîãx
<
VT
, 
	gET
> (
	g_id
, 
	gNULL
, NULL, 0, 0) {

39 
	gthis
->
	gsh¨dîobj
 = 
_sh¨dîobj
;

40 
	gthis
->
	gå™¶©ëabÀ
 = 
_å™¶©ëabÀ
;

44 
add_öedge
(
vid_t
 
§c
, 
ET
 * 
±r
, 
boﬁ
 
•ecül_edge
) {

45 
	gsh¨dîobj
->
¥ïro˚ssög_add_edge
(
å™¶©ëabÀ
[
§c
],Åøn¶©ëabÀ[
this
->
id
()]);

50 
add_ouãdge
(
vid_t
 
d°
, 
ET
 * 
±r
, 
boﬁ
 
•ecül_edge
) {

58 
	gãm∂©e
 <
ty≥«me
 
	gEdgeD©aTy≥
>

59 
‹dî_by_degªe
(
°d
::
°rög
 &
ba£_fûíame
, 
nsh¨ds
, 
mërics
 &
m
) {

61 
	g°d
::
°rög
 
degªe_fûíame
 = 
fûíame_degªe_d©a
(
ba£_fûíame
);

63 
degªe
 * 
	gdegªes
;

64 
	gf
 = 
›í
(
degªe_fûíame
.
c_°r
(), 
O_RDONLY
);

65 
as£π
(
f
);

67 
size_t
 
	gnvîts
 = 
ªadfuŒ
<
degªe
>(
f
, &
	gdegªes
Ë/ (
	gdegªe
);

68 
log°ªam
(
LOG_INFO
Ë<< "SèπögÅÿ‹dî by degªes,Çumbî o‡vîti˚s: " << 
	gnvîts
 << 
	g°d
::
ídl
;

71 
vîãx_degªe
 * 
	gdeg¨øy
 = 
√w
 vîãx_degªe[
nvîts
];

72 
vid_t
 
	gi
=0; i < 
	gnvîts
; i++) {

73 
	gdeg¨øy
[
i
].
	gid
 = i;

74 
	gdeg¨øy
[
i
].
	gdeg
 = 
degªes
[i].
ödegªe
 + degªes[i].
outdegªe
;

77 
dñëe
 
	gdegªes
;

78 
	gdegªes
 = 
NULL
;

80 
log°ªam
(
LOG_INFO
Ë<< "S‹tög degªes... " << 
	g°d
::
ídl
;

83 
quickS‹t
(
deg¨øy
, ()
nvîts
, 
vîãx_degªe_Àss
);

86 
vid_t
 * 
	gå™¶©e_èbÀ
 = 
√w
 vid_t[
nvîts
];

87 
vid_t
 
	gi
=0; i<
	gnvîts
; i++) {

88 
	gå™¶©e_èbÀ
[
deg¨øy
[
i
].
	gid
] = i;

90 
	gdñëe
[] 
	gdeg¨øy
;

92 
log°ªam
(
LOG_INFO
Ë<< "Cª©edÅøn¶©i⁄ÅabÀ. " << 
	g°d
::
ídl
;

94 
	g°d
::
°rög
 
å™¶©e_èbÀ_fûe
 = 
ba£_fûíame
 + ".vertexmap";

95 
	gdf
 = 
›í
(
å™¶©e_èbÀ_fûe
.
c_°r
(), 
O_RDWR
 | 
O_CREAT
, 
S_IROTH
 | 
S_IWOTH
 | 
S_IWUSR
 | 
S_IRUSR
);

96 i‡(
	gdf
 < 0Ë
log°ªam
(
LOG_ERROR
Ë<< "CouldÇŸ wrôêvîãx m≠: " << 
	gå™¶©e_èbÀ_fûe
 <<

97 "Éº‹: " << 
°ªº‹
(
î∫o
Ë<< 
	g°d
::
ídl
;

98 
as£π
(
df
 >= 0);

99 
pwrôó
(
df
, 
å™¶©e_èbÀ
, 
nvîts
 * (
vid_t
), 0);

100 
˛o£
(
df
);

102 
log°ªam
(
LOG_INFO
Ë<< "Tøn¶©i⁄ m≠ saved i¡ÿfûe: " << 
	gå™¶©e_èbÀ_fûe
 << 
	g°d
::
ídl
;

106 
°rùedio
 * 
	giomgr
 = 
√w
 såùedio(
m
);

109 
	g°d
::
ve˘‹
<
°d
::
∑ú
<
vid_t
, 
	gvid_t
> > 
	göãrvÆs
;

110 
lﬂd_vîãx_öãrvÆs
(
ba£_fûíame
, 
nsh¨ds
, 
öãrvÆs
);

112 
	g°d
::
°rög
 
c⁄vîãdfûíame
 = 
ba£_fûíame
 + "_degord";

115 
	gsh¨dî
<
	gEdgeD©aTy≥
, EdgeD©aTy≥> 
sh¨dîobj
(
c⁄vîãdfûíame
);

116 
	gsh¨dîobj
.
°¨t_¥ïro˚ssög
();

119 
	gp
=0;Ö<
	gnsh¨ds
;Ö++) {

120 
log°ªam
(
LOG_INFO
Ë<< "Rïro˚ssög sh¨d " << 
	gp
 << 
	g°d
::
ídl
;

121 
size_t
 
	gnvîti˚s
 = 
öãrvÆs
[
p
].
£c⁄d
 - i¡îvÆs[p].
fú°
 + 1;

122 
	g°d
::
ve˘‹
<
•ecül_sh¨dög_vîãx
<, 
	gEdgeD©aTy≥
> > 
vîti˚s
(
nvîti˚s
, s≥cül_sh¨dög_vîãx<, 
EdgeD©aTy≥
>());

123 
size_t
 
	gj
=0; j<
	gvîti˚s
.
size
(); j++) {

124 
	gvîti˚s
[
j
] = 
•ecül_sh¨dög_vîãx
<, 
	gEdgeD©aTy≥
>(&
	gsh¨dîobj
, (
	gvid_t
Ë(
	göãrvÆs
[
p
].
	gfú°
 + 
	gj
), 
	gå™¶©e_èbÀ
);

125 
	gvîti˚s
[
j
].
	gscheduÀd
 = 
åue
;

127 
	gmem‹y_sh¨d
<, 
	gEdgeD©aTy≥
, 
	g•ecül_sh¨dög_vîãx
<, EdgeD©aTy≥> > 
memsh¨d
(
iomgr
, 
fûíame_sh¨d_ed©a
<
EdgeD©aTy≥
>(
ba£_fûíame
, 
p
, 
nsh¨ds
),

128 
fûíame_sh¨d_adj
(
ba£_fûíame
, 
p
, 
nsh¨ds
),

129 
öãrvÆs
[
p
].
fú°
, i¡îvÆs[p].
£c⁄d
, 1024 * 1024, 
m
);

130 
	gmemsh¨d
.
	g⁄ly_adja˚ncy
 = 
åue
;

131 
	gmemsh¨d
.
dißbÀ_∑øŒñ_lﬂdög
();

132 
	gmemsh¨d
.
lﬂd
();

133 
	gmemsh¨d
.
lﬂd_vîti˚s
(
öãrvÆs
[
p
].
fú°
, i¡îvÆs[p].
£c⁄d
, 
vîti˚s
);

136 
	gsh¨dîobj
.
íd_¥ïro˚ssög
();

137 
dñëe
 
	giomgr
;

138 
	gdñëe
[] 
	gå™¶©e_èbÀ
;

141 
	g°d
::
°rög°ªam
 
ss
; 
	gss
 << 
	gnsh¨ds
;

142  
	gsh¨dîobj
.
execuã_sh¨dög
(
ss
.
°r
());

	@shards/dynamicdata/dynamicblock.hpp

29 #i‚de‡
gøphchi_xcode_dy«micblock_hµ


30 
	#gøphchi_xcode_dy«micblock_hµ


	)

32 
	~<°döt.h
>

34 
«me•a˚
 
	ggøphchi
 {

36 
gë_block_uncom¥es£d_size
(
°d
::
°rög
 
blockfûíame
, 
deÁu…size
);

37 
gë_block_uncom¥es£d_size
(
°d
::
°rög
 
blockfûíame
, 
deÁu…size
) {

38 
	g°d
::
°rög
 
szfûíame
 = 
blockfûíame
 + ".bsize";

39 
FILE
 * 
	gf
 = 
f›í
(
szfûíame
.
c_°r
(), "r");

40 i‡(
	gf
 !
NULL
) {

41 
sz
;

42 
‰ód
(&
sz
, 1, (), 
f
);

43 
f˛o£
(
f
);

44  
	gsz
;

46  
	gdeÁu…size
;

50 
wrôe_block_uncom¥es£d_size
(
°d
::
°rög
 
blockfûíame
, 
size
);

51 
wrôe_block_uncom¥es£d_size
(
°d
::
°rög
 
blockfûíame
, 
size
) {

52 
	g°d
::
°rög
 
szfûíame
 = 
blockfûíame
 + ".bsize";

53 
FILE
 * 
	gf
 = 
f›í
(
szfûíame
.
c_°r
(), "w");

54 
fwrôe
(&
size
, 1, (), 
f
);

55 
f˛o£
(
f
);

57 i‡(
	gsize
 > 20000000) {

58 
log°ªam
(
LOG_DEBUG
Ë<< "Block " << 
	gblockfûíame
 << " size:" << 
	gsize
 << 
	g°d
::
ídl
;

62 
dñëe_block_uncom¥es£d_sizefûe
(
°d
::
°rög
 
blockfûíame
);

63 
dñëe_block_uncom¥es£d_sizefûe
(
°d
::
°rög
 
blockfûíame
) {

64 
°d
::
°rög
 
szfûíame
 = 
blockfûíame
 + ".bsize";

65 
	gîr
 = 
ªmove
(
szfûíame
.
c_°r
());

66 i‡(
	gîr
 != 0) {

73 
	gãm∂©e
 <
ty≥«me
 
	gET
>

74 
	sdy«micd©a_block
 {

75 
	gnôems
;

76 
uöt8_t
 * 
	gd©a
;

77 
ET
 * 
	gchivecs
;

79 
dy«micd©a_block
(Ë: 
d©a
(
NULL
), 
chivecs
(NULL) {}

81 
dy«micd©a_block
(
nôems
, 
uöt8_t
 * 
d©a
, 
d©asize
) :Çitems(nitems){

82 
chivecs
 = 
√w
 
ET
[
nôems
];

83 
uöt8_t
 * 
	g±r
 = 
d©a
;

84 
	gi
=0; i < 
	gnôems
; i++) {

85 
as£π
(
±r
 - 
d©a
 <
d©asize
);

86 
ty≥«me
 
	gET
::
sizew‹d_t
 * 
sz
 = (—y≥«mê
ET
::sizew‹d_à*Ë
±r
);

87 
	g±r
 +(
ty≥«me
 
ET
::
sizew‹d_t
);

88 
	gchivecs
[
i
] = 
ET
(((
uöt16_t
 *)
sz
)[0], ((uöt16_à*)sz)[1], (
ty≥«me
 ET::
ñemít_ty≥_t
 *Ë
±r
);

89 
	g±r
 +(Ë((
uöt16_t
 *)
sz
)[1] * (
ty≥«me
 
ET
::
ñemít_ty≥_t
);

93 
ET
 * 
edgevec
(
i
) {

94 
as£π
(
i
 < 
nôems
);

95 
as£π
(
chivecs
 !
NULL
);

96  &
	gchivecs
[
i
];

99 
wrôe
(
uöt8_t
 ** 
outd©a
, & 
size
) {

101 
	gsize
 = 0;

102 
	gi
=0; i < 
	gnôems
; i++) {

103 
	gsize
 +
chivecs
[
i
].
ˇ∑côy
(Ë* (
ty≥«me
 
ET
::
ñemít_ty≥_t
Ë+ —y≥«mêET::
sizew‹d_t
);

106 *
	goutd©a
 = (
uöt8_t
 *Ë
mÆloc
(
size
);

107 
uöt8_t
 * 
	g±r
 = *
outd©a
;

108 
	gi
=0; i < 
	gnôems
; i++) {

109 
	gET
 & 
	gvec
 = 
chivecs
[
i
];

110 ((
	guöt16_t
 *Ë
	g±r
)[0] = 
vec
.
size
();

111 ((
	guöt16_t
 *Ë
	g±r
)[1] = 
vec
.
ˇ∑côy
();

113 
	g±r
 +(
ty≥«me
 
ET
::
sizew‹d_t
);

114 
	gvec
.
wrôe
((
ty≥«me
 
ET
::
ñemít_ty≥_t
 *Ë
±r
);

115 
	g±r
 +
vec
.
ˇ∑côy
(Ë* (
ty≥«me
 
ET
::
ñemít_ty≥_t
);

119 ~
dy«micd©a_block
() {

120 i‡(
	gchivecs
 !
NULL
) {

121 
dñëe
 [] 
chivecs
;

	@shards/dynamicdata/memoryshard.hpp

30 #i‚de‡
DEF_GRAPHCHI_MEMSHARD


31 
	#DEF_GRAPHCHI_MEMSHARD


	)

34 
	~<io°ªam
>

35 
	~<c°dio
>

36 
	~<s°ªam
>

37 
	~<ve˘‹
>

38 
	~<f˙é.h
>

39 
	~<uni°d.h
>

40 
	~<as£π.h
>

41 
	~<°rög
>

43 
	~"≠i/gøph_obje˘s.hµ
"

44 
	~"mërics/mërics.hµ
"

45 
	~"io/°rùedio.hµ
"

46 
	~"gøphchi_ty≥s.hµ
"

47 
	~"sh¨ds/dy«micd©a/dy«micblock.hµ
"

49 
«me•a˚
 
	ggøphchi
 {

52 
	gãm∂©e
 <
ty≥«me
 
	gVT
,Åy≥«mê
	gET
,Åy≥«mê
	gsvîãx_t
 = 
gøphchi_vîãx
<
VT
, ET> >

53 ˛as†
	cmem‹y_sh¨d
 {

55 
°rùedio
 * 
	giomgr
;

57 
	g°d
::
°rög
 
fûíame_ed©a
;

58 
	g°d
::
°rög
 
fûíame_adj
;

60 
vid_t
 
	gønge_°
;

61 
vid_t
 
	gønge_íd
;

62 
size_t
 
	gadjfûesize
;

63 
size_t
 
	ged©afûesize
;

65 
size_t
 
	gedgïå
;

66 
vid_t
 
	g°ªamög_off£t_vid
;

67 
size_t
 
	g°ªamög_off£t
;

68 
size_t
 
	gønge_°¨t_off£t
;

69 
size_t
 
	gønge_°¨t_edge_±r
;

70 
size_t
 
	g°ªamög_off£t_edge_±r
;

71 
uöt8_t
 * 
	gadjd©a
;

72 ** 
	gedged©a
;

73 
	g°d
::
ve˘‹
<
size_t
> 
blocksizes
;

74 
	g°d
::
ve˘‹
< 
dy«micd©a_block
<
ET
> * > 
dy«micblocks
;

75 
uöt64_t
 
	gchunkid
;

77 
	g°d
::
ve˘‹
<> 
block_ed©a£ssi⁄s
;

78 
	gadj_£ssi⁄
;

80 
boﬁ
 
	gis_lﬂded
;

81 
size_t
 
	gblocksize
;

82 
	gmërics
 &
	gm
;

84 
boﬁ
 
	gdißbÀ_async_wrôes
;

87 
	gpublic
:

88 
boﬁ
 
⁄ly_adja˚ncy
;

91 
mem‹y_sh¨d
(
°rùedio
 * 
iomgr
,

92 
°d
::
°rög
 
_fûíame_ed©a
,

93 
°d
::
°rög
 
_fûíame_adj
,

94 
vid_t
 
_ønge_°¨t
,

95 
vid_t
 
_ønge_íd
,

96 
size_t
 
_blocksize
,

97 
mërics
 &
_m
Ë: 
iomgr
(iomgr), 
fûíame_ed©a
(
_fûíame_ed©a
),

98 
fûíame_adj
(
_fûíame_adj
),

99 
ønge_°
(
_ønge_°¨t
), 
ønge_íd
(
_ønge_íd
), 
blocksize
(
_blocksize
), 
m
(
_m
) {

100 
	gadjd©a
 = 
NULL
;

101 
	g⁄ly_adja˚ncy
 = 
Ál£
;

102 
	gis_lﬂded
 = 
Ál£
;

103 
	gdißbÀ_async_wrôes

Ál£
;

104 
	gadj_£ssi⁄
 = -1;

105 
	gedged©a
 = 
NULL
;

109 ~
mem‹y_sh¨d
() {

110 
	gnblocks
 = (Ë
block_ed©a£ssi⁄s
.
size
();

112 
	gi
=0; i < 
	gnblocks
; i++) {

113 i‡(
	gedged©a
[
i
] !
NULL
) {

114 
iomgr
->
m™aged_ªÀa£
(
block_ed©a£ssi⁄s
[
i
], &
edged©a
[i]);

115 
	giomgr
->
˛o£_£ssi⁄
(
block_ed©a£ssi⁄s
[
i
]);

118 i‡(
	gdy«micblocks
[
i
] !
NULL
)

119 
dñëe
 
dy«micblocks
[
i
];

120 
	gdy«micblocks
[
i
] = 
NULL
;

122 
	gdy«micblocks
.
˛ór
();

123 i‡(
	gadj_£ssi⁄
 >= 0) {

124 i‡(
adjd©a
 !
NULL
Ë
iomgr
->
m™aged_ªÀa£
(
adj_£ssi⁄
, &adjdata);

125 
	giomgr
->
˛o£_£ssi⁄
(
adj_£ssi⁄
);

127 i‡(
	gedged©a
 !
NULL
)

128 
‰ì
(
edged©a
);

129 
	gedged©a
 = 
NULL
;

133 
£t_dißbÀ_async_wrôes
(
boﬁ
 
b
) {

134 
	gdißbÀ_async_wrôes
 = 
b
;

138 
wrôe_™d_ªÀa£_block
(
i
) {

139 
	g°d
::
°rög
 
block_fûíame
 = 
fûíame_sh¨d_ed©a_block
(
fûíame_ed©a
, 
i
, 
blocksize
);

141 
	gdy«micd©a_block
<
	gET
> * 
	gdynblock
 = 
dy«micblocks
[
i
];

142 i‡(
	gdynblock
 !
NULL
) {

143 
uöt8_t
 * 
outd©a
;

144 
	goutsize
;

145 
	gdynblock
->
wrôe
(&
outd©a
, 
outsize
);

146 
wrôe_block_uncom¥es£d_size
(
block_fûíame
, 
outsize
);

147 
	giomgr
->
m™aged_pwrôó_now
(
block_ed©a£ssi⁄s
[
i
], &
outd©a
, 
outsize
, 0);

148 
	giomgr
->
m™aged_ªÀa£
(
block_ed©a£ssi⁄s
[
i
], &
edged©a
[i]);

149 
	giomgr
->
˛o£_£ssi⁄
(
block_ed©a£ssi⁄s
[
i
]);

150 
‰ì
(
outd©a
);

151 
dñëe
 
	gdynblock
;

153 
	gdy«micblocks
[
i
] = 
NULL
;

157 
commô
(
boﬁ
 
commô_öedges
, boﬁ 
commô_ouãdges
) {

158 i‡(
	gblock_ed©a£ssi⁄s
.
size
(Ë=0 || 
⁄ly_adja˚ncy
) ;

159 
as£π
(
is_lﬂded
);

160 
mërics_íåy
 
	gcm
 = 
m
.
°¨t_time
();

168 
	gnblocks
 = (Ë
block_ed©a£ssi⁄s
.
size
();

170 i‡(
	gcommô_öedges
) {

171 
	gi
=0; i < 
	gnblocks
; i++) {

173 
wrôe_™d_ªÀa£_block
(
i
);

174 
	gedged©a
[
i
] = 
NULL
;

176 } i‡(
	gcommô_ouãdges
) {

177 
size_t
 
	gœ°
 = 
°ªamög_off£t_edge_±r
;

178 i‡(
	gœ°
 == 0){

180 
œ°
 = 
ed©afûesize
;

183 
	g°¨tblock
 = (Ë(
ønge_°¨t_edge_±r
 / 
blocksize
);

184 
	gídblock
 = (Ë(
œ°
 / 
blocksize
);

185 
	gi
=0; i < 
	gnblocks
; i++) {

186 i‡(
	gi
 >
°¨tblock
 && 
i
 <
ídblock
) {

187 
wrôe_™d_ªÀa£_block
(
i
);

189 
	giomgr
->
m™aged_ªÀa£
(
block_ed©a£ssi⁄s
[
i
], &
edged©a
[i]);

191 
	gedged©a
[
i
] = 
NULL
;

192 
	giomgr
->
˛o£_£ssi⁄
(
block_ed©a£ssi⁄s
[
i
]);

195 
	gm
.
°›_time
(
cm
, "memshard_commit");

197 
	giomgr
->
m™aged_ªÀa£
(
adj_£ssi⁄
, &
adjd©a
);

199 
	gi
=0; i < 
	gnblocks
; i++) {

200 i‡(
	gedged©a
[
i
] !
NULL
) {

201 
iomgr
->
m™aged_ªÀa£
(
block_ed©a£ssi⁄s
[
i
], &
edged©a
[i]);

204 
	gblock_ed©a£ssi⁄s
.
˛ór
();

205 
	gis_lﬂded
 = 
Ál£
;

208 
boﬁ
 
lﬂded
() {

209  
	gis_lﬂded
;

212 
	g¥iv©e
:

215 
lﬂd_ed©a
() {

216 
boﬁ
 
async_öedged©a_lﬂdög
 = 
Ál£
;

217 
as£π
(
blocksize
 % () == 0);

218 
	gnblocks
 = (Ë(
ed©afûesize
 / 
blocksize
 + (edatafilesize % blocksize != 0));

219 
	gedged©a
 = (**Ë
ˇŒoc
(
nblocks
, (*));

220 
size_t
 
	gcom¥es£dsize
 = 0;

221 
	gblockid
 = 0;

224 
	gåue
) {

225 
	g°d
::
°rög
 
block_fûíame
 = 
fûíame_sh¨d_ed©a_block
(
fûíame_ed©a
, 
blockid
, 
blocksize
);

226 i‡(
fûe_exi°s
(
block_fûíame
)) {

227 
size_t
 
	gfsize
 = 
gë_block_uncom¥es£d_size
(
block_fûíame
, 
°d
::
mö
(
ed©afûesize
 - 
blocksize
 * 
blockid
, blocksize));

228 
	gcom¥es£dsize
 +
gë_fûesize
(
block_fûíame
);

229 
	gblock£ssi⁄
 = 
iomgr
->
›í_£ssi⁄
(
block_fûíame
, 
Ál£
, 
åue
);

230 
	gblock_ed©a£ssi⁄s
.
push_back
(
block£ssi⁄
);

231 
	gblocksizes
.
push_back
(
fsize
);

232 
	gedged©a
[
blockid
] = 
NULL
;

233 
	giomgr
->
m™aged_mÆloc
(
block£ssi⁄
, &
edged©a
[
blockid
], 
fsize
, 0);

234 i‡(
	gasync_öedged©a_lﬂdög
) {

235 
as£π
(
Ál£
);

237 
	giomgr
->
m™aged_¥óda_now
(
block£ssi⁄
, &
edged©a
[
blockid
], 
fsize
, 0);

239 
	gdy«micblocks
.
push_back
(
NULL
);

241 
	gblockid
++;

244 i‡(
	gblockid
 == 0) {

245 
log°ªam
(
LOG_ERROR
Ë<< "Sh¨d block fûêdidÇŸÉxi°s:" << 
block_fûíame
 << 
°d
::
ídl
;

250 
as£π
(
blockid
 =
nblocks
);

251 
log°ªam
(
LOG_DEBUG
Ë<< "Com¥es£d/fuŒ size: " << 
	gcom¥es£dsize
 * 1.0 / 
	ged©afûesize
 <<

252 "Çumbî o‡blocks: " << 
	gnblocks
 << 
	g°d
::
ídl
;

256 
check_block_öôülized
(
blockid
) {

257 i‡(
	gdy«micblocks
[
blockid
] =
NULL
) {

258 
°d
::
°rög
 
block_fûíame
 = 
fûíame_sh¨d_ed©a_block
(
fûíame_ed©a
, 
blockid
, 
blocksize
);

259 
size_t
 
	gfsize
 = 
gë_block_uncom¥es£d_size
(
block_fûíame
, 
°d
::
mö
(
ed©afûesize
 - 
blocksize
 * 
blockid
, blocksize));

260 
	g√dges
 = 
°d
::
mö
(
ed©afûesize
 - 
blocksize
 * 
blockid
, blocksize) / ();

261 
	gdy«micblocks
[
blockid
] = 
√w
 
dy«micd©a_block
<
ET
>(
√dges
, (
	guöt8_t
*Ë
	gedged©a
[blockid], 
	gfsize
);

266 
	gpublic
:

269 
lﬂd
() {

270 
is_lﬂded
 = 
åue
;

271 
	gadjfûesize
 = 
gë_fûesize
(
fûíame_adj
);

272 
	ged©afûesize
 = 
gë_sh¨d_ed©a_fûesize
<
ET
>(
fûíame_ed©a
);

274 #ifde‡
SUPPORT_DELETIONS


275 
	gasync_öedged©a_lﬂdög
 = 
Ál£
;

281 
	gadj_£ssi⁄
 = 
iomgr
->
›í_£ssi⁄
(
fûíame_adj
, 
åue
);

282 
	giomgr
->
m™aged_mÆloc
(
adj_£ssi⁄
, &
adjd©a
, 
adjfûesize
, 0);

284 
size_t
 
	gbufsize
 = 16 * 1204 * 1024;

285 
	gn
 = (Ë(
adjfûesize
 / 
bufsize
 + 1);

287 #¥agm®
omp
 
∑øŒñ
 

288 
	gi
=0; i < 
	gn
; i++) {

289 
size_t
 
	gt‹ód
 = 
°d
::
mö
(
adjfûesize
 - 
i
 * 
bufsize
, (size_t)bufsize);

290 
	giomgr
->
¥óda_now
(
adj_£ssi⁄
, 
adjd©a
 + 
i
 * 
bufsize
, 
t‹ód
, i * bufsize, 
åue
);

295 i‡(!
	g⁄ly_adja˚ncy
) {

296 
lﬂd_ed©a
();

304 
lﬂd_vîti˚s
(
vid_t
 
wödow_°
, vid_à
wödow_í
, 
°d
::
ve˘‹
<
svîãx_t
> & 
¥óŒoc
, 
boﬁ
 
öedges
=
åue
, boﬁ 
ouãdges
=true) {

306 
m
.
°¨t_time
("memoryshard_create_edges");

308 
as£π
(
adjd©a
 !
NULL
);

311 
uöt8_t
 * 
	g±r
 = 
adjd©a
;

312 
uöt8_t
 * 
	gíd
 = 
±r
 + 
adjfûesize
;

313 
vid_t
 
	gvid
 = 0;

314 
	gedgïå
 = 0;

316 
	g°ªamög_off£t
 = 0;

317 
	g°ªamög_off£t_vid
 = 0;

318 
	g°ªamög_off£t_edge_±r
 = 0;

319 
	gønge_°¨t_off£t
 = 
adjfûesize
;

320 
	gønge_°¨t_edge_±r
 = 
ed©afûesize
;

322 
boﬁ
 
	g£toff£t
 = 
Ál£
;

323 
boﬁ
 
	g£å™geoff£t
 = 
Ál£
;

324 
	g±r
 < 
	gíd
) {

325 i‡(!
	g£toff£t
 && 
	gvid
 > 
	gønge_íd
) {

328 
	g°ªamög_off£t
 = 
±r
-
adjd©a
;

329 
	g°ªamög_off£t_vid
 = 
vid
;

330 
	g°ªamög_off£t_edge_±r
 = 
edgïå
;

331 
	g£toff£t
 = 
åue
;

333 i‡(!
	g£å™geoff£t
 && 
	gvid
>=
ønge_°
) {

334 
ønge_°¨t_off£t
 = 
±r
-
adjd©a
;

335 
	gønge_°¨t_edge_±r
 = 
edgïå
;

336 
	g£å™geoff£t
 = 
åue
;

339 
uöt8_t
 
	gns
 = *
±r
;

340 
	gn
;

342 
	g±r
 +(
uöt8_t
);

344 i‡(
	gns
 == 0x00) {

346 
uöt8_t
 
nz
 = *
±r
;

347 
	g±r
 +(
uöt8_t
);

348 
	gvid
++;

349 
	gvid
 +
nz
;

353 i‡(
	gns
 == 0xff) {

354 
n
 = *((
uöt32_t
*)
±r
);

355 
	g±r
 +(
uöt32_t
);

357 
	gn
 = 
ns
;

359 
svîãx_t
* 
	gvîãx
 = 
NULL
;

361 i‡(
	gvid
>=
wödow_°
 && 
vid
 <=
wödow_í
) {

362 
vîãx
 = &
¥óŒoc
[
vid
-
wödow_°
];

363 i‡(!
	gvîãx
->
	gscheduÀd
Ëvîãx = 
NULL
;

365 
boﬁ
 
	g™y_edges
 = 
Ál£
;

366 --
	gn
>=0) {

367 
blockid
 = (Ë(
edgïå
 / 
blocksize
);

369 
vid_t
 
	gèrgë
 = *((vid_t*Ë
±r
);

370 
	g±r
 +(
vid_t
);

371 i‡(
	gvîãx
 !
NULL
 && 
ouãdges
)

373 
check_block_öôülized
(
blockid
);

374 
	gvîãx
->
add_ouãdge
(
èrgë
, (
⁄ly_adja˚ncy
 ? 
NULL
 : 
dy«micblocks
[
blockid
]->
edgevec
((
edgïå
 % 
blocksize
)/())), 
Ál£
);

377 i‡(
	gèrgë
 >
wödow_°
) {

378 i‡(
èrgë
 <
wödow_í
) {

379 i‡(
öedges
) {

380 
svîãx_t
 & 
d°vîãx
 = 
¥óŒoc
[
èrgë
 - 
wödow_°
];

381 i‡(
	gd°vîãx
.
	gscheduÀd
) {

382 
	g™y_edges
 = 
åue
;

384 
check_block_öôülized
(
blockid
);

385 
ET
 * 
	gïå
 = (
⁄ly_adja˚ncy
 ? 
NULL
 : 
dy«micblocks
[
blockid
]->
edgevec
((
edgïå
 % 
blocksize
)/()));

387 
	gd°vîãx
.
add_öedge
(
vid
, (
⁄ly_adja˚ncy
 ? 
NULL
 : 
ïå
), 
Ál£
);

388 
	gd°vîãx
.
	g∑øŒñ_ß„
 = 
d°vîãx
.
∑øŒñ_ß„
 && (
vîãx
 =
NULL
);

393 i‡(
	gvîãx
 =
NULL
) {

394 
±r
 +(
vid_t
Ë* 
n
;

395 
	gedgïå
 +(
n
 + 1) * ();

400 
	gedgïå
 += ();

404 i‡(
	g™y_edges
 && 
	gvîãx
 !
NULL
) {

405 
vîãx
->
∑øŒñ_ß„
 = 
Ál£
;

407 
	gvid
++;

409 
	gm
.
°›_time
("mem‹ysh¨d_¸óã_edges", 
Ál£
);

412 
size_t
 
off£t_f‹_°ªam_c⁄t
() {

413  
	g°ªamög_off£t
;

415 
vid_t
 
off£t_vid_f‹_°ªam_c⁄t
() {

416  
	g°ªamög_off£t_vid
;

418 
size_t
 
ed©a_±r_f‹_°ªam_c⁄t
() {

419  
	g°ªamög_off£t_edge_±r
;

	@shards/dynamicdata/slidingshard.hpp

30 #i‚de‡
DEF_GRAPHCHI_SLIDINGSHARD


31 
	#DEF_GRAPHCHI_SLIDINGSHARD


	)

34 
	~<io°ªam
>

35 
	~<c°dio
>

36 
	~<s°ªam
>

37 
	~<ve˘‹
>

38 
	~<f˙é.h
>

39 
	~<uni°d.h
>

40 
	~<as£π.h
>

41 
	~<°rög
>

43 
	~"≠i/gøph_obje˘s.hµ
"

44 
	~"mërics/mërics.hµ
"

45 
	~"loggî/loggî.hµ
"

46 
	~"io/°rùedio.hµ
"

47 
	~"gøphchi_ty≥s.hµ
"

49 
	~"≠i/dy«micd©a/chive˘‹.hµ
"

50 
	~"sh¨ds/dy«micd©a/dy«micblock.hµ
"

53 
«me•a˚
 
	ggøphchi
 {

58 
	gãm∂©e
 <
ty≥«me
 
	gET
>

59 
	ssblock
 {

61 
	gwrôedesc
;

62 
	gªaddesc
;

63 
size_t
 
	goff£t
;

64 
size_t
 
	gíd
;

65 
uöt8_t
 * 
	gd©a
;

66 
uöt8_t
 * 
	g±r
;

67 
boﬁ
 
	ga˘ive
;

68 
boﬁ
 
	gis_ed©a_block
;

69 
	g°d
::
°rög
 
blockfûíame
;

70 
	gdy«micd©a_block
<
	gET
> * 
	gdynblock
;

72 
sblock
(Ë: 
wrôedesc
(0), 
ªaddesc
(0), 
a˘ive
(
Ál£
Ë{ 
	gd©a
 = 
NULL
; 
	gdynblock
 = NULL; }

73 
sblock
(
wdesc
, 
rdesc
, 
boﬁ
 
is_ed©a_block
=
Ál£
Ë: 
wrôedesc
(wdesc), 
ªaddesc
‘desc), 
a˘ive
(false),

74 
is_ed©a_block
(is_ed©a_block){ 
	gd©a
 = 
NULL
; 
	gdynblock
 = NULL; }

75 
sblock
(
wdesc
, 
rdesc
, 
boﬁ
 
is_ed©a_block
, 
°d
::
°rög
 
blockfûíame
Ë: 
wrôedesc
(wdesc), 
ªaddesc
‘desc), 
a˘ive
(
Ál£
),

76 
is_ed©a_block
(is_ed©a_block), 
blockfûíame
(blockfilename) {

77 
as£π
(
is_ed©a_block
 =
åue
);

78 
	gd©a
 = 
NULL
;

79 
	gdynblock
 = 
NULL
;

82 
commô_async
(
°rùedio
 * 
iomgr
) {

83 
commô_now
(
iomgr
);

84 
ªÀa£
(
iomgr
);

87 
commô_now
(
°rùedio
 * 
iomgr
) {

88 i‡(
	ga˘ive
 && 
	gd©a
 !
NULL
 && 
wrôedesc
 >= 0) {

89 
size_t
 
Àn
 = 
±r
-
d©a
;

90 i‡(
	gÀn
 > 
	gíd
-
	goff£t
ËÀ¿
íd
-
off£t
;

91 i‡(
	gis_ed©a_block
) {

92 
uöt8_t
 * 
	goutd©a
 = 
NULL
;

93 
	gªÆsize
;

94 
	gdynblock
->
wrôe
(&
outd©a
, 
ªÆsize
);

95 
wrôe_block_uncom¥es£d_size
(
blockfûíame
, 
ªÆsize
);

96 
	giomgr
->
m™aged_pwrôó_now
(
wrôedesc
, &
outd©a
, 
ªÆsize
, 0);

97 
‰ì
(
outd©a
);

99 
	giomgr
->
m™aged_pwrôó_now
(
wrôedesc
, &
d©a
, 
Àn
, 
off£t
);

103 
ªad_async
(
°rùedio
 * 
iomgr
) {

104 
as£π
(
Ál£
);

106 
ªad_now
(
°rùedio
 * 
iomgr
) {

107 i‡(
	gis_ed©a_block
) {

108 
	gªÆsize
 = 
gë_block_uncom¥es£d_size
(
blockfûíame
, 
íd
-
off£t
);

109 
	giomgr
->
m™aged_¥óda_now
(
ªaddesc
, &
d©a
, 
ªÆsize
, 0);

110 
	g√dges
 = (
íd
 - 
off£t
) / ();

111 
	gdynblock
 = 
√w
 
dy«micd©a_block
<
ET
>(
√dges
, (
	guöt8_t
 *Ë
	gd©a
, 
	gªÆsize
);

113 
	giomgr
->
m™aged_¥óda_now
(
ªaddesc
, &
d©a
, 
íd
 - 
off£t
, offset);

117 
ªÀa£
(
°rùedio
 * 
iomgr
) {

118 i‡(
	gd©a
 !
NULL
) {

119 
iomgr
->
m™aged_ªÀa£
(
ªaddesc
, &
d©a
);

121 i‡(
	gis_ed©a_block
) {

122 
	giomgr
->
˛o£_£ssi⁄
(
ªaddesc
);

124 i‡(
	gdynblock
 !
NULL
) {

125 
dñëe
 
dynblock
;

126 
	gdynblock
 = 
NULL
;

128 
	gd©a
 = 
NULL
;

134 
	södexíåy
 {

135 
size_t
 
	gadjoff£t
, 
	ged©aoff£t
;

136 
ödexíåy
(
size_t
 
a
, size_à
e
Ë: 
adjoff£t
◊), 
ed©aoff£t
(e) {}

144 
	gãm∂©e
 <
ty≥«me
 
	gVT
,Åy≥«mê
	gET
,Åy≥«mê
	gsvîãx_t
 = 
gøphchi_vîãx
<
VT
, ET>,Åy≥«mê
	gET•ecül
 = 
ET
>

145 ˛as†
	c¶idög_sh¨d
 {

147 
°rùedio
 * 
iomgr
;

149 
	g°d
::
°rög
 
fûíame_ed©a
;

150 
	g°d
::
°rög
 
fûíame_adj
;

151 
vid_t
 
	gønge_°
, 
	gønge_íd
;

152 
size_t
 
	gblocksize
;

154 
vid_t
 
	gcurvid
;

155 
size_t
 
	gadjoff£t
, 
	ged©aoff£t
, 
	gadjfûesize
, 
	ged©afûesize
;

156 
size_t
 
	gwödow_°¨t_ed©aoff£t
;

158 
	g°d
::
ve˘‹
<
sblock
<
ET
> > 
a˘iveblocks
;

159 
	gadjfûe_£ssi⁄
;

160 
	gwrôedesc
;

161 
	gsblock
<
	gET
> * 
	gcurblock
;

162 
	gsblock
<
	gET
> * 
	gcuødjblock
;

163 
	gmërics
 &
	gm
;

165 
	g°d
::
m≠
<, 
	gödexíåy
> 
	g•¨£_ödex
;

166 
boﬁ
 
	gdißbÀ_wrôes
;

167 
boﬁ
 
	gdißbÀ_async_wrôes
;

168 
boﬁ
 
	gasync_ed©a_lﬂdög
;

172 
	gpublic
:

173 
boﬁ
 
⁄ly_adja˚ncy
;

175 
¶idög_sh¨d
(
°rùedio
 * 
iomgr
, 
°d
::
°rög
 
_fûíame_ed©a
, std::°rög 
_fûíame_adj
, 
vid_t
 
_ønge_°
, vid_à
_ønge_í
, 
size_t
 
_blocksize
, 
mërics
 &
_m
,

176 
boﬁ
 
_dißbÀ_wrôes
=
Ál£
, boﬁ 
⁄lyadj
 = false) :

177 
iomgr
(iomgr),

178 
fûíame_ed©a
(
_fûíame_ed©a
),

179 
fûíame_adj
(
_fûíame_adj
),

180 
ønge_°
(
_ønge_°
),

181 
ønge_íd
(
_ønge_í
),

182 
blocksize
(
_blocksize
),

183 
m
(
_m
),

184 
dißbÀ_wrôes
(
_dißbÀ_wrôes
) {

185 
	gcurvid
 = 0;

186 
	gadjoff£t
 = 0;

187 
	ged©aoff£t
 = 0;

188 
	gdißbÀ_wrôes
 = 
Ál£
;

189 
	g⁄ly_adja˚ncy
 = 
⁄lyadj
;

190 
	gcurblock
 = 
NULL
;

191 
	gcuødjblock
 = 
NULL
;

192 
	gwödow_°¨t_ed©aoff£t
 = 0;

193 
	gdißbÀ_async_wrôes
 = 
Ál£
;

195 
	gblocksize
 % (Ë!0Ë
blocksize
++;

196 
as£π
(
blocksize
 % ()==0);

198 
	gadjfûesize
 = 
gë_fûesize
(
fûíame_adj
);

199 
	ged©afûesize
 = 
gë_sh¨d_ed©a_fûesize
<>(
fûíame_ed©a
);

200 i‡(!
	g⁄ly_adja˚ncy
) {

201 
log°ªam
(
LOG_DEBUG
Ë<< "TŸÆÉdgêd©®size: " << 
	ged©afûesize
 << 
	g°d
::
ídl
;

206 
	gadjfûe_£ssi⁄
 = 
iomgr
->
›í_£ssi⁄
(
fûíame_adj
, 
åue
);

207 
ßve_off£t
();

209 
	gasync_ed©a_lﬂdög
 = 
Ál£
;

213 ~
¶idög_sh¨d
() {

214 
ªÀa£_¥i‹_to_off£t
(
åue
);

215 i‡(
	gcurblock
 !
NULL
) {

216 
curblock
->
ªÀa£
(
iomgr
);

217 
dñëe
 
	gcurblock
;

218 
	gcurblock
 = 
NULL
;

220 i‡(
	gcuødjblock
 !
NULL
) {

221 
cuødjblock
->
ªÀa£
(
iomgr
);

222 
dñëe
 
	gcuødjblock
;

223 
	gcuødjblock
 = 
NULL
;

227 
	giomgr
->
˛o£_£ssi⁄
(
adjfûe_£ssi⁄
);

231 
size_t
 
num_edges
() {

232  
	ged©afûesize
 / (
	gET
);

235 
	g¥Ÿe˘ed
:

236 
size_t
 
gë_adjoff£t
(Ë{  
adjoff£t
; }

237 
size_t
 
gë_ed©aoff£t
(Ë{  
	ged©aoff£t
; }

239 
ßve_off£t
() {

242 
	g•¨£_ödex
.
ö£π
(
°d
::
∑ú
<, 
ödexíåy
>(-(()
curvid
), indexíåy(
adjoff£t
, 
ed©aoff£t
)));

245 
move_˛o£_to
(
vid_t
 
v
) {

246 i‡(
	gcurvid
 >
v
) ;

248 
	g°d
::
m≠
<,
	gödexíåy
>::
ôî©‹
 
lowîbd_ôî
 = 
•¨£_ödex
.
lowî_bound
(-(()
v
));

249 
	g˛o£°_vid
 = -(()
lowîbd_ôî
->
fú°
);

250 
as£π
(
˛o£°_vid
>=0);

251 
ödexíåy
 
	g˛o£°_off£t
 = 
lowîbd_ôî
->
£c⁄d
;

252 
as£π
(
˛o£°_vid
 <()
v
);

253 i‡(
	g˛o£°_vid
 > ()
	gcurvid
) {

254 
log°ªam
(
LOG_DEBUG
)

255 << "Slidög sh¨d, sèπ: " << 
	gønge_°
 << " movedÅo: " << 
	g˛o£°_vid
 << " " << 
	g˛o£°_off£t
.
	gadjoff£t
 << ",ásked f‹ : " << 
	gv
 << " wa†ö: curvid" << 
	gcurvid
 << " " <<ádjoff£à<< 
	g°d
::
ídl
;

256 i‡(
	gcurblock
 !
NULL
)

257 
curblock
->
±r
 +
˛o£°_off£t
.
ed©aoff£t
 -Édataoffset;

258 i‡(
	gcuødjblock
 !
NULL
)

259 
cuødjblock
->
±r
 +
˛o£°_off£t
.
adjoff£t
 -ádjoffset;

260 
	gcurvid
 = (
vid_t
)
˛o£°_vid
;

261 
	gadjoff£t
 = 
˛o£°_off£t
.
adjoff£t
;

262 
	ged©aoff£t
 = 
˛o£°_off£t
.
ed©aoff£t
;

271 
ölöe
 
check_curblock
(
size_t
 
t‹ód
) {

272 i‡(
	gcurblock
 =
NULL
 || 
curblock
->
íd
 < 
ed©aoff£t
+
t‹ód
) {

273 i‡(
curblock
 !
NULL
) {

274 i‡(!
curblock
->
a˘ive
) {

275 
curblock
->
ªÀa£
(
iomgr
);

279 
	g°d
::
°rög
 
blockfûíame
 = 
fûíame_sh¨d_ed©a_block
(
fûíame_ed©a
, (Ë(
ed©aoff£t
 / 
blocksize
), blocksize);

280 
	ged©a_£ssi⁄
 = 
iomgr
->
›í_£ssi⁄
(
blockfûíame
, 
Ál£
, 
åue
);

281 
	gsblock
<
	gET
> 
√wblock
(
ed©a_£ssi⁄
,Éd©a_£ssi⁄, 
åue
, 
blockfûíame
);

285 
	g√wblock
.
	goff£t
 = (
ed©aoff£t
 / 
blocksize
) * blocksize;

286 
size_t
 
	gc‹ª˘i⁄
 = 
ed©aoff£t
 - 
√wblock
.
off£t
;

287 
	g√wblock
.
	gíd
 = 
°d
::
mö
(
ed©afûesize
, 
√wblock
.
off£t
 + 
blocksize
);

288 
as£π
(
√wblock
.
íd
 >√wblock.
off£t
);

289 
	gªÆsize
 = 
gë_block_uncom¥es£d_size
(
blockfûíame
, 
√wblock
.
íd
 -Çewblock.
off£t
);

290 
	giomgr
->
m™aged_mÆloc
(
ed©a_£ssi⁄
, &
√wblock
.
d©a
, 
ªÆsize
,Çewblock.
off£t
);

291 
	g√wblock
.
	g±r
 = 
√wblock
.
d©a
 + 
c‹ª˘i⁄
;

292 
	ga˘iveblocks
.
push_back
(
√wblock
);

293 
	gcurblock
 = &
a˘iveblocks
[a˘iveblocks.
size
()-1];

294 
	gcurblock
->
	ga˘ive
 = 
åue
;

295 
	gcurblock
->
ªad_now
(
iomgr
);

299 
ölöe
 
check_adjblock
(
size_t
 
t‹ód
) {

300 i‡(
	gcuødjblock
 =
NULL
 || 
cuødjblock
->
íd
 <
adjoff£t
 + 
t‹ód
) {

301 i‡(
cuødjblock
 !
NULL
) {

302 
cuødjblock
->
ªÀa£
(
iomgr
);

303 
dñëe
 
	gcuødjblock
;

304 
	gcuødjblock
 = 
NULL
;

306 
	gsblock
<
	gET
> * 
	g√wblock
 = 
√w
 
sblock
<
ET
>(0, 
	gadjfûe_£ssi⁄
);

307 
	g√wblock
->
	goff£t
 = 
adjoff£t
;

308 
	g√wblock
->
	gíd
 = 
°d
::
mö
(
adjfûesize
, 
adjoff£t
+
blocksize
);

309 
as£π
(
√wblock
->
íd
 > 0);

310 
as£π
(
√wblock
->
íd
 >√wblock->
off£t
);

311 
	giomgr
->
m™aged_mÆloc
(
adjfûe_£ssi⁄
, &
√wblock
->
d©a
,Çewblock->
íd
 -Çewblock->
off£t
, 
adjoff£t
);

312 
	g√wblock
->
	g±r
 = 
√wblock
->
d©a
;

313 
mërics_íåy
 
	gme
 = 
m
.
°¨t_time
();

314 
	giomgr
->
m™aged_¥óda_now
(
adjfûe_£ssi⁄
, &
√wblock
->
d©a
,Çewblock->
íd
 -Çewblock->
off£t
, 
adjoff£t
);

315 
	gm
.
°›_time
(
me
, "blockload");

316 
	gcuødjblock
 = 
√wblock
;

320 
	gãm∂©e
 <
ty≥«me
 
	gU
>

321 
ölöe
 
U
 
ªad_vÆ
() {

322 
check_adjblock
((
U
));

323 
U
 
	gªs
 = *((U*)
cuødjblock
->
±r
);

324 
	gadjoff£t
 +(
U
);

325 
	gcuødjblock
->
	g±r
 +(
U
);

326  
	gªs
;

329 
ölöe
 
ET
 * 
ªad_edgïå
() {

330 i‡(
	g⁄ly_adja˚ncy
Ë 
	gNULL
;

331 
check_curblock
(());

332 
	ged©aoff£t
 += ();

333 
	gblockedgeidx
 = (
curblock
->
±r
 - curblock->
d©a
) / ();

334 
	gcurblock
->
	g±r
 += ();

335 
as£π
(
curblock
->
dynblock
 !
NULL
);

336  
	gcurblock
->
	gdynblock
->
edgevec
(
blockedgeidx
);

339 
ölöe
 
skù
(
n
, 
sz
) {

340 
size_t
 
	gtŸ
 = 
n
 * 
sz
;

341 
	gadjoff£t
 +
tŸ
;

342 i‡(
	gcuødjblock
 !
NULL
)

343 
cuødjblock
->
±r
 +
tŸ
;

344 
	ged©aoff£t
 +(Ë* 
n
;

345 i‡(
	gcurblock
 !
NULL
)

346 
curblock
->
±r
 +(Ë* 
n
;

349 
	gpublic
:

353 
ªad_√xt_vîti˚s
(
nvecs
, 
vid_t
 
°¨t
, 
°d
::
ve˘‹
<
svîãx_t
> & 
¥óŒoc
, 
boﬁ
 
ªc‹d_ödex
=
Ál£
, boﬁ 
dißbÀ_wrôes
=false) {

356 
mërics_íåy
 
me
 = 
m
.
°¨t_time
();

357 i‡(!
	gªc‹d_ödex
)

358 
move_˛o£_to
(
°¨t
);

361 
	gcurblock
 = 
NULL
;

362 
ªÀa£_¥i‹_to_off£t
(
Ál£
, 
dißbÀ_wrôes
);

363 
as£π
(
a˘iveblocks
.
size
() <= 1);

366 i‡(!
	ga˘iveblocks
.
em±y
(Ë&& !
	g⁄ly_adja˚ncy
) {

367 
	gcurblock
 = &
a˘iveblocks
[0];

369 
vid_t
 
	gœ°ªc
 = 
°¨t
;

370 
	gwödow_°¨t_ed©aoff£t
 = 
ed©aoff£t
;

372 
	gi
=(()
curvid
Ë- (()
°¨t
); i<
	gnvecs
; i++) {

373 i‡(
	gadjoff£t
 >
adjfûesize
) ;

377 
	gn
;

378 i‡(
	gªc‹d_ödex
 && (
	gsize_t
)(
	gcurvid
 - 
	gœ°ªc
Ë>(
size_t
Ë
°d
::
max
(()100000, 
nvecs
/16)) {

379 
ßve_off£t
();

380 
	gœ°ªc
 = 
curvid
;

382 
uöt8_t
 
	gns
 = 
ªad_vÆ
<uint8_t>();

383 i‡(
	gns
 == 0x00) {

384 
curvid
++;

385 
uöt8_t
 
	gnz
 = 
ªad_vÆ
<uint8_t>();

386 
	gcurvid
 +
nz
;

387 
	gi
 +
nz
;

391 i‡(
	gns
 == 0xff) {

392 
n
 = 
ªad_vÆ
<
uöt32_t
>();

394 
	gn
 = 
ns
;

397 i‡(
	gi
<0) {

399 
skù
(
n
, (
vid_t
));

401 
	gsvîãx_t
& 
	gvîãx
 = 
¥óŒoc
[
i
];

402 
as£π
(
vîãx
.
id
(Ë=
curvid
);

404 i‡(
	gvîãx
.
	gscheduÀd
) {

406 --
	gn
 >= 0) {

407 
boﬁ
 
•ecül_edge
 = 
Ál£
;

408 
vid_t
 
	gèrgë
 = ((
ET
Ë=(
ET•ecül
Ë? 
ªad_vÆ
<vid_t>(Ë: 
å™¶©e_edge
‘ód_vÆ<vid_t>(), 
•ecül_edge
));

409 
ET
 * 
	gevÆue
 = 
ªad_edgïå
();

412 
	gvîãx
.
add_ouãdge
(
èrgë
, 
evÆue
, 
•ecül_edge
);

414 i‡(!((
	gèrgë
 >
ønge_°
 && 
èrgë
 <
ønge_íd
))) {

415 
log°ªam
(
LOG_ERROR
Ë<< "Eº‹ : " << 
èrgë
 << "ÇŸ i¿[" << 
ønge_°
 << " - " << 
ønge_íd
 << "]" << 
°d
::
ídl
;

416 
	giomgr
->
¥öt_£ssi⁄
(
adjfûe_£ssi⁄
);

418 
as£π
(
èrgë
 >
ønge_°
 &&Å¨gë <
ønge_íd
);

423 
skù
(
n
, (
vid_t
));

426 
	gcurvid
++;

428 
	gm
.
°›_time
(
me
, "read_next_vertices");

429 
	gcurblock
 = 
NULL
;

436 
commô
(
sblock
<
ET
> &
b
, 
boﬁ
 
synchr⁄ou¶y
, boﬁ 
dißbÀ_wrôes
=
Ál£
) {

437 i‡(
dißbÀ_async_wrôes
Ë
synchr⁄ou¶y
 = 
åue
;

438 i‡(
	gsynchr⁄ou¶y
) {

439 
mërics_íåy
 
	gme
 = 
m
.
°¨t_time
();

440 i‡(!
	gdißbÀ_wrôes
Ë
	gb
.
commô_now
(
iomgr
);

441 
	gm
.
°›_time
(
me
, "commit");

442 
	gb
.
ªÀa£
(
iomgr
);

444 i‡(!
	gdißbÀ_wrôes
Ë
	gb
.
commô_async
(
iomgr
);

445 
	gb
.
ªÀa£
(
iomgr
);

449 
öôd©a
() {

450 
log°ªam
(
LOG_FATAL
Ë<< "öôd©a(ËnŸ im∂emíãd f‹ dy«mi¯edgêd©a" << 
	g°d
::
ídl
;

451 
as£π
(
Ál£
);

458 
Êush
() {

459 
ªÀa£_¥i‹_to_off£t
(
åue
);

460 i‡(
	gcuødjblock
 !
NULL
) {

461 
cuødjblock
->
ªÀa£
(
iomgr
);

462 
dñëe
 
	gcuødjblock
;

463 
	gcuødjblock
 = 
NULL
;

470 
£t_off£t
(
size_t
 
√woff
, 
vid_t
 
_curvid
, size_à
edgïå
) {

471 
	gthis
->
	gadjoff£t
 = 
√woff
;

472 
	gthis
->
	gcurvid
 = 
_curvid
;

473 
	gthis
->
	ged©aoff£t
 = 
edgïå
;

474 i‡(
	gcuødjblock
 !
NULL
) {

475 
cuødjblock
->
ªÀa£
(
iomgr
);

476 
dñëe
 
	gcuødjblock
;

477 
	gcuødjblock
 = 
NULL
;

484 
ªÀa£_¥i‹_to_off£t
(
boﬁ
 
Æl
=
Ál£
, boﬁ 
dißbÀ_wrôes
=false) {

485 
i
=()
a˘iveblocks
.
size
(Ë- 1; 
	gi
 >= 0; i--) {

486 
	gsblock
<
	gET
> &
	gb
 = 
a˘iveblocks
[
i
];

487 i‡(
	gb
.
	gíd
 <
ed©aoff£t
 || 
Æl
) {

488 
commô
(
b
, 
Æl
, 
dißbÀ_wrôes
);

489 
	ga˘iveblocks
.
îa£
(
a˘iveblocks
.
begö
(Ë+ ()
i
);

494 
£t_dißbÀ_async_wrôes
(
boﬁ
 
b
) {

495 
	gdißbÀ_async_wrôes
 = 
b
;

499 
	g°d
::
°rög
 
gë_öfo_js⁄
() {

500 
°d
::
°rög°ªam
 
js⁄
;

501 
	gjs⁄
 << "\"size\": ";

502 
	gjs⁄
 << 
	ged©afûesize
 << 
	g°d
::
ídl
;

503 
	gjs⁄
 << ", \"windowStart\": ";

504 
	gjs⁄
 << 
	gwödow_°¨t_ed©aoff£t
;

505 
	gjs⁄
 << ", \"windowEnd\": ";

506 
	gjs⁄
 << 
	ged©aoff£t
;

507 
	gjs⁄
 << ", \"intervalStart\": ";

508 
	gjs⁄
 << 
	gønge_°
;

509 
	gjs⁄
 << ", \"intervalEnd\": ";

510 
	gjs⁄
 << 
	gønge_íd
;

511  
	gjs⁄
.
°r
();

	@shards/memoryshard.hpp

29 #ifde‡
DYNAMICEDATA


30 
	~"sh¨ds/dy«micd©a/mem‹ysh¨d.hµ
"

33 #i‚de‡
DEF_GRAPHCHI_MEMSHARD


34 
	#DEF_GRAPHCHI_MEMSHARD


	)

37 
	~<io°ªam
>

38 
	~<c°dio
>

39 
	~<s°ªam
>

40 
	~<ve˘‹
>

41 
	~<f˙é.h
>

42 
	~<uni°d.h
>

43 
	~<as£π.h
>

44 
	~<°rög
>

46 
	~"≠i/gøph_obje˘s.hµ
"

47 
	~"mërics/mërics.hµ
"

48 
	~"io/°rùedio.hµ
"

49 
	~"gøphchi_ty≥s.hµ
"

52 
«me•a˚
 
	ggøphchi
 {

56 
	gãm∂©e
 <
ty≥«me
 
	gVT
,Åy≥«mê
	gET
,Åy≥«mê
	gsvîãx_t
 = 
gøphchi_vîãx
<
VT
, ET> >

57 ˛as†
	cmem‹y_sh¨d
 {

59 
°rùedio
 * 
	giomgr
;

61 
	g°d
::
°rög
 
fûíame_ed©a
;

62 
	g°d
::
°rög
 
fûíame_adj
;

64 
vid_t
 
	gønge_°
;

65 
vid_t
 
	gønge_íd
;

66 
size_t
 
	gadjfûesize
;

67 
size_t
 
	ged©afûesize
;

69 
vid_t
 
	g°ªamög_off£t_vid
;

70 
size_t
 
	g°ªamög_off£t
;

71 
size_t
 
	gønge_°¨t_off£t
;

72 
size_t
 
	gønge_°¨t_edge_±r
;

73 
size_t
 
	g°ªamög_off£t_edge_±r
;

74 
uöt8_t
 * 
	gadjd©a
;

75 ** 
	gedged©a
;

76 * 
	gd⁄ïå
;

77 
	g°d
::
ve˘‹
<
size_t
> 
blocksizes
;

78 
uöt64_t
 
	gchunkid
;

80 
	g°d
::
ve˘‹
<> 
block_ed©a£ssi⁄s
;

81 
	gadj_£ssi⁄
;

83 
boﬁ
 
	gasync_ed©a_lﬂdög
;

84 
boﬁ
 
	gis_lﬂded
;

85 
boﬁ
 
	gdißbÀ_async_wrôes
;

86 
boﬁ
 
	gíabÀ_∑øŒñ_lﬂdög
;

87 
size_t
 
	gblocksize
;

88 
	gmërics
 &
	gm
;

89 
	g°d
::
ve˘‹
<
sh¨d_ödex
> 
ödex
;

91 
	gpublic
:

92 
boﬁ
 
⁄ly_adja˚ncy
;

94 
mem‹y_sh¨d
(
°rùedio
 * 
iomgr
,

95 
°d
::
°rög
 
_fûíame_ed©a
,

96 
°d
::
°rög
 
_fûíame_adj
,

97 
vid_t
 
_ønge_°¨t
,

98 
vid_t
 
_ønge_íd
,

99 
size_t
 
_blocksize
,

100 
mërics
 &
_m
Ë: 
iomgr
(iomgr), 
fûíame_ed©a
(
_fûíame_ed©a
),

101 
fûíame_adj
(
_fûíame_adj
),

102 
ønge_°
(
_ønge_°¨t
), 
ønge_íd
(
_ønge_íd
), 
blocksize
(
_blocksize
), 
m
(
_m
) {

103 
	gadjd©a
 = 
NULL
;

104 
	g⁄ly_adja˚ncy
 = 
Ál£
;

105 
	gis_lﬂded
 = 
Ál£
;

106 
	gadj_£ssi⁄
 = -1;

107 
	gedged©a
 = 
NULL
;

108 
	gd⁄ïå
 = 
NULL
;

109 
	gíabÀ_∑øŒñ_lﬂdög
 = 
åue
;

110 
	gdißbÀ_async_wrôes
 = 
Ál£
;

111 
	gasync_ed©a_lﬂdög
 = !
svîãx_t
().
compuèti⁄Æ_edges
();

112 #ifde‡
SUPPORT_DELETIONS


113 
	gasync_ed©a_lﬂdög
 = 
Ál£
;

117 ~
mem‹y_sh¨d
() {

118 
	gnblocks
 = (Ë
block_ed©a£ssi⁄s
.
size
();

120 
	gi
=0; i < 
	gnblocks
; i++) {

121 i‡(
	gedged©a
[
i
] !
NULL
 && 
block_ed©a£ssi⁄s
[i] !
CACHED_SESSION_ID
) {

122 
iomgr
->
m™aged_ªÀa£
(
block_ed©a£ssi⁄s
[
i
], &
edged©a
[i]);

123 
	giomgr
->
˛o£_£ssi⁄
(
block_ed©a£ssi⁄s
[
i
]);

126 i‡(
	gadj_£ssi⁄
 >= 0) {

127 i‡(
adjd©a
 !
NULL
Ë
iomgr
->
m™aged_ªÀa£
(
adj_£ssi⁄
, &adjdata);

128 
	giomgr
->
˛o£_£ssi⁄
(
adj_£ssi⁄
);

130 i‡(
	gedged©a
 !
NULL
)

131 
‰ì
(
edged©a
);

132 
	gedged©a
 = 
NULL
;

133 i‡(
	gd⁄ïå
 !
NULL
) {

134 
‰ì
(
d⁄ïå
);

138 
£t_dißbÀ_async_wrôes
(
boﬁ
 
b
) {

139 
	gdißbÀ_async_wrôes
 = 
b
;

142 
dißbÀ_∑øŒñ_lﬂdög
() {

143 
	gíabÀ_∑øŒñ_lﬂdög
 = 
Ál£
;

146 
commô
(
boﬁ
 
commô_öedges
, boﬁ 
commô_ouãdges
) {

147 i‡(
	gblock_ed©a£ssi⁄s
.
size
(Ë=0 || 
⁄ly_adja˚ncy
) ;

148 
as£π
(
is_lﬂded
);

149 
mërics_íåy
 
	gcm
 = 
m
.
°¨t_time
();

157 
	gnblocks
 = (Ë
block_ed©a£ssi⁄s
.
size
();

159 i‡(
	gcommô_öedges
) {

160 
	g°¨t_°ªam_block
 = (Ë(
ønge_°¨t_edge_±r
 / 
blocksize
);

162 #¥agm®
omp
 
∑øŒñ
 

163 
	gi
=0; i < 
	gnblocks
; i++) {

166 i‡(
	gi
 >
°¨t_°ªam_block
 || 
dißbÀ_async_wrôes
) {

167 i‡(
block_ed©a£ssi⁄s
[
i
] !
CACHED_SESSION_ID
) {

169 i‡(
Ál£
 =
iomgr
->
gë_block_ˇche
().
c⁄sidî_ˇchög
(

170 
iomgr
->
gë_£ssi⁄_fûíame
(
block_ed©a£ssi⁄s
[
i
]), 
edged©a
[i], 
blocksizes
[i], 
åue
)) {

171 
	giomgr
->
m™aged_pwrôó_now
(
block_ed©a£ssi⁄s
[
i
], &
edged©a
[i], 
blocksizes
[i], 0);

172 
	giomgr
->
m™aged_ªÀa£
(
block_ed©a£ssi⁄s
[
i
], &
edged©a
[i]);

173 
	giomgr
->
˛o£_£ssi⁄
(
block_ed©a£ssi⁄s
[
i
]);

175 
	giomgr
->
˛o£_£ssi⁄
(
block_ed©a£ssi⁄s
[
i
]);

176 
	gblock_ed©a£ssi⁄s
[
i
] = 
CACHED_SESSION_ID
;

179 
	gedged©a
[
i
] = 
NULL
;

182 i‡(
	gblock_ed©a£ssi⁄s
[
i
] !
CACHED_SESSION_ID
) {

183 
iomgr
->
m™aged_pwrôó_async
(
block_ed©a£ssi⁄s
[
i
], &
edged©a
[i], 
blocksizes
[i], 0, 
åue
,Årue);

185 
	gedged©a
[
i
] = 
NULL
;

188 } i‡(
	gcommô_ouãdges
) {

189 
size_t
 
	gœ°
 = 
°ªamög_off£t_edge_±r
;

190 i‡(
	gœ°
 == 0){

192 
œ°
 = 
ed©afûesize
;

195 
	g°¨tblock
 = (Ë(
ønge_°¨t_edge_±r
 / 
blocksize
);

196 
	gídblock
 = (Ë(
œ°
 / 
blocksize
);

197 #¥agm®
omp
 
∑øŒñ
 

198 
	gi
=0; i < 
	gnblocks
; i++) {

199 i‡(
	gblock_ed©a£ssi⁄s
[
i
] !
CACHED_SESSION_ID
) {

200 i‡(
Ál£
 =
iomgr
->
gë_block_ˇche
().
c⁄sidî_ˇchög
(

201 
iomgr
->
gë_£ssi⁄_fûíame
(
block_ed©a£ssi⁄s
[
i
]), 
edged©a
[i], 
blocksizes
[i], 
åue
)) {

202 i‡(
	gi
 >
°¨tblock
 && 
i
 <
ídblock
) {

203 
iomgr
->
m™aged_pwrôó_now
(
block_ed©a£ssi⁄s
[
i
], &
edged©a
[i], 
blocksizes
[i], 0);

205 
	giomgr
->
m™aged_ªÀa£
(
block_ed©a£ssi⁄s
[
i
], &
edged©a
[i]);

206 
	giomgr
->
˛o£_£ssi⁄
(
block_ed©a£ssi⁄s
[
i
]);

208 
	giomgr
->
˛o£_£ssi⁄
(
block_ed©a£ssi⁄s
[
i
]);

209 
	gblock_ed©a£ssi⁄s
[
i
] = 
CACHED_SESSION_ID
;

212 
	gedged©a
[
i
] = 
NULL
;

215 
	gi
=0; i < 
	gnblocks
; i++) {

216 i‡(
	gblock_ed©a£ssi⁄s
[
i
] !
CACHED_SESSION_ID
) {

217 
iomgr
->
˛o£_£ssi⁄
(
block_ed©a£ssi⁄s
[
i
]);

222 
	gm
.
°›_time
(
cm
, "memshard_commit");

224 
	giomgr
->
m™aged_ªÀa£
(
adj_£ssi⁄
, &
adjd©a
);

226 
	gi
=0; i < 
	gnblocks
; i++) {

227 i‡(
	gedged©a
[
i
] !
NULL
) {

228 i‡(
block_ed©a£ssi⁄s
[
i
] !
CACHED_SESSION_ID
) {

229 
iomgr
->
m™aged_ªÀa£
(
block_ed©a£ssi⁄s
[
i
], &
edged©a
[i]);

233 
	gblock_ed©a£ssi⁄s
.
˛ór
();

234 
	gis_lﬂded
 = 
Ál£
;

237 
boﬁ
 
lﬂded
() {

238  
	gis_lﬂded
;

241 
	g¥iv©e
:

246 
°d
::
ve˘‹
<
sh¨d_ödex
> 
lﬂd_ödex
() {

247 
°d
::
°rög
 
ödexfûe
 = 
fûíame_sh¨d_adjidx
(
fûíame_adj
);

248 i‡(!
fûe_exi°s
(
ödexfûe
)) {

249 
log°ªam
(
LOG_DEBUG
Ë<< "C™nŸ föd index: " << 
	gödexfûe
 << 
	g°d
::
ídl
;

251 
	g°d
::
ve˘‹
<
sh¨d_ödex
> 
sögÀt⁄idx
;

252 
	gsögÀt⁄idx
.
push_back
(
sh¨d_ödex
(0, 0, 0));

253  
	gsögÀt⁄idx
;

256 
sh¨d_ödex
 * 
	gidxøw
;

257 
	gf
 = 
›í
(
ödexfûe
.
c_°r
(), 
O_RDONLY
);

258 
size_t
 
	gsz
 = 
ªadfuŒ
(
f
, &
idxøw
);

260 
	gnidx
 = (Ë(
sz
 / (
sh¨d_ödex
));

261 
	g°d
::
ve˘‹
<
sh¨d_ödex
> 
idx
;

262 
	gidx
.
push_back
(
sh¨d_ödex
(0, 0, 0));

263 
	gi
=0; i<
	gnidx
; i++) {

264 
	gidx
.
push_back
(
idxøw
[
i
]);

267 
‰ì
(
idxøw
);

268 
˛o£
(
f
);

269  
	gidx
;

272 
lﬂd_ed©a
() {

273 
as£π
(
blocksize
 % (
ET
) == 0);

274 
	gnblocks
 = (Ë(
ed©afûesize
 / 
blocksize
 + (edatafilesize % blocksize != 0));

275 
	gedged©a
 = (**Ë
ˇŒoc
(
nblocks
, (*));

276 
size_t
 
	gcom¥es£dsize
 = 0;

277 
	gblockid
 = 0;

279 i‡(!
	gasync_ed©a_lﬂdög
) {

280 
	gd⁄ïå
 = (*Ë
mÆloc
(
nblocks
 * ());

281 
	gi
=0; i < 
	gnblocks
; i++Ë
	gd⁄ïå
[
i
] = 1;

284 
	gblockid
 < 
	gnblocks
) {

285 
	g°d
::
°rög
 
block_fûíame
 = 
fûíame_sh¨d_ed©a_block
(
fûíame_ed©a
, 
blockid
, 
blocksize
);

286 i‡(
fûe_exi°s
(
block_fûíame
)) {

287 
size_t
 
	gfsize
 = 
°d
::
mö
(
ed©afûesize
 - 
blocksize
 * 
blockid
, blocksize);

289 
	gcom¥es£dsize
 +
gë_fûesize
(
block_fûíame
);

290 
	gblocksizes
.
push_back
(
fsize
);

293 * 
	gˇchedblock
 = 
iomgr
->
gë_block_ˇche
().
gë_ˇched
(
block_fûíame
);

294 i‡(
	gˇchedblock
 !
NULL
) {

296 
block_ed©a£ssi⁄s
.
push_back
(
CACHED_SESSION_ID
);

297 
	gedged©a
[
blockid
] = (*)
ˇchedblock
;

298 i‡(!
	gasync_ed©a_lﬂdög
) {

299 
	gd⁄ïå
[
blockid
] = 0;

302 
	gblock£ssi⁄
 = 
iomgr
->
›í_£ssi⁄
(
block_fûíame
, 
Ál£
, 
åue
);

303 
	gblock_ed©a£ssi⁄s
.
push_back
(
block£ssi⁄
);

305 
	gedged©a
[
blockid
] = 
NULL
;

306 
	giomgr
->
m™aged_mÆloc
(
block£ssi⁄
, &
edged©a
[
blockid
], 
fsize
, 0);

307 i‡(
	gasync_ed©a_lﬂdög
) {

308 
	giomgr
->
m™aged_¥óda_async
(
block£ssi⁄
, &
edged©a
[
blockid
], 
fsize
, 0);

310 
	giomgr
->
m™aged_¥óda_async
(
block£ssi⁄
, &
edged©a
[
blockid
], 
fsize
, 0, (vﬁ©ûê*)&
d⁄ïå
[blockid]);

313 
	gblockid
++;

316 i‡(
	gblockid
 == 0) {

317 
log°ªam
(
LOG_ERROR
Ë<< "Sh¨d block fûêdidÇŸÉxi°s:" << 
block_fûíame
 << 
°d
::
ídl
;

319 i‡(
	gblockid
 < 
	gnblocks
) {

320 
log°ªam
(
LOG_ERROR
Ë<< "DidÇŸ föd block " << 
	gblock_fûíame
 << 
	g°d
::
ídl
;

321 
log°ªam
(
LOG_ERROR
Ë<< "GoögÅÿexô..." << 
	g°d
::
ídl
;

327 
log°ªam
(
LOG_DEBUG
Ë<< "Com¥es£d/fuŒ size: " << 
	gcom¥es£dsize
 * 1.0 / 
	ged©afûesize
 <<

328 "Çumbî o‡blocks: " << 
	gnblocks
 << 
	g°d
::
ídl
;

329 
as£π
(
blockid
 =
nblocks
);

334 
	gpublic
:

337 
lﬂd
() {

338 
is_lﬂded
 = 
åue
;

339 
	gadjfûesize
 = 
gë_fûesize
(
fûíame_adj
);

341 #ifde‡
SUPPORT_DELETIONS


342 
	gasync_ed©a_lﬂdög
 = 
Ál£
;

348 
	gadj_£ssi⁄
 = 
iomgr
->
›í_£ssi⁄
(
fûíame_adj
, 
åue
);

349 
	giomgr
->
m™aged_mÆloc
(
adj_£ssi⁄
, &
adjd©a
, 
adjfûesize
, 0);

352 
size_t
 
	gbufsize
 = 16 * 1024 * 1024;

353 
	gn
 = (Ë(
adjfûesize
 / 
bufsize
 + 1);

355 #¥agm®
omp
 
∑øŒñ
 

356 
	gi
=0; i < 
	gn
; i++) {

357 
size_t
 
	gt‹ód
 = 
°d
::
mö
(
adjfûesize
 - 
i
 * 
bufsize
, (size_t)bufsize);

358 
	giomgr
->
¥óda_now
(
adj_£ssi⁄
, 
adjd©a
 + 
i
 * 
bufsize
, 
t‹ód
, i * bufsize, 
åue
);

363 i‡(!
	g⁄ly_adja˚ncy
) {

364 
	ged©afûesize
 = 
gë_sh¨d_ed©a_fûesize
<
ET
>(
fûíame_ed©a
);

365 
lﬂd_ed©a
();

371 
	g°ªamög_off£t
 = 0;

372 
	g°ªamög_off£t_vid
 = 0;

373 
	g°ªamög_off£t_edge_±r
 = 0;

374 
	gønge_°¨t_off£t
 = 
adjfûesize
;

375 
	gønge_°¨t_edge_±r
 = 
ed©afûesize
;

379 
	gödex
 = 
lﬂd_ödex
();

384 
lﬂd_vîti˚s
(
vid_t
 
wödow_°
, vid_à
wödow_í
, 
°d
::
ve˘‹
<
svîãx_t
> & 
¥óŒoc
, 
boﬁ
 
öedges
=
åue
, boﬁ 
ouãdges
=true) {

386 
m
.
°¨t_time
("memoryshard_create_edges");

388 
as£π
(
adjd©a
 !
NULL
);

390 
	gnblocks
 = (Ë(
ed©afûesize
 / 
blocksize
 + (edatafilesize % blocksize != 0));

392 
boﬁ
 
	g£toff£t
 = 
Ál£
;

393 
boﬁ
 
	g£å™geoff£t
 = 
Ál£
;

395 i‡(!
	gíabÀ_∑øŒñ_lﬂdög
) {

396 
	gödex
.
˛ór
();

397 
	gödex
.
push_back
(
sh¨d_ödex
(0, 0, 0));

400 #¥agm®
omp
 
∑øŒñ
 
scheduÀ
(
dy«mic
, 1)

401 
	gchunk
=0; chunk < ()
	gödex
.
size
(); chunk++) {

403 
uöt8_t
 * 
	g±r
 = 
adjd©a
 + 
ödex
[
chunk
].
fûïos
;

404 
uöt8_t
 * 
	gíd
 = 
adjd©a
 + (
chunk
 < (Ë
ödex
.
size
(Ë- 1 ? index[chunk + 1].
fûïos
 : 
adjfûesize
);

405 
vid_t
 
	gvid
 = 
ödex
[
chunk
].
vîãxid
;

406 
vid_t
 
	gvidí
 = (
chunk
 < (Ë
ödex
.
size
(Ë- 1 ? index[chunk + 1].
vîãxid
 : 0xffffffffu);

407 
size_t
 
	gedgïå
 = 
ödex
[
chunk
].
edgecou¡î
 * (
ET
);

408 
size_t
 
	gedgïå_íd
 = (
chunk
 < (Ë
ödex
.
size
(Ë- 1 ? index[chunk + 1].
edgecou¡î
 * (
ET
Ë: 
ed©afûesize
);

410 
boﬁ
 
	gc⁄èös_ønge_íd
 = 
vid
 < 
ønge_íd
 && 
vidí
 >Ñange_end;

411 
boﬁ
 
	gc⁄èös_ønge_°
 = 
vid
 <
ønge_°
 && 
vidí
 >Ñange_st;

415 i‡(!
	göedges
 && (
	gvid
 > 
	gwödow_í
 || 
	gvidí
 < 
	gwödow_°
)) {

419 i‡(!
	gasync_ed©a_lﬂdög
 && !
	g⁄ly_adja˚ncy
) {

421 
	gblid
=()
edgïå
/
blocksize
; blid<=()(
edgïå_íd
 /blocksize); blid++) {

422 i‡(
	gblid
 < 
	gnblocks
) {

423 
	gd⁄ïå
[
blid
] !0Ë{ 
u¶ìp
(10); }

429 
	g±r
 < 
	gíd
) {

430 i‡(
	gc⁄èös_ønge_íd
) {

431 i‡(!
	g£toff£t
 && 
	gvid
 > 
	gønge_íd
) {

434 
	g°ªamög_off£t
 = 
±r
-
adjd©a
;

435 
	g°ªamög_off£t_vid
 = 
vid
;

436 
	g°ªamög_off£t_edge_±r
 = 
edgïå
;

437 
	g£toff£t
 = 
åue
;

440 i‡(
	gc⁄èös_ønge_°
) {

441 i‡(!
	g£å™geoff£t
 && 
	gvid
 >
ønge_°
) {

442 
ønge_°¨t_off£t
 = 
±r
-
adjd©a
;

443 
	gønge_°¨t_edge_±r
 = 
edgïå
;

444 
	g£å™geoff£t
 = 
åue
;

448 
uöt8_t
 
	gns
 = *
±r
;

449 
	gn
;

451 
	g±r
 +(
uöt8_t
);

453 i‡(
	gns
 == 0x00) {

455 
uöt8_t
 
nz
 = *
±r
;

456 
	g±r
 +(
uöt8_t
);

457 
	gvid
++;

458 
	gvid
 +
nz
;

462 i‡(
	gns
 == 0xff) {

463 
n
 = *((
uöt32_t
*)
±r
);

464 
	g±r
 +(
uöt32_t
);

466 
	gn
 = 
ns
;

468 
svîãx_t
* 
	gvîãx
 = 
NULL
;

470 i‡(
	gvid
>=
wödow_°
 && 
vid
 <=
wödow_í
) {

471 
vîãx
 = &
¥óŒoc
[
vid
-
wödow_°
];

472 i‡(!
	gvîãx
->
	gscheduÀd
Ëvîãx = 
NULL
;

474 
boﬁ
 
	g™y_edges
 = 
Ál£
;

475 --
	gn
>=0) {

476 
blockid
 = (Ë(
edgïå
 / 
blocksize
);

478 
vid_t
 
	gèrgë
 = *((vid_t*Ë
±r
);

479 
	g±r
 +(
vid_t
);

480 i‡(
	gvîãx
 !
NULL
 && 
ouãdges
)

482 * 
ïå
 = (
⁄ly_adja˚ncy
 ? 
NULL
 : &(
edged©a
[
blockid
][
edgïå
 % 
blocksize
]));

483 
	gvîãx
->
add_ouãdge
(
èrgë
, (
⁄ly_adja˚ncy
 ? 
NULL
 : (
ET
*Ë
ïå
), 
Ál£
);

486 i‡(
	gèrgë
 >
wödow_°
) {

487 i‡(
èrgë
 <
wödow_í
) {

488 i‡(
öedges
) {

489 
svîãx_t
 & 
d°vîãx
 = 
¥óŒoc
[
èrgë
 - 
wödow_°
];

490 i‡(
	gd°vîãx
.
	gscheduÀd
) {

491 
	g™y_edges
 = 
åue
;

493 * 
	gïå
 = (
⁄ly_adja˚ncy
 ? 
NULL
 : &(
edged©a
[
blockid
][
edgïå
 % 
blocksize
]));

495 
	gd°vîãx
.
add_öedge
(
vid
, (
⁄ly_adja˚ncy
 ? 
NULL
 : (
ET
*Ë
ïå
), 
Ál£
);

496 
	gd°vîãx
.
	g∑øŒñ_ß„
 = 
d°vîãx
.
∑øŒñ_ß„
 && (
vîãx
 =
NULL
);

501 i‡(
	gvîãx
 =
NULL
) {

502 
±r
 +(
vid_t
Ë* 
n
;

503 
	gedgïå
 +(
n
 + 1Ë* (
ET
);

508 
	gedgïå
 +(
ET
);

512 i‡(
	g™y_edges
 && 
	gvîãx
 !
NULL
) {

513 
vîãx
->
∑øŒñ_ß„
 = 
Ál£
;

515 
	gvid
++;

518 
	gm
.
°›_time
("mem‹ysh¨d_¸óã_edges", 
Ál£
);

521 
size_t
 
off£t_f‹_°ªam_c⁄t
() {

522  
	g°ªamög_off£t
;

524 
vid_t
 
off£t_vid_f‹_°ªam_c⁄t
() {

525  
	g°ªamög_off£t_vid
;

527 
size_t
 
ed©a_±r_f‹_°ªam_c⁄t
() {

528  
	g°ªamög_off£t_edge_±r
;

	@shards/slidingshard.hpp

30 #ifde‡
DYNAMICEDATA


31 
	~"sh¨ds/dy«micd©a/¶idögsh¨d.hµ
"

34 #i‚de‡
DEF_GRAPHCHI_SLIDINGSHARD


35 
	#DEF_GRAPHCHI_SLIDINGSHARD


	)

38 
	~<io°ªam
>

39 
	~<c°dio
>

40 
	~<s°ªam
>

41 
	~<ve˘‹
>

42 
	~<f˙é.h
>

43 
	~<uni°d.h
>

44 
	~<as£π.h
>

45 
	~<°rög
>

47 
	~"≠i/gøph_obje˘s.hµ
"

48 
	~"mërics/mërics.hµ
"

49 
	~"loggî/loggî.hµ
"

50 
	~"io/°rùedio.hµ
"

51 
	~"gøphchi_ty≥s.hµ
"

54 
«me•a˚
 
	ggøphchi
 {

59 
	ssblock
 {

61 
	gwrôedesc
;

62 
	gªaddesc
;

63 
size_t
 
	goff£t
;

64 
size_t
 
	gíd
;

65 
uöt8_t
 * 
	gd©a
;

66 
uöt8_t
 * 
	g±r
;

67 
boﬁ
 
	ga˘ive
;

68 
boﬁ
 
	gis_ed©a_block
;

70 
sblock
(Ë: 
wrôedesc
(0), 
ªaddesc
(0), 
a˘ive
(
Ál£
Ë{ 
	gd©a
 = 
NULL
; }

71 
sblock
(
wdesc
, 
rdesc
, 
boﬁ
 
is_ed©a_block
=
Ál£
Ë: 
wrôedesc
(wdesc), 
ªaddesc
‘desc), 
a˘ive
(false),

72 
is_ed©a_block
(is_ed©a_block){ 
	gd©a
 = 
NULL
; }

74 
commô_async
(
°rùedio
 * 
iomgr
) {

75 i‡(
	gªaddesc
 !
CACHED_SESSION_ID
) {

76 i‡(
a˘ive
 && 
d©a
 !
NULL
 && 
wrôedesc
 >= 0) {

77 i‡(
is_ed©a_block
) {

78 
°d
::
°rög
 
blockfûíame
 = 
iomgr
->
gë_£ssi⁄_fûíame
(
ªaddesc
);

79 i‡(
	gÁl£
 =
iomgr
->
gë_block_ˇche
().
c⁄sidî_ˇchög
(
blockfûíame
, 
d©a
, 
íd
 - 
off£t
, 
åue
)) {

80 
	giomgr
->
m™aged_pwrôó_async
(
wrôedesc
, &
d©a
, 
íd
-
off£t
, 0, 
åue
,Årue);

82 
	gªaddesc
 = 
wrôedesc
 = 
CACHED_SESSION_ID
;

84 
	gd©a
 = 
NULL
;

86 
	giomgr
->
m™aged_pwrôó_async
(
wrôedesc
, &
d©a
, 
íd
-
off£t
, off£t, 
åue
);

92 
commô_now
(
°rùedio
 * 
iomgr
) {

93 i‡(
	gªaddesc
 !
CACHED_SESSION_ID
) {

94 i‡(
a˘ive
 && 
d©a
 !
NULL
 && 
wrôedesc
 >= 0) {

95 
size_t
 
Àn
 = 
±r
-
d©a
;

96 i‡(
	gÀn
 > 
	gíd
-
	goff£t
ËÀ¿
íd
-
off£t
;

97 i‡(
	gis_ed©a_block
) {

98 
	g°d
::
°rög
 
blockfûíame
 = 
iomgr
->
gë_£ssi⁄_fûíame
(
ªaddesc
);

99 i‡(
	gÁl£
 =
iomgr
->
gë_block_ˇche
().
c⁄sidî_ˇchög
(
blockfûíame
, 
d©a
, 
íd
 - 
off£t
, 
åue
)) {

100 
	giomgr
->
m™aged_pwrôó_now
(
wrôedesc
, &
d©a
, 
íd
 - 
off£t
, 0);

102 
	gªaddesc
 = 
wrôedesc
 = 
CACHED_SESSION_ID
;

105 
	giomgr
->
m™aged_pwrôó_now
(
wrôedesc
, &
d©a
, 
Àn
, 
off£t
);

110 
ªad_async
(
°rùedio
 * 
iomgr
) {

111 i‡(
	gªaddesc
 !
CACHED_SESSION_ID
) {

112 i‡(
is_ed©a_block
) {

113 
iomgr
->
m™aged_¥óda_async
(
ªaddesc
, &
d©a
, (
íd
 - 
off£t
), 0);

115 
	giomgr
->
m™aged_¥óda_async
(
ªaddesc
, &
d©a
, 
íd
 - 
off£t
, offset);

120 
ªad_now
(
°rùedio
 * 
iomgr
) {

121 i‡(
	gªaddesc
 !
CACHED_SESSION_ID
) {

122 i‡(
is_ed©a_block
) {

123 
iomgr
->
m™aged_¥óda_now
(
ªaddesc
, &
d©a
, 
íd
-
off£t
, 0);

125 
	giomgr
->
m™aged_¥óda_now
(
ªaddesc
, &
d©a
, 
íd
-
off£t
, offset);

130 
ªÀa£
(
°rùedio
 * 
iomgr
) {

131 i‡(
	gd©a
 !
NULL
 && 
ªaddesc
 !
CACHED_SESSION_ID
) {

132 i‡(
is_ed©a_block
) {

134 
iomgr
->
m™aged_ªÀa£
(
ªaddesc
, &
d©a
);

135 
	giomgr
->
˛o£_£ssi⁄
(
ªaddesc
);

137 
	giomgr
->
m™aged_ªÀa£
(
ªaddesc
, &
d©a
);

141 
	gd©a
 = 
NULL
;

147 
	södexíåy
 {

148 
size_t
 
	gadjoff£t
, 
	ged©aoff£t
;

149 
ödexíåy
(
size_t
 
a
, size_à
e
Ë: 
adjoff£t
◊), 
ed©aoff£t
(e) {}

156 
	gãm∂©e
 <
ty≥«me
 
	gVT
,Åy≥«mê
	gET
,Åy≥«mê
	gsvîãx_t
 = 
gøphchi_vîãx
<
VT
, ET>,Åy≥«mê
	gET•ecül
 = 
ET
>

157 ˛as†
	c¶idög_sh¨d
 {

159 
°rùedio
 * 
iomgr
;

161 
	g°d
::
°rög
 
fûíame_ed©a
;

162 
	g°d
::
°rög
 
fûíame_adj
;

163 
vid_t
 
	gønge_°
, 
	gønge_íd
;

164 
size_t
 
	gblocksize
;

166 
vid_t
 
	gcurvid
;

167 
size_t
 
	gadjoff£t
, 
	ged©aoff£t
, 
	gadjfûesize
, 
	ged©afûesize
;

168 
size_t
 
	gwödow_°¨t_ed©aoff£t
;

170 
	g°d
::
ve˘‹
<
sblock
> 
a˘iveblocks
;

171 
	gadjfûe_£ssi⁄
;

172 
	gwrôedesc
;

173 
sblock
 * 
	gcurblock
;

174 
sblock
 * 
	gcuødjblock
;

175 
	gmërics
 &
	gm
;

177 
	g°d
::
m≠
<, 
	gödexíåy
> 
	g•¨£_ödex
;

178 
boﬁ
 
	gdißbÀ_wrôes
;

179 
boﬁ
 
	gasync_ed©a_lﬂdög
;

180 
boﬁ
 
	gdißbÀ_async_wrôes
;

184 
	gpublic
:

185 
boﬁ
 
⁄ly_adja˚ncy
;

187 
¶idög_sh¨d
(
°rùedio
 * 
iomgr
, 
°d
::
°rög
 
_fûíame_ed©a
, std::°rög 
_fûíame_adj
, 
vid_t
 
_ønge_°
, vid_à
_ønge_í
, 
size_t
 
_blocksize
, 
mërics
 &
_m
,

188 
boﬁ
 
_dißbÀ_wrôes
=
Ál£
, boﬁ 
⁄lyadj
 = false) :

189 
iomgr
(iomgr),

190 
fûíame_ed©a
(
_fûíame_ed©a
),

191 
fûíame_adj
(
_fûíame_adj
),

192 
ønge_°
(
_ønge_°
),

193 
ønge_íd
(
_ønge_í
),

194 
blocksize
(
_blocksize
),

195 
m
(
_m
),

196 
dißbÀ_wrôes
(
_dißbÀ_wrôes
) {

197 
	gcurvid
 = 0;

198 
	gadjoff£t
 = 0;

199 
	ged©aoff£t
 = 0;

200 
	gdißbÀ_wrôes
 = 
Ál£
;

201 
	g⁄ly_adja˚ncy
 = 
⁄lyadj
;

202 
	gcurblock
 = 
NULL
;

203 
	gcuødjblock
 = 
NULL
;

204 
	gwödow_°¨t_ed©aoff£t
 = 0;

205 
	gdißbÀ_async_wrôes
 = 
Ál£
;

207 
	gblocksize
 % (
	gET
Ë!0Ë
blocksize
++;

208 
as£π
(
blocksize
 % (
ET
)==0);

210 
	gadjfûesize
 = 
gë_fûesize
(
fûíame_adj
);

211 i‡(!
	g⁄ly_adja˚ncy
) {

212 
	ged©afûesize
 = 
gë_sh¨d_ed©a_fûesize
<
ET
>(
fûíame_ed©a
);

213 
log°ªam
(
LOG_DEBUG
Ë<< "TŸÆÉdgêd©®size: " << 
	ged©afûesize
 << ", " << 
	gfûíame_ed©a


214 << "sizeof(ET): " << (
	gET
Ë<< 
	g°d
::
ídl
;

219 
	gadjfûe_£ssi⁄
 = 
iomgr
->
›í_£ssi⁄
(
fûíame_adj
, 
åue
);

220 
ßve_off£t
();

222 
	gasync_ed©a_lﬂdög
 = !
svîãx_t
().
compuèti⁄Æ_edges
();

223 #ifde‡
SUPPORT_DELETIONS


224 
	gasync_ed©a_lﬂdög
 = 
Ál£
;

228 ~
¶idög_sh¨d
() {

229 
ªÀa£_¥i‹_to_off£t
(
åue
);

230 i‡(
	gcurblock
 !
NULL
) {

231 
curblock
->
ªÀa£
(
iomgr
);

232 
dñëe
 
	gcurblock
;

233 
	gcurblock
 = 
NULL
;

235 i‡(
	gcuødjblock
 !
NULL
) {

236 
cuødjblock
->
ªÀa£
(
iomgr
);

237 
dñëe
 
	gcuødjblock
;

238 
	gcuødjblock
 = 
NULL
;

240 
	giomgr
->
˛o£_£ssi⁄
(
adjfûe_£ssi⁄
);

244 
size_t
 
num_edges
() {

245  
	ged©afûesize
 / (
	gET
);

249 
öôd©a
() {

250 
log°ªam
(
LOG_DEBUG
Ë<< "Inôülizêedgêd©a: " << 
	gfûíame_ed©a
 << 
	g°d
::
ídl
;

251 
ET
 * 
	göôblock
 = (ET *Ë
mÆloc
(
blocksize
);

252 
	gi
=0; i < (Ë(
	gblocksize
/(
	gET
)); i++Ë
	göôblock
[
i
] = 
ET
();

253 
size_t
 
	goff
=0; of‡< 
	ged©afûesize
; of‡+
blocksize
) {

254 
°d
::
°rög
 
blockfûíame
 = 
fûíame_sh¨d_ed©a_block
(
fûíame_ed©a
, (Ë(
off
 / 
blocksize
), blocksize);

255 
size_t
 
	gÀn
 = 
°d
::
mö
(
blocksize
, 
ed©afûesize
 - 
off
);

256 
	gf
 = 
›í
(
blockfûíame
.
c_°r
(), 
O_WRONLY
);

257 
pwrôó
(
f
, 
öôblock
, 
Àn
, 0);

258 
˛o£
(
f
);

260 
‰ì
(
öôblock
);

263 
	g¥Ÿe˘ed
:

264 
size_t
 
gë_adjoff£t
(Ë{  
adjoff£t
; }

265 
size_t
 
gë_ed©aoff£t
(Ë{  
	ged©aoff£t
; }

267 
ßve_off£t
() {

270 
	g•¨£_ödex
.
ö£π
(
°d
::
∑ú
<, 
ödexíåy
>(-(()
curvid
), indexíåy(
adjoff£t
, 
ed©aoff£t
)));

273 
move_˛o£_to
(
vid_t
 
v
) {

274 i‡(
	gcurvid
 >
v
) ;

276 
	g°d
::
m≠
<,
	gödexíåy
>::
ôî©‹
 
lowîbd_ôî
 = 
•¨£_ödex
.
lowî_bound
(-(()
v
));

277 
	g˛o£°_vid
 = -(()
lowîbd_ôî
->
fú°
);

278 
as£π
(
˛o£°_vid
>=0);

279 
ödexíåy
 
	g˛o£°_off£t
 = 
lowîbd_ôî
->
£c⁄d
;

280 
as£π
(
˛o£°_vid
 <()
v
);

281 i‡(
	g˛o£°_vid
 > ()
	gcurvid
) {

282 
log°ªam
(
LOG_DEBUG
)

283 << "Slidög sh¨d, sèπ: " << 
	gønge_°
 << " movedÅo: " << 
	g˛o£°_vid
 << " " << 
	g˛o£°_off£t
.
	gadjoff£t
 << ",ásked f‹ : " << 
	gv
 << " wa†ö: curvid" << 
	gcurvid
 << " " <<ádjoff£à<< 
	g°d
::
ídl
;

285 i‡(
	gcurblock
 !
NULL
)

286 
curblock
->
±r
 +
˛o£°_off£t
.
ed©aoff£t
 -Édataoffset;

287 i‡(
	gcuødjblock
 !
NULL
)

288 
cuødjblock
->
±r
 +
˛o£°_off£t
.
adjoff£t
 -ádjoffset;

289 
	gcurvid
 = (
vid_t
)
˛o£°_vid
;

290 
	gadjoff£t
 = 
˛o£°_off£t
.
adjoff£t
;

291 
	ged©aoff£t
 = 
˛o£°_off£t
.
ed©aoff£t
;

300 
ölöe
 
check_curblock
(
size_t
 
t‹ód
) {

301 i‡(
	gcurblock
 =
NULL
 || 
curblock
->
íd
 < 
ed©aoff£t
+
t‹ód
) {

302 i‡(
curblock
 !
NULL
) {

303 i‡(!
curblock
->
a˘ive
) {

304 
curblock
->
ªÀa£
(
iomgr
);

305 } i‡(
svîãx_t
().
compuèti⁄Æ_edges
()) {

307 
	gcurblock
->
commô_now
(
iomgr
);

308 
	gcurblock
->
ªÀa£
(
iomgr
);

312 
	g°d
::
°rög
 
blockfûíame
 = 
fûíame_sh¨d_ed©a_block
(
fûíame_ed©a
, (Ë(
ed©aoff£t
 / 
blocksize
), blocksize);

314 * 
	gˇchedblock
 = 
iomgr
->
gë_block_ˇche
().
gë_ˇched
(
blockfûíame
);

317 
	ged©a_£ssi⁄
 = (
ˇchedblock
 =
NULL
 ? 
iomgr
->
›í_£ssi⁄
(
blockfûíame
, 
Ál£
, 
åue
Ë: 
CACHED_SESSION_ID
);

318 
sblock
 
√wblock
(
ed©a_£ssi⁄
,Éd©a_£ssi⁄, 
åue
);

322 
	g√wblock
.
	goff£t
 = (
ed©aoff£t
 / 
blocksize
) * blocksize;

323 
size_t
 
	gc‹ª˘i⁄
 = 
ed©aoff£t
 - 
√wblock
.
off£t
;

324 
	g√wblock
.
	gíd
 = 
°d
::
mö
(
ed©afûesize
, 
√wblock
.
off£t
 + 
blocksize
);

325 
as£π
(
√wblock
.
íd
 >√wblock.
off£t
);

326 i‡(
	gˇchedblock
 =
NULL
) {

327 
iomgr
->
m™aged_mÆloc
(
ed©a_£ssi⁄
, &
√wblock
.
d©a
,Çewblock.
íd
 -Çewblock.
off£t
,Çewblock.offset);

329 
	g√wblock
.
	gd©a
 = (
uöt8_t
*)
ˇchedblock
;

331 
	g√wblock
.
	g±r
 = 
√wblock
.
d©a
 + 
c‹ª˘i⁄
;

332 
	ga˘iveblocks
.
push_back
(
√wblock
);

333 
	gcurblock
 = &
a˘iveblocks
[a˘iveblocks.
size
()-1];

337 
ölöe
 
check_adjblock
(
size_t
 
t‹ód
) {

338 i‡(
	gcuødjblock
 =
NULL
 || 
cuødjblock
->
íd
 <
adjoff£t
 + 
t‹ód
) {

339 i‡(
cuødjblock
 !
NULL
) {

340 
cuødjblock
->
ªÀa£
(
iomgr
);

341 
dñëe
 
	gcuødjblock
;

342 
	gcuødjblock
 = 
NULL
;

344 
sblock
 * 
	g√wblock
 = 
√w
 sblock(0, 
adjfûe_£ssi⁄
);

345 
	g√wblock
->
	goff£t
 = 
adjoff£t
;

346 
	g√wblock
->
	gíd
 = 
°d
::
mö
(
adjfûesize
, 
adjoff£t
+
blocksize
);

347 
as£π
(
√wblock
->
íd
 > 0);

348 
as£π
(
√wblock
->
íd
 >√wblock->
off£t
);

349 
	giomgr
->
m™aged_mÆloc
(
adjfûe_£ssi⁄
, &
√wblock
->
d©a
,Çewblock->
íd
 -Çewblock->
off£t
, 
adjoff£t
);

350 
	g√wblock
->
	g±r
 = 
√wblock
->
d©a
;

351 
mërics_íåy
 
	gme
 = 
m
.
°¨t_time
();

352 
	giomgr
->
m™aged_¥óda_now
(
adjfûe_£ssi⁄
, &
√wblock
->
d©a
,Çewblock->
íd
 -Çewblock->
off£t
, 
adjoff£t
);

353 
	gm
.
°›_time
(
me
, "blockload");

354 
	gcuødjblock
 = 
√wblock
;

358 
	gãm∂©e
 <
ty≥«me
 
	gU
>

359 
ölöe
 
U
 
ªad_vÆ
() {

360 
check_adjblock
((
U
));

361 
U
 
	gªs
 = *((U*)
cuødjblock
->
±r
);

362 
	gadjoff£t
 +(
U
);

363 
	gcuødjblock
->
	g±r
 +(
U
);

364  
	gªs
;

367 
	gãm∂©e
 <
ty≥«me
 
	gU
>

368 
ölöe
 
U
 * 
ªad_edgïå
() {

369 i‡(
	g⁄ly_adja˚ncy
Ë 
	gNULL
;

370 
check_curblock
((
U
));

371 
U
 * 
	gª•å
 = ((U*)
curblock
->
±r
);

372 
	ged©aoff£t
 +(
U
);

373 
	gcurblock
->
	g±r
 +(
U
);

374  
	gª•å
;

377 
ölöe
 
skù
(
n
, 
sz
) {

378 
size_t
 
	gtŸ
 = 
n
 * 
sz
;

379 
	gadjoff£t
 +
tŸ
;

380 i‡(
	gcuødjblock
 !
NULL
)

381 
cuødjblock
->
±r
 +
tŸ
;

382 
	ged©aoff£t
 +(
ET
)*
n
;

383 i‡(
	gcurblock
 !
NULL
)

384 
curblock
->
±r
 +(
ET
)*
n
;

387 
	gpublic
:

391 
ªad_√xt_vîti˚s
(
nvecs
, 
vid_t
 
°¨t
, 
°d
::
ve˘‹
<
svîãx_t
> & 
¥óŒoc
, 
boﬁ
 
ªc‹d_ödex
=
Ál£
, boﬁ 
dißbÀ_wrôes
=false) {

392 
mërics_íåy
 
me
 = 
m
.
°¨t_time
();

394 i‡(!
	gªc‹d_ödex
)

395 
move_˛o£_to
(
°¨t
);

398 
	gcurblock
 = 
NULL
;

399 
ªÀa£_¥i‹_to_off£t
(
Ál£
, 
dißbÀ_wrôes
);

400 
as£π
(
a˘iveblocks
.
size
() <= 1);

403 i‡(!
	ga˘iveblocks
.
em±y
(Ë&& !
	g⁄ly_adja˚ncy
) {

404 
	gcurblock
 = &
a˘iveblocks
[0];

406 
vid_t
 
	gœ°ªc
 = 
°¨t
;

407 
	gwödow_°¨t_ed©aoff£t
 = 
ed©aoff£t
;

409 
	gi
=(()
curvid
Ë- (()
°¨t
); i<
	gnvecs
; i++) {

410 i‡(
	gadjoff£t
 >
adjfûesize
) ;

414 
	gn
;

415 i‡(
	gªc‹d_ödex
 && (
	gsize_t
)(
	gcurvid
 - 
	gœ°ªc
Ë>(
size_t
Ë
°d
::
max
(()100000, 
nvecs
/16)) {

416 
ßve_off£t
();

417 
	gœ°ªc
 = 
curvid
;

419 
uöt8_t
 
	gns
 = 
ªad_vÆ
<uint8_t>();

420 i‡(
	gns
 == 0x00) {

421 
curvid
++;

422 
uöt8_t
 
	gnz
 = 
ªad_vÆ
<uint8_t>();

423 
	gcurvid
 +
nz
;

424 
	gi
 +
nz
;

428 i‡(
	gns
 == 0xff) {

429 
n
 = 
ªad_vÆ
<
uöt32_t
>();

431 
	gn
 = 
ns
;

434 i‡(
	gi
<0) {

436 
skù
(
n
, (
vid_t
));

438 
	gsvîãx_t
& 
	gvîãx
 = 
¥óŒoc
[
i
];

440 i‡(
	gvîãx
.
	gscheduÀd
) {

442 --
	gn
 >= 0) {

443 
boﬁ
 
•ecül_edge
 = 
Ál£
;

444 
vid_t
 
	gèrgë
 = ((
ET
Ë=(
ET•ecül
Ë? 
ªad_vÆ
<vid_t>(Ë: 
å™¶©e_edge
‘ód_vÆ<vid_t>(), 
•ecül_edge
));

445 
ET
 * 
	gevÆue
 = (
•ecül_edge
 ? (ET*)
ªad_edgïå
<
ET•ecül
>():Ñead_edgeptr<ET>());

447 i‡(!
	g⁄ly_adja˚ncy
) {

448 i‡(!
	gcurblock
->
	ga˘ive
) {

449 i‡(
	gasync_ed©a_lﬂdög
) {

450 
	gcurblock
->
ªad_async
(
iomgr
);

452 
	gcurblock
->
ªad_now
(
iomgr
);

456 
	gcurblock
->
	ga˘ive
 = 
åue
;

458 
	gvîãx
.
add_ouãdge
(
èrgë
, 
evÆue
, 
•ecül_edge
);

460 i‡(!((
	gèrgë
 >
ønge_°
 && 
èrgë
 <
ønge_íd
))) {

461 
log°ªam
(
LOG_ERROR
Ë<< "Eº‹ : " << 
èrgë
 << "ÇŸ i¿[" << 
ønge_°
 << " - " << 
ønge_íd
 << "]" << 
°d
::
ídl
;

462 
	giomgr
->
¥öt_£ssi⁄
(
adjfûe_£ssi⁄
);

464 
as£π
(
èrgë
 >
ønge_°
 &&Å¨gë <
ønge_íd
);

469 
skù
(
n
, (
vid_t
));

472 
	gcurvid
++;

474 
	gm
.
°›_time
(
me
, "read_next_vertices");

475 
	gcurblock
 = 
NULL
;

482 
commô
(
sblock
 &
b
, 
boﬁ
 
synchr⁄ou¶y
, boﬁ 
dißbÀ_wrôes
=
Ál£
) {

483 i‡(
dißbÀ_async_wrôes
Ë
synchr⁄ou¶y
 = 
åue
;

484 i‡(
	gsynchr⁄ou¶y
) {

485 
mërics_íåy
 
	gme
 = 
m
.
°¨t_time
();

486 i‡(!
	gdißbÀ_wrôes
Ë
	gb
.
commô_now
(
iomgr
);

487 
	gm
.
°›_time
(
me
, "commit");

488 
	gb
.
ªÀa£
(
iomgr
);

490 i‡(!
	gdißbÀ_wrôes
Ë
	gb
.
commô_async
(
iomgr
);

491 
	gb
.
ªÀa£
(
iomgr
);

498 
Êush
() {

499 
ªÀa£_¥i‹_to_off£t
(
åue
);

500 i‡(
	gcuødjblock
 !
NULL
) {

501 
cuødjblock
->
ªÀa£
(
iomgr
);

502 
dñëe
 
	gcuødjblock
;

503 
	gcuødjblock
 = 
NULL
;

510 
£t_off£t
(
size_t
 
√woff
, 
vid_t
 
_curvid
, size_à
edgïå
) {

511 
	gthis
->
	gadjoff£t
 = 
√woff
;

512 
	gthis
->
	gcurvid
 = 
_curvid
;

513 
	gthis
->
	ged©aoff£t
 = 
edgïå
;

514 i‡(
	gcuødjblock
 !
NULL
) {

515 
cuødjblock
->
ªÀa£
(
iomgr
);

516 
dñëe
 
	gcuødjblock
;

517 
	gcuødjblock
 = 
NULL
;

524 
ªÀa£_¥i‹_to_off£t
(
boﬁ
 
Æl
=
Ál£
, boﬁ 
dißbÀ_wrôes
=false) {

525 
i
=()
a˘iveblocks
.
size
(Ë- 1; 
	gi
 >= 0; i--) {

526 
	gsblock
 &
	gb
 = 
a˘iveblocks
[
i
];

527 i‡(
	gb
.
	gíd
 <
ed©aoff£t
 || 
Æl
) {

528 
commô
(
b
, 
Æl
, 
dißbÀ_wrôes
);

529 
	ga˘iveblocks
.
îa£
(
a˘iveblocks
.
begö
(Ë+ ()
i
);

534 
£t_dißbÀ_async_wrôes
(
boﬁ
 
b
) {

535 
	gdißbÀ_async_wrôes
 = 
b
;

538 
	g°d
::
°rög
 
gë_öfo_js⁄
() {

539 
°d
::
°rög°ªam
 
js⁄
;

540 
	gjs⁄
 << "\"size\": ";

541 
	gjs⁄
 << 
	ged©afûesize
 << 
	g°d
::
ídl
;

542 
	gjs⁄
 << ", \"windowStart\": ";

543 
	gjs⁄
 << 
	gwödow_°¨t_ed©aoff£t
;

544 
	gjs⁄
 << ", \"windowEnd\": ";

545 
	gjs⁄
 << 
	ged©aoff£t
;

546 
	gjs⁄
 << ", \"intervalStart\": ";

547 
	gjs⁄
 << 
	gønge_°
;

548 
	gjs⁄
 << ", \"intervalEnd\": ";

549 
	gjs⁄
 << 
	gønge_íd
;

550  
	gjs⁄
.
°r
();

	@tests/basic_dynamicengine_smoketest.cpp

32 
	~<°rög
>

34 
	~"gøphchi_basic_ö˛udes.hµ
"

35 
	~"ígöe/dy«mic_gøphs/gøphchi_dy«micgøph_ígöe.hµ
"

37 
usög
 
«me•a˚
 
	ggøphchi
;

43 
vid_t
 
	tVîãxD©aTy≥
;

44 
vid_t
 
	tEdgeD©aTy≥
;

51 
	gSmokeTe°Progøm
 : 
public
 
GøphChiProgøm
<
VîãxD©aTy≥
, 
	gEdgeD©aTy≥
> {

57 
upd©e
(
gøphchi_vîãx
<
VîãxD©aTy≥
, 
EdgeD©aTy≥
> &
vîãx
, 
gøphchi_c⁄ãxt
 &
gc⁄ãxt
) {

58 i‡(
	ggc⁄ãxt
.
	gôî©i⁄
 == 0) {

59 
i
=0; 
	gi
 < 
	gvîãx
.
num_ouãdges
(); i++) {

60 
	gvîãx
.
ouãdge
(
i
)->
£t_d©a
(
vîãx
.
id
());

63 
	gi
=0; i < 
	gvîãx
.
num_öedges
(); i++) {

64 
	ggøphchi_edge
<
	gvid_t
> * 
	gedge
 = 
vîãx
.
öedge
(
i
);

65 
vid_t
 
	göedged©a
 = 
edge
->
gë_d©a
();

66 
vid_t
 
	gex≥˘ed
 = 
edge
->
vîãx_id
(Ë+ 
gc⁄ãxt
.
ôî©i⁄
 - (edge->vîãx_id(Ë> 
vîãx
.
id
());

67 i‡(
	göedged©a
 !
ex≥˘ed
) {

68 
as£π
(
Ál£
);

71 
	gi
=0; i < 
	gvîãx
.
num_ouãdges
(); i++) {

72 
	gvîãx
.
ouãdge
(
i
)->
£t_d©a
(
vîãx
.
id
(Ë+ 
gc⁄ãxt
.
ôî©i⁄
);

75 
	gvîãx
.
£t_d©a
(
gc⁄ãxt
.
ôî©i⁄
 + 1);

81 
bef‹e_ôî©i⁄
(
ôî©i⁄
, 
gøphchi_c⁄ãxt
 &
gc⁄ãxt
) {

87 
a·î_ôî©i⁄
(
ôî©i⁄
, 
gøphchi_c⁄ãxt
 &
gc⁄ãxt
) {

93 
bef‹e_exec_öãrvÆ
(
vid_t
 
wödow_°
, vid_à
wödow_í
, 
gøphchi_c⁄ãxt
 &
gc⁄ãxt
) {

99 
a·î_exec_öãrvÆ
(
vid_t
 
wödow_°
, vid_à
wödow_í
, 
gøphchi_c⁄ãxt
 &
gc⁄ãxt
) {

107 
˛ass
 
	gVîãxD©aCheckî
 : 
public
 
VCÆlback
<
VîãxD©aTy≥
> {

108 
ôîs
;

109 
	gpublic
:

110 
size_t
 
tŸÆ
;

112 
VîãxD©aCheckî
(
ôîs
Ë: iãrs(ôîs), 
tŸÆ
(0) {}

113 
ˇŒback
(
vid_t
 
vîãx_id
, 
VîãxD©aTy≥
 &
vecvÆue
) {

114 
as£π
(
vecvÆue
 =
ôîs
);

115 
	gtŸÆ
 +
ôîs
;

119 
	$maö
(
¨gc
, c⁄° ** 
¨gv
) {

122 
	`gøphchi_öô
(
¨gc
, 
¨gv
);

126 
mërics
 
	`m
("smoketest-dynamic-engine");

129 
°d
::
°rög
 
fûíame
 = 
	`gë_›ti⁄_°rög
("file");

130 
nôîs
 = 
	`gë_›ti⁄_öt
("niters", 4);

131 
boﬁ
 
scheduÀr
 = 
Ál£
;

134 
nsh¨ds
 = 
c⁄vît_if_nŸexi°s
<
EdgeD©aTy≥
>(
fûíame
,

135 
	`gë_›ti⁄_°rög
("nshards", "auto"));

138 
SmokeTe°Progøm
 
¥ogøm
;

139 
gøphchi_dy«micgøph_ígöe
<
VîãxD©aTy≥
, 
EdgeD©aTy≥
> 
	`ígöe
(
fûíame
, 
nsh¨ds
, 
scheduÀr
, 
m
);

140 
ígöe
.
	`run
(
¥ogøm
, 
nôîs
);

143 
VîãxD©aCheckî
 
	`vcheckî
(
nôîs
);

144 
	`f‹óch_vîti˚s
(
fûíame
, 0, 
ígöe
.
	`num_vîti˚s
(), 
vcheckî
);

145 
	`as£π
(
vcheckî
.
tŸÆ
 =
ígöe
.
	`num_vîti˚s
(Ë* 
nôîs
);

148 
	`mërics_ªp‹t
(
m
);

150 
	`log°ªam
(
LOG_INFO
Ë<< "Dy«mi¯EngöêSmokëe°Öas£d suc˚ssfuŒy! You∏sy°em i†w‹kög!" << 
°d
::
ídl
;

152 
	}
}

	@tests/basic_dynamicengine_smoketest2.cpp

32 
	~<°rög
>

34 
	#SUPPORT_DELETIONS
 1

	)

36 
	~"gøphchi_basic_ö˛udes.hµ
"

37 
	~"ígöe/dy«mic_gøphs/gøphchi_dy«micgøph_ígöe.hµ
"

39 
usög
 
«me•a˚
 
	ggøphchi
;

45 
vid_t
 
	tVîãxD©aTy≥
;

46 
vid_t
 
	tEdgeD©aTy≥
;

54 
	gSmokeTe°Progøm2
 : 
public
 
GøphChiProgøm
<
VîãxD©aTy≥
, 
	gEdgeD©aTy≥
> {

56 vﬁ©ûê
size_t
 
	gndñëed
;

61 
upd©e
(
gøphchi_vîãx
<
VîãxD©aTy≥
, 
EdgeD©aTy≥
> &
vîãx
, 
gøphchi_c⁄ãxt
 &
gc⁄ãxt
) {

62 
	gnöedges
 = 0;

63 i‡(
	ggc⁄ãxt
.
	gôî©i⁄
 == 0) {

64 
i
=0; 
	gi
 < 
	gvîãx
.
num_öedges
(); i++) {

65 
	gvîãx
.
öedge
(
i
)->
£t_d©a
(
vîãx
.
id
());

66 
	gnöedges
++;

71 i‡(
	gvîãx
.
gë_d©a
(Ë!
vîãx
.
num_öedges
()) {

72 
log°ªam
(
LOG_ERROR
Ë<< "Dis¸ï™cy i¿edgêcou¡s: " << 
vîãx
.
gë_d©a
(Ë<< " !" << vîãx.
num_öedges
(Ë<< 
°d
::
ídl
;

74 
as£π
(
vîãx
.
gë_d©a
(Ë=vîãx.
num_öedges
());

76 
	gi
=0; i < 
	gvîãx
.
num_ouãdges
(); i++) {

77 
	ggøphchi_edge
<
	gvid_t
> * 
	gedge
 = 
vîãx
.
ouãdge
(
i
);

78 
vid_t
 
	gouãdged©a
 = 
edge
->
gë_d©a
();

79 
vid_t
 
	gex≥˘ed
 = 
edge
->
vîãx_id
(Ë+ 
gc⁄ãxt
.
ôî©i⁄
 - (edge->vîãx_id(Ë> 
vîãx
.
id
());

80 i‡(!
is_dñëed_edge_vÆue
(
edge
->
gë_d©a
())) {

81 i‡(
	gouãdged©a
 !
ex≥˘ed
) {

82 
log°ªam
(
LOG_ERROR
Ë<< 
ouãdged©a
 << " !" << 
ex≥˘ed
 << 
°d
::
ídl
;

83 
as£π
(
Ál£
);

87 
	gi
=0; i < 
	gvîãx
.
num_öedges
(); i++) {

88 
	gvîãx
.
öedge
(
i
)->
£t_d©a
(
vîãx
.
id
(Ë+ 
gc⁄ãxt
.
ôî©i⁄
);

90 i‡(
	g°d
::
ønd
() % 4 == 1) {

91 
vîãx
.
ªmove_öedge
(
i
);

92 
__sync_add_™d_„tch
(&
ndñëed
, 1);

94 
	gnöedges
++;

99 i‡(
	ggc⁄ãxt
.
	gôî©i⁄
 =
gc⁄ãxt
.
num_ôî©i⁄s
 - 1) {

100 
vîãx
.
£t_d©a
(
gc⁄ãxt
.
ôî©i⁄
 + 1);

102 
	gvîãx
.
£t_d©a
(
nöedges
);

109 
bef‹e_ôî©i⁄
(
ôî©i⁄
, 
gøphchi_c⁄ãxt
 &
gc⁄ãxt
) {

110 
	gndñëed
 = 0;

116 
a·î_ôî©i⁄
(
ôî©i⁄
, 
gøphchi_c⁄ãxt
 &
gc⁄ãxt
) {

117 i‡(
	ggc⁄ãxt
.
	gôî©i⁄
 > 0)

118 
as£π
(
ndñëed
 > 0);

119 
log°ªam
(
LOG_INFO
Ë<< "Dñëed: " << 
	gndñëed
 << 
	g°d
::
ídl
;

125 
bef‹e_exec_öãrvÆ
(
vid_t
 
wödow_°
, vid_à
wödow_í
, 
gøphchi_c⁄ãxt
 &
gc⁄ãxt
) {

131 
a·î_exec_öãrvÆ
(
vid_t
 
wödow_°
, vid_à
wödow_í
, 
gøphchi_c⁄ãxt
 &
gc⁄ãxt
) {

139 
˛ass
 
	gVîãxD©aCheckî
 : 
public
 
VCÆlback
<
VîãxD©aTy≥
> {

140 
ôîs
;

141 
	gpublic
:

142 
size_t
 
tŸÆ
;

144 
VîãxD©aCheckî
(
ôîs
Ë: iãrs(ôîs), 
tŸÆ
(0) {}

145 
ˇŒback
(
vid_t
 
vîãx_id
, 
VîãxD©aTy≥
 &
vecvÆue
) {

146 
as£π
(
vecvÆue
 =
ôîs
);

147 
	gtŸÆ
 +
ôîs
;

151 
	$maö
(
¨gc
, c⁄° ** 
¨gv
) {

154 
	`gøphchi_öô
(
¨gc
, 
¨gv
);

158 
mërics
 
	`m
("smoketest-dynamic-engine2");

161 
°d
::
°rög
 
fûíame
 = 
	`gë_›ti⁄_°rög
("file");

162 
nôîs
 = 
	`gë_›ti⁄_öt
("niters", 4);

163 
boﬁ
 
scheduÀr
 = 
Ál£
;

166 
nsh¨ds
 = 
c⁄vît_if_nŸexi°s
<
EdgeD©aTy≥
>(
fûíame
,

167 
	`gë_›ti⁄_°rög
("nshards", "auto"));

170 
SmokeTe°Progøm2
 
¥ogøm
;

171 
gøphchi_dy«micgøph_ígöe
<
VîãxD©aTy≥
, 
EdgeD©aTy≥
> 
	`ígöe
(
fûíame
, 
nsh¨ds
, 
scheduÀr
, 
m
);

172 
ígöe
.
	`run
(
¥ogøm
, 
nôîs
);

175 
VîãxD©aCheckî
 
	`vcheckî
(
nôîs
);

176 
	`f‹óch_vîti˚s
(
fûíame
, 0, 
ígöe
.
	`num_vîti˚s
(), 
vcheckî
);

177 
	`as£π
(
vcheckî
.
tŸÆ
 =
ígöe
.
	`num_vîti˚s
(Ë* 
nôîs
);

180 
	`mërics_ªp‹t
(
m
);

182 
	`log°ªam
(
LOG_INFO
Ë<< "Dy«mi¯EngöêSmokëe°Öas£d suc˚ssfuŒy! You∏sy°em i†w‹kög!" << 
°d
::
ídl
;

184 
	}
}

	@tests/basic_smoketest.cpp

32 
	~<°rög
>

34 
	~"gøphchi_basic_ö˛udes.hµ
"

36 
usög
 
«me•a˚
 
	ggøphchi
;

42 
vid_t
 
	tVîãxD©aTy≥
;

43 
vid_t
 
	tEdgeD©aTy≥
;

50 
	gSmokeTe°Progøm
 : 
public
 
GøphChiProgøm
<
VîãxD©aTy≥
, 
	gEdgeD©aTy≥
> {

56 
upd©e
(
gøphchi_vîãx
<
VîãxD©aTy≥
, 
EdgeD©aTy≥
> &
vîãx
, 
gøphchi_c⁄ãxt
 &
gc⁄ãxt
) {

57 i‡(
	ggc⁄ãxt
.
	gôî©i⁄
 == 0) {

58 
i
=0; 
	gi
 < 
	gvîãx
.
num_ouãdges
(); i++) {

59 
	gvîãx
.
ouãdge
(
i
)->
£t_d©a
(
vîãx
.
id
());

62 
	gi
=0; i < 
	gvîãx
.
num_öedges
(); i++) {

63 
	ggøphchi_edge
<
	gvid_t
> * 
	gedge
 = 
vîãx
.
öedge
(
i
);

64 
vid_t
 
	göedged©a
 = 
edge
->
gë_d©a
();

65 
vid_t
 
	gex≥˘ed
 = 
edge
->
vîãx_id
(Ë+ 
gc⁄ãxt
.
ôî©i⁄
 - (edge->vîãx_id(Ë> 
vîãx
.
id
());

66 i‡(
	göedged©a
 !
ex≥˘ed
) {

67 
as£π
(
Ál£
);

70 
	gi
=0; i < 
	gvîãx
.
num_ouãdges
(); i++) {

71 
	gvîãx
.
ouãdge
(
i
)->
£t_d©a
(
vîãx
.
id
(Ë+ 
gc⁄ãxt
.
ôî©i⁄
);

74 
	gvîãx
.
£t_d©a
(
gc⁄ãxt
.
ôî©i⁄
 + 1);

80 
bef‹e_ôî©i⁄
(
ôî©i⁄
, 
gøphchi_c⁄ãxt
 &
gc⁄ãxt
) {

86 
a·î_ôî©i⁄
(
ôî©i⁄
, 
gøphchi_c⁄ãxt
 &
gc⁄ãxt
) {

92 
bef‹e_exec_öãrvÆ
(
vid_t
 
wödow_°
, vid_à
wödow_í
, 
gøphchi_c⁄ãxt
 &
gc⁄ãxt
) {

98 
a·î_exec_öãrvÆ
(
vid_t
 
wödow_°
, vid_à
wödow_í
, 
gøphchi_c⁄ãxt
 &
gc⁄ãxt
) {

106 
˛ass
 
	gVîãxD©aCheckî
 : 
public
 
VCÆlback
<
VîãxD©aTy≥
> {

107 
ôîs
;

108 
	gpublic
:

109 
size_t
 
tŸÆ
;

111 
VîãxD©aCheckî
(
ôîs
Ë: iãrs(ôîs), 
tŸÆ
(0) {}

112 
ˇŒback
(
vid_t
 
vîãx_id
, 
VîãxD©aTy≥
 &
vecvÆue
) {

113 
as£π
(
vecvÆue
 =(
VîãxD©aTy≥
)
ôîs
);

114 
	gtŸÆ
 +(
size_t
Ë
ôîs
;

118 
	$maö
(
¨gc
, c⁄° ** 
¨gv
) {

121 
	`gøphchi_öô
(
¨gc
, 
¨gv
);

125 
mërics
 
	`m
("smoketest");

128 
°d
::
°rög
 
fûíame
 = 
	`gë_›ti⁄_°rög
("file");

129 
nôîs
 = 
	`gë_›ti⁄_öt
("niters", 4);

130 
boﬁ
 
scheduÀr
 = 
Ál£
;

133 
nsh¨ds
 = 
c⁄vît_if_nŸexi°s
<
EdgeD©aTy≥
>(
fûíame
,

134 
	`gë_›ti⁄_°rög
("nshards", "auto"));

137 
SmokeTe°Progøm
 
¥ogøm
;

138 
gøphchi_ígöe
<
VîãxD©aTy≥
, 
EdgeD©aTy≥
> 
	`ígöe
(
fûíame
, 
nsh¨ds
, 
scheduÀr
, 
m
);

139 
ígöe
.
	`run
(
¥ogøm
, 
nôîs
);

142 
VîãxD©aCheckî
 
	`vcheckî
(
nôîs
);

143 
	`f‹óch_vîti˚s
(
fûíame
, 0, 
ígöe
.
	`num_vîti˚s
(), 
vcheckî
);

144 
	`as£π
(
vcheckî
.
tŸÆ
 =
ígöe
.
	`num_vîti˚s
(Ë* 
nôîs
);

147 
	`mërics_ªp‹t
(
m
);

149 
	`log°ªam
(
LOG_INFO
Ë<< "Smokëe°Öas£d suc˚ssfuŒy! You∏sy°em i†w‹kög!" << 
°d
::
ídl
;

151 
	}
}

	@tests/bulksync_functional_test.cpp

29 
	#RANDOMRESETPROB
 0.15

	)

31 
	~<°rög
>

32 
	~<f°ªam
>

33 
	~<cm©h
>

35 
	~"utû/cmd›ts.hµ
"

36 
	~"≠i/gøphchi_c⁄ãxt.hµ
"

37 
	~"≠i/gøph_obje˘s.hµ
"

38 
	~"≠i/ischeduÀr.hµ
"

39 
	~"≠i/fun˘i⁄Æ/fun˘i⁄Æ_≠i.hµ
"

40 
	~"mërics/mërics.hµ
"

41 
	~"mërics/ªps/basic_ªp‹ãr.hµ
"

42 
	~"utû/t›li°.hµ
"

44 
usög
 
«me•a˚
 
	ggøphchi
;

46 
	gsmokëe°_¥ogøm
 : 
public
 
fun˘i⁄Æ_kî√l
<, > {

49 
öôül_vÆue
(
gøphchi_c⁄ãxt
 &
öfo
, 
vîãx_öfo
& 
myvîãx
) {

54 
ª£t
() {

60 
›_√ighb‹vÆ
(
gøphchi_c⁄ãxt
 &
öfo
, 
vîãx_öfo
& 
myvîãx
, 
vid_t
 
nbid
, 
nbvÆ
) {

61 
as£π
(
nbvÆ
 =(Ë
öfo
.
ôî©i⁄
 - 1);

62  
	gnbvÆ
;

66 
∂us
(
curvÆ
, 
tﬂdd
) {

67 
as£π
(
curvÆ
 =0 || 
tﬂdd
 == curval);

68  
	gtﬂdd
;

72 
compuã_vîãxvÆue
(
gøphchi_c⁄ãxt
 &
göfo
, 
vîãx_öfo
& 
myvîãx
, 
nbvÆsum
) {

73  
	ggöfo
.
	gôî©i⁄
;

77 
vÆue_to_√ighb‹
(
gøphchi_c⁄ãxt
 &
öfo
, 
vîãx_öfo
& 
myvîãx
, 
vid_t
 
nbid
, 
myvÆ
) {

78 
as£π
(
myvÆ
 =(Ë
öfo
.
ôî©i⁄
);

79  
	gmyvÆ
;

84 
	$maö
(
¨gc
, c⁄° ** 
¨gv
) {

85 
	`gøphchi_öô
(
¨gc
, 
¨gv
);

86 
mërics
 
	`m
("test-functional");

88 
°d
::
°rög
 
fûíame
 = 
	`gë_›ti⁄_°rög
("file");

89 
nôîs
 = 
	`gë_›ti⁄_öt
("niters", 5);

90 
°d
::
°rög
 
mode
 = 
	`gë_›ti⁄_°rög
("mode", "semisync");

92 
	`log°ªam
(
LOG_INFO
Ë<< "Ru¬ög bulk syn¯smokêã°." << 
°d
::
ídl
;

93 
run_fun˘i⁄Æ_unweighãd_synchr⁄ous
<
smokëe°_¥ogøm
>(
fûíame
, 
nôîs
, 
m
);

95 
	`log°ªam
(
LOG_INFO
Ë<< "Smokëe°Öas£d suc˚ssfuŒy! You∏sy°em i†w‹kög!" << 
°d
::
ídl
;

97 
	}
}

	@tests/dynamicdata_smoketest.cpp

30 
	#DYNAMICEDATA
 1

	)

32 
	~<°rög
>

34 
	~"gøphchi_basic_ö˛udes.hµ
"

35 
	~"≠i/dy«micd©a/chive˘‹.hµ
"

37 
usög
 
«me•a˚
 
	ggøphchi
;

43 
vid_t
 
	tVîãxD©aTy≥
;

44 
	gchive˘‹
<
	tvid_t
> 
	tEdgeD©aTy≥
;

49 
	gDy«micD©aSmokeTe°Progøm
 : 
public
 
GøphChiProgøm
<
VîãxD©aTy≥
, 
	gEdgeD©aTy≥
> {

55 
upd©e
(
gøphchi_vîãx
<
VîãxD©aTy≥
, 
EdgeD©aTy≥
 > &
vîãx
, 
gøphchi_c⁄ãxt
 &
gc⁄ãxt
) {

56 i‡(
	ggc⁄ãxt
.
	gôî©i⁄
 == 0) {

57 
i
=0; 
	gi
 < 
	gvîãx
.
num_ouãdges
(); i++) {

58 
	gchive˘‹
<
	gvid_t
> * 
	geve˘‹
 = 
vîãx
.
ouãdge
(
i
)->
gë_ve˘‹
();

59 
	geve˘‹
->
˛ór
();

60 
as£π
(
eve˘‹
->
size
() == 0);

62 
	geve˘‹
->
add
(
vîãx
.
id
());

63 
as£π
(
eve˘‹
->
size
() == 1);

64 
as£π
(
eve˘‹
->
gë
(0Ë=
vîãx
.
id
());

68 
	gi
=0; i < 
	gvîãx
.
num_öedges
(); i++) {

69 
	ggøphchi_edge
<
	gEdgeD©aTy≥
> * 
	gedge
 = 
vîãx
.
öedge
(
i
);

70 
	gchive˘‹
<
	gvid_t
> * 
	geve˘‹
 = 
edge
->
gë_ve˘‹
();

71 
as£π
(
eve˘‹
->
size
(Ë>
gc⁄ãxt
.
ôî©i⁄
);

72 
	gj
=0; j < 
	geve˘‹
->
size
(); j++) {

73 
vid_t
 
	gex≥˘ed
 = 
edge
->
vîãx_id
(Ë+ 
j
;

74 
vid_t
 
	ghas
 = 
eve˘‹
->
gë
(
j
);

75 i‡(
	ghas
 !
ex≥˘ed
) {

76 
°d
::
cout
 << "Mism©ch: " << 
has
 << " !" << 
ex≥˘ed
 << std::
ídl
;

78 
as£π
(
has
 =
ex≥˘ed
);

81 
	gi
=0; i < 
	gvîãx
.
num_ouãdges
(); i++) {

82 
	gvîãx
.
ouãdge
(
i
)->
gë_ve˘‹
()->
add
(
vîãx
.
id
(Ë+ 
gc⁄ãxt
.
ôî©i⁄
);

85 
	gvîãx
.
£t_d©a
(
gc⁄ãxt
.
ôî©i⁄
 + 1);

91 
bef‹e_ôî©i⁄
(
ôî©i⁄
, 
gøphchi_c⁄ãxt
 &
gc⁄ãxt
) {

97 
a·î_ôî©i⁄
(
ôî©i⁄
, 
gøphchi_c⁄ãxt
 &
gc⁄ãxt
) {

103 
bef‹e_exec_öãrvÆ
(
vid_t
 
wödow_°
, vid_à
wödow_í
, 
gøphchi_c⁄ãxt
 &
gc⁄ãxt
) {

109 
a·î_exec_öãrvÆ
(
vid_t
 
wödow_°
, vid_à
wödow_í
, 
gøphchi_c⁄ãxt
 &
gc⁄ãxt
) {

117 
˛ass
 
	gVîãxD©aCheckî
 : 
public
 
VCÆlback
<
VîãxD©aTy≥
> {

118 
ôîs
;

119 
	gpublic
:

120 
size_t
 
tŸÆ
;

122 
VîãxD©aCheckî
(
ôîs
Ë: iãrs(ôîs), 
tŸÆ
(0) {}

123 
ˇŒback
(
vid_t
 
vîãx_id
, 
VîãxD©aTy≥
 &
vecvÆue
) {

124 
as£π
(
vecvÆue
 =(
VîãxD©aTy≥
)
ôîs
);

125 
	gtŸÆ
 +(
size_t
Ë
ôîs
;

129 
	$maö
(
¨gc
, c⁄° ** 
¨gv
) {

132 
	`gøphchi_öô
(
¨gc
, 
¨gv
);

136 
mërics
 
	`m
("dynamicdata-smoketest");

139 
°d
::
°rög
 
fûíame
 = 
	`gë_›ti⁄_°rög
("file");

140 
nôîs
 = 
	`gë_›ti⁄_öt
("niters", 4);

141 
boﬁ
 
scheduÀr
 = 
Ál£
;

143 
nsh¨ds
 = 
c⁄vît_if_nŸexi°s
<
vid_t
>(
fûíame
, 
	`gë_›ti⁄_°rög
("nshards", "auto"));

146 
Dy«micD©aSmokeTe°Progøm
 
¥ogøm
;

147 
gøphchi_ígöe
<
VîãxD©aTy≥
, 
EdgeD©aTy≥
> 
	`ígöe
(
fûíame
, 
nsh¨ds
, 
scheduÀr
, 
m
);

148 
ígöe
.
	`run
(
¥ogøm
, 
nôîs
);

151 
VîãxD©aCheckî
 
	`vcheckî
(
nôîs
);

152 
	`f‹óch_vîti˚s
(
fûíame
, 0, 
ígöe
.
	`num_vîti˚s
(), 
vcheckî
);

153 
	`as£π
(
vcheckî
.
tŸÆ
 =
ígöe
.
	`num_vîti˚s
(Ë* 
nôîs
);

156 
	`mërics_ªp‹t
(
m
);

158 
	`log°ªam
(
LOG_INFO
Ë<< "Smokëe°Öas£d suc˚ssfuŒy! You∏sy°em i†w‹kög!" << 
°d
::
ídl
;

160 
	}
}

	@tests/test_dynamicedata_loader.cpp

31 
	#DYNAMICEDATA
 1

	)

32 
	#DYNAMICVERTEXDATA
 1

	)

34 
	~<°rög
>

36 
	~"gøphchi_basic_ö˛udes.hµ
"

37 
	~"≠i/dy«micd©a/chive˘‹.hµ
"

39 
usög
 
«me•a˚
 
	ggøphchi
;

45 
	gchive˘‹
<
	tsize_t
> 
	tVîãxD©aTy≥
;

46 
	gchive˘‹
<
	tvid_t
> 
	tEdgeD©aTy≥
;

48 
size_t
 
	gchecksum
 = 0;

49 
size_t
 
	gshouldbe
 = 0;

54 
	gDy«micD©aLﬂdîTe°Progøm
 : 
public
 
GøphChiProgøm
<
VîãxD©aTy≥
, 
	gEdgeD©aTy≥
> {

56 
muãx
 
	glock
;

61 
upd©e
(
gøphchi_vîãx
<
VîãxD©aTy≥
, 
EdgeD©aTy≥
 > &
vîãx
, 
gøphchi_c⁄ãxt
 &
gc⁄ãxt
) {

62 
	gi
=0; i < 
	gvîãx
.
num_edges
(); i++) {

63 
	gchive˘‹
<
	gvid_t
> * 
	geve˘‹
 = 
vîãx
.
edge
(
i
)->
gë_ve˘‹
();

64 
as£π
(
eve˘‹
 !
NULL
);

68 
	gnumñems
 = ((
vîãx
.
id
(Ë+ vîãx.
edge
(
i
)->
vîãx_id
()) % 3 == 1 ? 3 : 1);

70 
	gk
=0; k < 
	gnumñems
 ; k++) {

72 
vid_t
 
	gex≥˘ed
 = 
vîãx
.
id
(Ë+ vîãx.
edge
(
i
)->
vîãx_id
(Ë+ 
k
;

73 i‡(
	gex≥˘ed
 !
eve˘‹
->
gë
(
k
)) {

74 
log°ªam
(
LOG_ERROR
Ë<< "Vîãx " << 
vîãx
.
id
(Ë<< ",Édgêd°: " << vîãx.
edge
(
i
)->
vîãx_id
(Ë<< 
°d
::
ídl
;

75 
log°ªam
(
LOG_ERROR
Ë<< "Mism©ch (" << 
	gk
 << "):Éx≥˘ed " << 
	gex≥˘ed
 << " buàhad " << 
	geve˘‹
->
gë
(
k
Ë<< 
	g°d
::
ídl
;

77 
as£π
(
eve˘‹
->
gë
(
k
Ë=
ex≥˘ed
);

80 
	glock
.
lock
();

81 
	gchecksum
 +
eve˘‹
->
gë
(0);

82 
	glock
.
u∆ock
();

86 
	gchive˘‹
<
	gsize_t
> * 
	gvve˘‹
 = 
vîãx
.
gë_ve˘‹
();

87 
	gnumôems
 = 
vîãx
.
id
() % 10;

88 
	gi
=0; i<
	gnumôems
; i++) {

89 
	gvve˘‹
->
add
(
vîãx
.
id
(Ë* 982192»+ 
i
);

93 
	gi
=0; i<
	gnumôems
; i++) {

94 
size_t
 
	gx
 = 
vve˘‹
->
gë
(
i
);

95 
size_t
 
	gex≥˘ed
 = 
vîãx
.
id
(Ë* 982192»+ 
i
;

96 
as£π
(
x
 =
ex≥˘ed
);

103 
bef‹e_ôî©i⁄
(
ôî©i⁄
, 
gøphchi_c⁄ãxt
 &
gc⁄ãxt
) {

109 
a·î_ôî©i⁄
(
ôî©i⁄
, 
gøphchi_c⁄ãxt
 &
gc⁄ãxt
) {

115 
bef‹e_exec_öãrvÆ
(
vid_t
 
wödow_°
, vid_à
wödow_í
, 
gøphchi_c⁄ãxt
 &
gc⁄ãxt
) {

121 
a·î_exec_öãrvÆ
(
vid_t
 
wödow_°
, vid_à
wödow_í
, 
gøphchi_c⁄ãxt
 &
gc⁄ãxt
) {

127 
gíî©ed©a
(
°d
::
°rög
 
fûíame
);

128 
gíî©ed©a
(
°d
::
°rög
 
fûíame
) {

129 
°d
::
cout
 << "Gíî©ög d©a..." << std::
ídl
;

130 c⁄° * 
	g‚ame
 = 
fûíame
.
c_°r
();

131 
FILE
 * 
	gf
 = 
f›í
(
‚ame
, "w");

132 
£t_c⁄f
("filetype", "edgelist");

133 
	gshouldbe
 = 0;

134 
	gtŸÆVîti˚s
 = 200000;

135 
	gi
=0; i < 
	gtŸÆVîti˚s
; i++) {

136 
	g√dges
 = 
øndom
() % 50;

137 
	gj
=0; j < 
	g√dges
; j++) {

138 
	gd°
 = (
tŸÆVîti˚s
 / 
√dges
Ë* 
j
 + 
i
 %Çedges;

139 i‡(
	gd°
 !
i
) {

140 i‡((
i
 + 
d°
) % 3 == 1) {

141 
Ârötf
(
f
, "%d\t%d\t%d:%d:%d\n", 
i
, 
d°
, i + dst, i + dst + 1, i + dst + 2);

143 
Ârötf
(
f
, "%d\t%d\t%d\n", 
i
, 
d°
, i + dst);

146 
	gshouldbe
 +2 * (
i
 + 
d°
);

150 
f˛o£
(
f
);

153 
˛ass
 
	gVîãxVÆid©‹
 : 
public
 
VCÆlback
<
chive˘‹
<
size_t
> > {

154 
public
:

155 
vútuÆ
 
ˇŒback
(
vid_t
 
vîãx_id
, 
chive˘‹
<
size_t
> &
vec
) {

156 
	gnumôems
 = 
vîãx_id
 % 10;

157 
as£π
(
vec
.
size
(Ë=
numôems
);

159 
	gj
=0; j < 
	gnumôems
; j++) {

160 
size_t
 
	gx
 = 
vec
.
gë
(
j
);

161 
as£π
(
x
 =
vîãx_id
 * 982192»+ (
size_t
)
j
);

170 
	$maö
(
¨gc
, c⁄° ** 
¨gv
) {

173 
	`gøphchi_öô
(
¨gc
, 
¨gv
);

177 
mërics
 
	`m
("test-dynamicedata");

181 
°d
::
°rög
 
fûíame
 = "/tmp/__chi_dyntest/testgraph";

182 
	`mkdú
("/tmp/__chi_dyntest", 0777);

183 
nôîs
 = 1;

184 
boﬁ
 
scheduÀr
 = 
Ál£
;

187 
	`gíî©ed©a
(
fûíame
);

188 
	`£t_c⁄f
("filetype", "multivalueedgelist");

189 
nsh¨ds
 = 
c⁄vît_if_nŸexi°s
<
vid_t
>(
fûíame
, "3");

190 
checksum
 = 0;

193 
Dy«micD©aLﬂdîTe°Progøm
 
¥ogøm
;

194 
gøphchi_ígöe
<
VîãxD©aTy≥
, 
EdgeD©aTy≥
> 
	`ígöe
(
fûíame
, 
nsh¨ds
, 
scheduÀr
, 
m
);

195 
ígöe
.
	`£t_ª£t_vîãxd©a
(
åue
);

196 
ígöe
.
	`run
(
¥ogøm
, 
nôîs
);

199 
°d
::
cout
 << "Checksum: " << 
checksum
 << ",Éx≥˘ög: " << 
shouldbe
 << std::
ídl
;

200 
	`as£π
(
shouldbe
 =
checksum
);

203 
VîãxVÆid©‹
 
vÆid©‹
;

204 
	`f‹óch_vîti˚s
(
fûíame
, 0, 
ígöe
.
	`num_vîti˚s
(), 
vÆid©‹
);

208 
dñëe_sh¨ds
<
EdgeD©aTy≥
>(
fûíame
, 3);

212 
	`mërics_ªp‹t
(
m
);

214 
	`log°ªam
(
LOG_INFO
Ë<< "Te°Öas£d suc˚ssfuŒy! You∏sy°em i†w‹kög!" << 
°d
::
ídl
;

216 
	}
}

	@util/atomic.hpp

1 #i‚de‡
ATOMIC_HPP


2 
	#ATOMIC_HPP


	)

6 
«me•a˚
 
	ggøphchi
 {

13 
	gãm∂©e
<
ty≥«me
 
	gT
>

14 ˛as†
	c©omic
{

15 
	gpublic
:

16 vﬁ©ûê
T
 
vÆue
;

17 
©omic
(c⁄° 
T
& 
vÆue
 = 0) : value(value) { }

18 
T
 
öc
(Ë{  
__sync_add_™d_„tch
(&
vÆue
, 1); }

19 
T
 
dec
(Ë{  
__sync_sub_™d_„tch
(&
vÆue
, 1); }

23 
›î©‹
 
T
(Ëc⁄° {  
	gvÆue
; }

26 
T
 
	g›î©‹
++(Ë{  
öc
(); }

29 
T
 
	g›î©‹
--(Ë{  
dec
(); }

32 
T
 
öc
(c⁄° T 
vÆ
Ë{  
__sync_add_™d_„tch
(&
vÆue
, val); }

35 
T
 
dec
(c⁄° T 
vÆ
Ë{  
__sync_sub_™d_„tch
(&
vÆue
, val); }

38 
T
 
	g›î©‹
+=(c⁄° T 
vÆ
Ë{  
öc
(val); }

41 
T
 
	g›î©‹
-=(c⁄° T 
vÆ
Ë{  
dec
(val); }

44 
T
 
öc_ªt_œ°
(Ë{  
__sync_„tch_™d_add
(&
vÆue
, 1); }

47 
T
 
dec_ªt_œ°
(Ë{  
__sync_„tch_™d_sub
(&
vÆue
, 1); }

50 
T
 
	g›î©‹
++(Ë{  
öc_ªt_œ°
(); }

53 
T
 
	g›î©‹
--(Ë{  
dec_ªt_œ°
(); }

56 
T
 
öc_ªt_œ°
(c⁄° T 
vÆ
Ë{  
__sync_„tch_™d_add
(&
vÆue
, val); }

59 
T
 
dec_ªt_œ°
(c⁄° T 
vÆ
Ë{  
__sync_„tch_™d_sub
(&
vÆue
, val); }

62 
T
 
exch™ge
(c⁄° T 
vÆ
Ë{  
__sync_lock_ã°_™d_£t
(&
vÆue
, val); }

76 
	gãm∂©e
<
ty≥«me
 
	gT
>

77 
boﬁ
 
	$©omic_com∑ª_™d_sw≠
(
T
& 
a
, c⁄° T &
ﬁdvÆ
, c⁄° T &
√wvÆ
) {

78  
	`__sync_boﬁ_com∑ª_™d_sw≠
(&
a
, 
ﬁdvÆ
, 
√wvÆ
);

79 
	}
};

82 
	gãm∂©e
 <>

83 
ölöe
 
boﬁ
 
	$©omic_com∑ª_™d_sw≠
(& 
a
, c⁄° &
ﬁdvÆ
, c⁄° &
√wvÆ
) {

84  
	`__sync_boﬁ_com∑ª_™d_sw≠
(
ªöãΩªt_ˇ°
<
uöt64_t
*>(&
a
),

85 *
ªöãΩªt_ˇ°
<c⁄° 
uöt64_t
*>(&
ﬁdvÆ
),

86 *
ªöãΩªt_ˇ°
<c⁄° 
uöt64_t
*>(&
√wvÆ
));

87 
	}
};

89 
	gãm∂©e
 <>

90 
ölöe
 
boﬁ
 
	$©omic_com∑ª_™d_sw≠
(& 
a
, c⁄° &
ﬁdvÆ
, c⁄° &
√wvÆ
) {

91  
	`__sync_boﬁ_com∑ª_™d_sw≠
(
ªöãΩªt_ˇ°
<
uöt32_t
*>(&
a
),

92 *
ªöãΩªt_ˇ°
<c⁄° 
uöt32_t
*>(&
ﬁdvÆ
),

93 *
ªöãΩªt_ˇ°
<c⁄° 
uöt32_t
*>(&
√wvÆ
));

94 
	}
};

96 
	gãm∂©e
<
ty≥«me
 
	gT
>

97 
	$©omic_exch™ge
(
T
& 
a
, T& 
b
) {

98 
b
 =
	`__sync_lock_ã°_™d_£t
(&
a
, b);

99 
	}
};

	@util/binary_minheap.hpp

29 #i‚de‡
DEF_MINHEAP_GRAPHCHI


30 
	#DEF_MINHEAP_GRAPHCHI


	)

32 
	~<as£π.h
>

33 
	~<°dlib.h
>

36 
	gãm∂©e
 <
ty≥«me
 
	gT
>

37 ˛as†
	cbö¨y_möhóp
 {

38 
T
 * 
	mvÆues
;

39 
	mˇ∑côy
;

40 
	msz
;

41 
	mpublic
:

42 
	$bö¨y_möhóp
(
ˇ∑côy
Ë: 
	`ˇ∑côy
(ˇ∑côy), 
	$sz
(0) {

43 
vÆues
 = (
T
*Ë
	`ˇŒoc
(
ˇ∑côy
, (T));

46 ~
	$bö¨y_möhóp
() {

47 
dñëe
 
vÆues
;

48 
	}
}

50 
ölöe
 
	$∑ª¡
(
i
Ë{  (i+1)/2-1; 
	}
}

51 
ölöe
 
	$À·
(
i
Ë{  i*2 + 1; 
	}
}

52 
ölöe
 
	$right
(
i
Ë{  i*2 + 2; 
	}
}

53 
ölöe
 
	$ö¸HópSize
(Ë{ 
sz
++; 
	`as£π
(sz <
ˇ∑côy
); 
	}
}

54 
ölöe
 
	$de¸HópSize
(Ë{ 
sz
--; 
	`as£π
(sz >0); 
	}
}

56 
	$ö£π
(
T
 
ñemít
) {

57 
	`ö¸HópSize
();

59 
pos
 = 
sz
 - 1;

60 ; 
pos
 > 0 && 
ñemít
 < 
vÆues
[
	`∑ª¡
(pos)];Öos=parent(pos))

61 
vÆues
[
pos
] = vÆues[
	`∑ª¡
(pos)];

62 
vÆues
[
pos
] = 
ñemít
;

63 
	}
}

65 
boﬁ
 
	$em±y
(Ë{  
sz
 =0; 
	}
}

67 
	$möHópify
(
i
) {

68 
l
 = 
	`À·
(
i
);

69 
r
 = 
	`right
(
i
);

70 
smÆÀ°
;

71 i‡(
l
 < 
sz
 && 
vÆues
[l] < vÆues[
i
]Ë
smÆÀ°
 =Ü;

72 
smÆÀ°
 = 
i
;

73 i‡(
r
 < 
sz
 && 
vÆues
[r] < vÆues[
smÆÀ°
]) smallest =Ñ;

74 i‡(
smÆÀ°
 !
i
) {

76 
T
 
tmp
 = 
vÆues
[
i
];

77 
vÆues
[
i
] = vÆues[
smÆÀ°
];

78 
vÆues
[
smÆÀ°
] = 
tmp
;

79 
	`möHópify
(
smÆÀ°
);

81 
	}
}

83 
T
 
	$mö
(Ë{  
vÆues
[0]; 
	}
}

84 
	$exåa˘Mö
() {

85 
vÆues
[0] = vÆues[
sz
 - 1];

86 
	`de¸HópSize
();

87 
	`möHópify
(0);

88 
	}
}

	@util/cmdopts.hpp

29 #i‚de‡
GRAPHCHI_CMDOPTS_DEF


30 
	#GRAPHCHI_CMDOPTS_DEF


	)

33 
	~<°rög
>

34 
	~<io°ªam
>

35 
	~<°döt.h
>

37 
	~"≠i/chifûíames.hµ
"

38 
	~"utû/c⁄figfûe.hµ
"

40 
«me•a˚
 
	ggøphchi
 {

44 #ifde‡
__GNUC__


45 
	#VARIABLE_IS_NOT_USED
 
	`__©åibuã__
 ((
unu£d
))

	)

47 
	#VARIABLE_IS_NOT_USED


	)

50 
boﬁ
 
	g_cmd_c⁄figuªd
 = 
Ál£
;

52 
	g_¨gc
;

53 **
	g_¨gv
;

54 
	g°d
::
m≠
<
°d
::
°rög
, std::°rög> 
c⁄f
;

57 
VARIABLE_IS_NOT_USED
 
£t_c⁄f
(
°d
::
°rög
 
key
, std::°rög 
vÆue
) {

58 
c⁄f
[
key
] = 
vÆue
;

62 
	g°d
::
°rög
 
VARIABLE_IS_NOT_USED
 
gë_c⁄fig_›ti⁄_°rög
(c⁄° *
›ti⁄_«me
) {

63 i‡(
c⁄f
.
föd
(
›ti⁄_«me
Ë!c⁄f.
íd
()) {

64  
c⁄f
[
›ti⁄_«me
];

66 
	g°d
::
cout
 << "ERROR: couldÇŸ föd o±i⁄ " << 
›ti⁄_«me
 << " from config.";

67 
as£π
(
Ál£
);

71 
	g°d
::
°rög
 
VARIABLE_IS_NOT_USED
 
gë_c⁄fig_›ti⁄_°rög
(c⁄° *
›ti⁄_«me
,

72 
°d
::
°rög
 
deÁu…_vÆue
) {

73 i‡(
c⁄f
.
föd
(
›ti⁄_«me
Ë!c⁄f.
íd
()) {

74  
c⁄f
[
›ti⁄_«me
];

76  
	gdeÁu…_vÆue
;

80 
VARIABLE_IS_NOT_USED
 
gë_c⁄fig_›ti⁄_öt
(c⁄° *
›ti⁄_«me
, 
deÁu…_vÆue
) {

81 i‡(
	gc⁄f
.
föd
(
›ti⁄_«me
Ë!
c⁄f
.
íd
()) {

82  
©oi
(
c⁄f
[
›ti⁄_«me
].
c_°r
());

84  
	gdeÁu…_vÆue
;

88 
VARIABLE_IS_NOT_USED
 
gë_c⁄fig_›ti⁄_öt
(c⁄° *
›ti⁄_«me
) {

89 i‡(
	gc⁄f
.
föd
(
›ti⁄_«me
Ë!
c⁄f
.
íd
()) {

90  
©oi
(
c⁄f
[
›ti⁄_«me
].
c_°r
());

92 
	g°d
::
cout
 << "ERROR: couldÇŸ föd o±i⁄ " << 
›ti⁄_«me
 << " from config.";

93 
as£π
(
Ál£
);

97 
uöt64_t
 
VARIABLE_IS_NOT_USED
 
gë_c⁄fig_›ti⁄_l⁄g
(c⁄° *
›ti⁄_«me
, uöt64_à
deÁu…_vÆue
) {

98 i‡(
	gc⁄f
.
föd
(
›ti⁄_«me
Ë!
c⁄f
.
íd
()) {

99  
©ﬁ
(
c⁄f
[
›ti⁄_«me
].
c_°r
());

101  
	gdeÁu…_vÆue
;

104 
VARIABLE_IS_NOT_USED
 
gë_c⁄fig_›ti⁄_doubÀ
(c⁄° *
›ti⁄_«me
, 
deÁu…_vÆue
) {

105 i‡(
	gc⁄f
.
föd
(
›ti⁄_«me
Ë!
c⁄f
.
íd
()) {

106  
©of
(
c⁄f
[
›ti⁄_«me
].
c_°r
());

108  
	gdeÁu…_vÆue
;

112 
£t_¨gc
(
¨gc
, c⁄° ** 
¨gv
);

113 
£t_¨gc
(
¨gc
, c⁄° ** 
¨gv
) {

114 
	g_¨gc
 = 
¨gc
;

115 
	g_¨gv
 = (**)
¨gv
;

116 
	g_cmd_c⁄figuªd
 = 
åue
;

117 
	gc⁄f
 = 
lﬂdc⁄fig
(
fûíame_c⁄fig_loˇl
(), 
fûíame_c⁄fig
());

120 
	g°d
::
°rög
 
¥efix
 = "--";

121 
	gi
 = 1; i < 
	g¨gc
; i++) {

122 
	g°d
::
°rög
 
¨g
 = 
°d
::°rög(
_¨gv
[
i
]);

124 i‡(
	g¨g
.
sub°r
(0, 
¥efix
.
size
()) ==Örefix) {

125 
¨g
 =árg.
sub°r
(
¥efix
.
size
());

126 
size_t
 
	ga
 = 
¨g
.
föd_fú°_of
("=", 0);

127 i‡(
	ga
 !
¨g
.
≈os
) {

128 
°d
::
°rög
 
key
 = 
¨g
.
sub°r
(0, 
a
);

129 
	g°d
::
°rög
 
vÆ
 = 
¨g
.
sub°r
(
a
 + 1);

131 
	g°d
::
cout
 << "[" << 
key
 << "]" << " => " << "[" << 
vÆ
 << "]" << 
°d
::
ídl
;

132 
	gc⁄f
[
key
] = 
vÆ
;

139 
gøphchi_öô
(
¨gc
, c⁄° ** 
¨gv
);

140 
gøphchi_öô
(
¨gc
, c⁄° ** 
¨gv
) {

141 
£t_¨gc
(
¨gc
, 
¨gv
);

144 
check_cmd_öô
() {

145 i‡(!
	g_cmd_c⁄figuªd
) {

146 
	g°d
::
cout
 << "ERROR: comm™dÜöê›ti⁄†nŸ inôülized." << 
°d
::
ídl
;

147 
	g°d
::
cout
 << " YouÇìdÅÿˇŒ së_¨gc(ËöÅhêbegönög o‡thê¥ogøm." << 
°d
::
ídl
;

154 
	g°d
::
°rög
 
VARIABLE_IS_NOT_USED
 
gë_›ti⁄_°rög
(c⁄° *
›ti⁄_«me
,

155 
°d
::
°rög
 
deÁu…_vÆue
)

157 
check_cmd_öô
();

158 
	gi
;

160 
	gi
 = 
_¨gc
 - 2; i >= 0; i -= 1)

161 i‡(
°rcmp
(
_¨gv
[
i
], 
›ti⁄_«me
) == 0)

162  
°d
::
°rög
(
_¨gv
[
i
 + 1]);

163  
gë_c⁄fig_›ti⁄_°rög
(
›ti⁄_«me
, 
deÁu…_vÆue
);

166 
	g°d
::
°rög
 
VARIABLE_IS_NOT_USED
 
gë_›ti⁄_°rög
(c⁄° *
›ti⁄_«me
)

168 
i
;

169 
check_cmd_öô
();

171 
	gi
 = 
_¨gc
 - 2; i >= 0; i -= 1)

172 i‡(
°rcmp
(
_¨gv
[
i
], 
›ti⁄_«me
) == 0)

173  
°d
::
°rög
(
_¨gv
[
i
 + 1]);

174  
gë_c⁄fig_›ti⁄_°rög
(
›ti⁄_«me
);

177 
	g°d
::
°rög
 
VARIABLE_IS_NOT_USED
 
gë_›ti⁄_°rög_öãø˘ive
(c⁄° *
›ti⁄_«me
, 
°d
::°rög 
›ti⁄s
)

179 
i
;

180 
check_cmd_öô
();

182 
	gi
 = 
_¨gc
 - 2; i >= 0; i -= 1)

183 i‡(
°rcmp
(
_¨gv
[
i
], 
›ti⁄_«me
) == 0)

184  
°d
::
°rög
(
_¨gv
[
i
 + 1]);

185 i‡(
	gc⁄f
.
föd
(
›ti⁄_«me
Ë!
c⁄f
.
íd
()) {

186  
c⁄f
[
›ti⁄_«me
];

189 
	g°d
::
cout
 << "PÀa£É¡î vÆuêf‹ comm™d-löê¨gumíà[" << 
°d
::
°rög
(
›ti⁄_«me
Ë<< "]"<< std::
ídl
;

190 
	g°d
::
cout
 << " (O±i⁄†¨e: " << 
›ti⁄s
 << ")" << 
°d
::
ídl
;

192 
	g°d
::
°rög
 
vÆ
;

193 
	g°d
::
cö
 >> 
vÆ
;

195  
	gvÆ
;

202 
VARIABLE_IS_NOT_USED
 
gë_›ti⁄_öt
(c⁄° *
›ti⁄_«me
, 
deÁu…_vÆue
)

204 
	gi
;

205 
check_cmd_öô
();

207 
	gi
 = 
_¨gc
 - 2; i >= 0; i -= 1)

208 i‡(
°rcmp
(
_¨gv
[
i
], 
›ti⁄_«me
) == 0)

209  
©oi
(
_¨gv
[
i
 + 1]);

211  
gë_c⁄fig_›ti⁄_öt
(
›ti⁄_«me
, 
deÁu…_vÆue
);

214 
VARIABLE_IS_NOT_USED
 
gë_›ti⁄_öt
(c⁄° *
›ti⁄_«me
)

216 
	gi
;

217 
check_cmd_öô
();

219 
	gi
 = 
_¨gc
 - 2; i >= 0; i -= 1)

220 i‡(
°rcmp
(
_¨gv
[
i
], 
›ti⁄_«me
) == 0)

221  
©oi
(
_¨gv
[
i
 + 1]);

223  
gë_c⁄fig_›ti⁄_öt
(
›ti⁄_«me
);

229 
uöt64_t
 
VARIABLE_IS_NOT_USED
 
gë_›ti⁄_l⁄g
(c⁄° *
›ti⁄_«me
, uöt64_à
deÁu…_vÆue
)

231 
	gi
;

232 
check_cmd_öô
();

234 
	gi
 = 
_¨gc
 - 2; i >= 0; i -= 1)

235 i‡(
°rcmp
(
_¨gv
[
i
], 
›ti⁄_«me
) == 0)

236  
©ﬁ
(
_¨gv
[
i
 + 1]);

237  
gë_c⁄fig_›ti⁄_l⁄g
(
›ti⁄_«me
, 
deÁu…_vÆue
);

240 
VARIABLE_IS_NOT_USED
 
gë_›ti⁄_Êﬂt
(c⁄° *
›ti⁄_«me
, 
deÁu…_vÆue
)

242 
	gi
;

243 
check_cmd_öô
();

245 
	gi
 = 
_¨gc
 - 2; i >= 0; i -= 1)

246 i‡(
°rcmp
(
_¨gv
[
i
], 
›ti⁄_«me
) == 0)

247  ()
©of
(
_¨gv
[
i
 + 1]);

248  (Ë
gë_c⁄fig_›ti⁄_doubÀ
(
›ti⁄_«me
, 
deÁu…_vÆue
);

	@util/configfile.hpp

30 #i‚de‡
GRAPHCHI_CONFIGFILE_DEF


31 
	#GRAPHCHI_CONFIGFILE_DEF


	)

33 
	~<io°ªam
>

34 
	~<c°dio
>

35 
	~<°rög
>

36 
	~<m≠
>

37 
	~<as£π.h
>

39 
«me•a˚
 
	ggøphchi
 {

43 c⁄° 
	g°d
::
°rög
 
whôeS∑˚s
( " \f\n\r\t\v" );

46 
åimRight
–
°d
::
°rög
 &
°r
,

47 c⁄° 
°d
::
°rög
& 
åimCh¨s
 )

49 
°d
::
°rög
::
size_ty≥
 
pos
 = 
°r
.
föd_œ°_nŸ_of
–
åimCh¨s
 );

50 
	g°r
.
îa£
–
pos
 + 1 );

54 
åimLe·
–
°d
::
°rög
 &
°r
,

55 c⁄° 
°d
::
°rög
& 
åimCh¨s
 )

57 
°d
::
°rög
::
size_ty≥
 
pos
 = 
°r
.
föd_fú°_nŸ_of
–
åimCh¨s
 );

58 
	g°r
.
îa£
–0, 
pos
 );

62 
	g°d
::
°rög
 
åim
–
°d
::°rög 
°r
)

64 
°d
::
°rög
 
åimCh¨s
 = " \f\n\r\t\v";

65 
åimRight
–
°r
, 
åimCh¨s
 );

66 
åimLe·
–
°r
, 
åimCh¨s
 );

67  
	g°r
;

72 
_FIXLINE
(* 
s
) {

73 
	gÀn
 = ()
°æí
(
s
)-1;

74 if(
	gs
[
Àn
] ='\n'Ë
s
[len] = 0;

83 
	g°d
::
m≠
<
°d
::
°rög
, std::°rög> 
lﬂdc⁄fig
(°d::°rög 
fûíame
, std::°rög 
£c⁄d¨y_fûíame
) {

84 
FILE
 * 
f
 = 
f›í
(
fûíame
.
c_°r
(), "r");

85 i‡(
	gf
 =
NULL
) {

86 
f
 = 
f›í
(
£c⁄d¨y_fûíame
.
c_°r
(), "r");

87 i‡(
	gf
 =
NULL
) {

88 
°d
::
cout
 << "ERROR: CouldÇŸÑód c⁄figuøti⁄ fûe: " << 
fûíame
 << std::
ídl
;

89 
	g°d
::
cout
 << "PÀa£ deföêívú⁄míàv¨übÀ GRAPHCHI_ROOT o∏ru¿thê¥ogøm fromÅh© dúe˘‹y." << 
°d
::
ídl
;

91 
as£π
(
f
 !
NULL
);

94 
	gs
[4096];

95 
	g°d
::
m≠
<
°d
::
°rög
, std::°rög> 
c⁄f
;

98 
fgës
(
s
, 4096, 
f
Ë!
NULL
) {

99 
_FIXLINE
(
s
);

100 i‡(
	gs
[0] == '#') ;

101 i‡(
	gs
[0] == '%') ;

103 
	gdñims
[] = "=";

104 * 
	gt
;

105 
	gt
 = 
°πok
(
s
, 
dñims
);

106 c⁄° * 
	gckey
 = 
t
;

107 
	gt
 = 
°πok
(
NULL
, 
dñims
);

108 c⁄° * 
	gcvÆ
 = 
t
;

110 i‡(
	gckey
 !
NULL
 && 
cvÆ
 != NULL) {

111 
°d
::
°rög
 
key
 = 
åim
(°d::°rög(
ckey
));

112 
	g°d
::
°rög
 
vÆ
 = 
åim
(
°d
::°rög(
cvÆ
));

113 
	gc⁄f
[
key
] = 
vÆ
;

118  
	gc⁄f
;

	@util/dense_bitset.hpp

4 #i‚de‡
DENSE_BITSET_HPP


5 
	#DENSE_BITSET_HPP


	)

6 
	~<c°dio
>

7 
	~<c°dlib
>

8 
	~<°döt.h
>

10 
«me•a˚
 
	ggøphchi
 {

11 ˛as†
	cdí£_bô£t
 {

12 
	gpublic
:

13 
dí£_bô£t
(Ë: 
¨øy
(
NULL
), 
Àn
(0) {

14 
gíî©e_bô_masks
();

17 
dí£_bô£t
(
size_t
 
size
Ë: 
¨øy
(
NULL
), 
Àn
(size) {

18 
ªsize
(
size
);

19 
˛ór
();

20 
gíî©e_bô_masks
();

24 
	gvútuÆ
 ~
dí£_bô£t
(Ë{
‰ì
(
¨øy
);}

26 
ªsize
(
size_t
 
n
) {

27 
	gÀn
 = 
n
;

29 
	g¨æí
 = 
n
 / (8*(
size_t
)) + 1;

30 
	g¨øy
 = (
size_t
*)
ªÆloc
(
¨øy
, (size_tË* 
¨æí
);

33 
˛ór
() {

34 
size_t
 
	gi
 = 0;ò< 
	g¨æí
; ++iË
	g¨øy
[
i
] = 0;

37 
£èŒ
() {

38 
mem£t
(
¨øy
, 0xff, 
¨æí
 * (
size_t
));

41 
ölöe
 
boﬁ
 
gë
(
uöt32_t
 
b
) const{

42 
uöt32_t
 
	g¨Ωos
, 
	gbôpos
;

43 
bô_to_pos
(
b
, 
¨Ωos
, 
bôpos
);

44  
	g¨øy
[
¨Ωos
] & (
size_t
(1Ë<< size_t(
bôpos
));

48 
ölöe
 
boﬁ
 
£t_bô
(
uöt32_t
 
b
) {

50 
uöt32_t
 
	g¨Ωos
, 
	gbôpos
;

51 
bô_to_pos
(
b
, 
¨Ωos
, 
bôpos
);

52 c⁄° 
size_t
 
mask
(size_t(1Ë<< size_t(
bôpos
));

53  
__sync_„tch_™d_‹
(
¨øy
 + 
¨Ωos
, 
mask
Ë& 
	gmask
;

57 
ölöe
 
boﬁ
 
£t
(
uöt32_t
 
b
, boﬁ 
vÆue
) {

58 i‡(
	gvÆue
Ë 
£t_bô
(
b
);

59  
˛ór_bô
(
b
);

63 
ölöe
 
boﬁ
 
˛ór_bô
(
uöt32_t
 
b
) {

65 
uöt32_t
 
	g¨Ωos
, 
	gbôpos
;

66 
bô_to_pos
(
b
, 
¨Ωos
, 
bôpos
);

67 c⁄° 
size_t
 
ã°_mask
(size_t(1Ë<< size_t(
bôpos
));

68 c⁄° 
size_t
 
˛ór_mask
(~
ã°_mask
);

69  
__sync_„tch_™d_™d
(
¨øy
 + 
¨Ωos
, 
˛ór_mask
Ë& 
	gã°_mask
;

72 
ölöe
 
˛ór_bôs
(
uöt32_t
 
‰omb
, uöt32_à
tob
) {

74 c⁄° 
size_t
 
	gbô•îw‹d
 = (size_t)*8;

75 (
	g‰omb
%
	gbô•îw‹d
 != 0)) {

76 
˛ór_bô
(
‰omb
);

77 i‡(
	g‰omb
>=
tob
) ;

78 
	g‰omb
++;

81 (
	gtob
%
	gbô•îw‹d
 != 0)) {

82 
˛ór_bô
(
tob
);

83 if(
	gtob
<=
‰omb
) ;

84 
	gtob
--;

86 
˛ór_bô
(
tob
);

88 
uöt32_t
 
	g‰om_¨Ωos
 = 
‰omb
 / (8 * (Ë(
size_t
));

89 
uöt32_t
 
	gto_¨Ωos
 = 
tob
 / (8 * (Ë(
size_t
));

90 
mem£t
(&
¨øy
[
‰om_¨Ωos
], 0, (
to_¨Ωos
-‰om_¨ΩosË* (Ë(
size_t
));

94 
ölöe
 
size_t
 
size
() const {

95  
	gÀn
;

98 
	g¥iv©e
:

101 
ölöe
 
bô_to_pos
(
uöt32_t
 
b
, uöt32_à&
¨Ωos
, uöt32_à&
bôpos
) {

103 
	g¨Ωos
 = 
b
 / (8 * ()(
size_t
));

104 
	gbôpos
 = 
b
 & (8 * ()(
size_t
) - 1);

107 
gíî©e_bô_masks
() {

108 
	gbñow_£À˘edbô
[0] = 
size_t
(-2);

109 
size_t
 
	gi
 = 0;ò< 8 * (
	gsize_t
) ; ++i) {

110 
	g£À˘bô
[
i
] = 
size_t
(1) << i;

111 
	gnŸ£À˘bô
[
i
] = ~
£À˘bô
[i];

112 i‡(
	gi
 > 0Ë
	gbñow_£À˘edbô
[
i
] = 
bñow_£À˘edbô
[i-1] - 
£À˘bô
[i];

117 
ölöe
 
size_t
 
√xt_bô_ö_block
(c⁄° 
uöt32_t
 &
b
, c⁄° size_à&
block
) {

119 
size_t
 
	gx
 = 
block
 & 
bñow_£À˘edbô
[
b
] ;

120 i‡(
	gx
 == 0)  0;

121  
__buûtö_˘zl
(
x
);

125 
ölöe
 
size_t
 
fú°_bô_ö_block
(c⁄° size_à&
block
) {

127 i‡(
	gblock
 == 0)  0;

128  
__buûtö_˘zl
(
block
);

131 
size_t
* 
	g¨øy
;

132 
size_t
 
	gÀn
;

133 
size_t
 
	g¨æí
;

135 
size_t
 
	g£À˘bô
[8 * (size_t)];

136 
size_t
 
	gnŸ£À˘bô
[8 * (size_t)];

137 
size_t
 
	gbñow_£À˘edbô
[8 * (size_t)];

	@util/erdosrenyi.cpp

9 
	~<°dlib.h
>

10 
	~<c°dio
>

11 
	~<sys/time.h
>

12 
	~<time.h
>

14 
	$maö
(
¨gc
, c⁄° ** 
¨gv
) {

15 i‡(
¨gc
 < 4) {

16 
	`¥ötf
("Usage:ÉrdosrenyiÇameprefixÇÖ\n");

20 c⁄° * 
«mïªfix
 = 
¨gv
[1];

21 
n
 = 
	`©oi
(
¨gv
[2]);

22 
p
 = 
	`©of
(
¨gv
[3]);

24 
	`¥ötf
("Numbî o‡vîti˚s=%d,Édgê¥obabûôy=%lf\n", 
n
, 
p
);

26 
fûíame
[1024];

27 
	`•rötf
(
fûíame
, "îdo§íyi_%s_%d_%.4f.edgñi°", 
«mïªfix
, 
n
, 
p
);

29 
timevÆ
 
â
;

30 
	`gëtimeofday
(&
â
, 
NULL
);

32 
	`§™dom
(
	`time
(
NULL
Ë+ ()
â
.
tv_u£c
);

34 
size_t
 
K
 = 10000;

36 
FILE
 * 
f
 = 
	`f›í
(
fûíame
, "w");

38 
size_t
 
cou¡
 = 0;

39 
size_t
 
ac˚±ed
 = 0;

41 
size_t
 
lim
 = (size_tË(
p
 * 
K
);

43 
i
=0; i < 
n
; i++) {

44 
j
=
i
+1; j < 
n
; j++) {

45 
cou¡
++;

46 
size_t
 
r
 = 
	`øndom
();

47 i‡(
r
 % 
K
 < 
lim
) {

48 
ac˚±ed
++;

49 i‡(
	`ønd
() % 2 == 0) {

50 
	`Ârötf
(
f
, "%d\t%d\n", 
i
, 
j
);

52 
	`Ârötf
(
f
, "%d\t%d\n", 
j
, 
i
);

58 
	`f˛o£
(
f
);

60 
	`¥ötf
("cou¡: %lu,ác˚±ed: %lf\n", 
cou¡
, (
ac˚±ed
)/(count));

61 
	}
}

	@util/graphgenerators.cpp

9 
	~"gøphgíî©‹s.h
"

13 
	~<°dlib.h
>

14 
	~<c°dio
>

15 
	~<sys/time.h
>

16 
	~<time.h
>

18 
	$maö
(
¨gc
, c⁄° ** 
¨gv
) {

19 i‡(
¨gc
 < 3) {

20 
	`¥ötf
("Usage: generateÅypeÇ\n");

24 
°d
::
°rög
 
ty≥
 = 
¨gv
[1];

25 
n
 = 
	`©oi
(
¨gv
[2]);

28 
fûíame
[1024];

29 
	`•rötf
(
fûíame
, "%s_%d.edgñi°", 
ty≥
.
	`c_°r
(), 
n
);

30 
FILE
 * 
f
 = 
	`f›í
(
fûíame
, "w");

32 i‡(
ty≥
 == "chain") {

33 
x
=0; x<
n
 - 1; x++) {

34 
	`Ârötf
(
f
, "%d %d\n", 
x
, x + 1);

38 i‡(
ty≥
 == "grid") {

39 
x
=0; x<
n
; x++) {

40 
y
=0; y<
n
; y++) {

41 
vid
 = 
y
 * 
n
 + 
x
;

42 i‡(
x
 < 
n
 - 1)

43 
	`Ârötf
(
f
, "%d %d\n", 
vid
, vid + 1);

44 i‡(
y
 < 
n
 -1)

45 
	`Ârötf
(
f
, "%d %d\n", 
vid
, vid + 
n
);

52 i‡(
ty≥
 == "crossgrid") {

53 
x
=0; x<
n
; x++) {

54 
y
=0; y<
n
; y++) {

55 
vid
 = 
y
 * 
n
 + 
x
;

56 i‡(
x
 < 
n
 - 1)

57 
	`Ârötf
(
f
, "%d %d\n", 
vid
, vid + 1);

58 i‡(
y
 < 
n
 - 1)

59 
	`Ârötf
(
f
, "%d %d\n", 
vid
, vid + 
n
);

60 i‡(
x
 < 
n
 - 1 && 
y
 <Ç -1) {

62 
	`Ârötf
(
f
, "%d %d\n", 
vid
, vid + 
n
 + 1);

64 i‡(
x
 < 
n
 - 1 && 
y
 > 0) {

66 
	`Ârötf
(
f
, "%d %d\n", 
vid
, vid -
n
 + 1);

72 i‡(
ty≥
 == "cubegrid") {

73 
x
=0; x<
n
; x++) {

74 
y
=0; y<
n
; y++) {

75 
z
=0; z<
n
; z++) {

76 
vid
 = 
z
 * 
n
 *Ç + 
y
 *Ç + 
x
;

77 i‡(
x
 < 
n
 - 1)

78 
	`Ârötf
(
f
, "%d %d\n", 
vid
, vid + 1);

79 i‡(
y
 < 
n
 -1)

80 
	`Ârötf
(
f
, "%d %d\n", 
vid
, vid + 
n
);

81 i‡(
z
 < 
n
 - 1)

82 
	`Ârötf
(
f
, "%d %d\n", 
vid
, vid + 
n
 *Ç);

88 i‡(
ty≥
 == "quadgrid") {

89 
x
=0; x<
n
; x++) {

90 
y
=0; y<
n
; y++) {

91 
z
=0; z<
n
; z++) {

92 
w
=0; w<
n
; w++) {

93 
vid
 = 
w
 * 
n
 *Ç *Ç + 
z
 *Ç *Ç + 
y
 *Ç + 
x
;

94 i‡(
x
 < 
n
 - 1)

95 
	`Ârötf
(
f
, "%d %d\n", 
vid
, vid + 1);

96 i‡(
y
 < 
n
 -1)

97 
	`Ârötf
(
f
, "%d %d\n", 
vid
, vid + 
n
);

98 i‡(
z
 < 
n
 - 1)

99 
	`Ârötf
(
f
, "%d %d\n", 
vid
, vid + 
n
 *Ç);

100 i‡(
w
 < 
n
 - 1)

101 
	`Ârötf
(
f
, "%d %d\n", 
vid
, vid + 
n
 *Ç *Ç);

110 
	`f˛o£
(
f
);

111 
	}
}

	@util/graphgenerators.h

9 #i‚de‡
__gøphchi_xcode__gøphgíî©‹s__


10 
	#__gøphchi_xcode__gøphgíî©‹s__


	)

12 
	~<io°ªam
>

	@util/ioutil.hpp

28 #i‚de‡
DEF_IOUTIL_HPP


29 
	#DEF_IOUTIL_HPP


	)

31 
	~<uni°d.h
>

32 
	~<as£π.h
>

33 
	~<°dlib.h
>

34 
	~<î∫o.h
>

35 
	~<zlib.h
>

39 
	gãm∂©e
 <
ty≥«me
 
	gT
>

40 
	$¥óda
(
f
, 
T
 * 
tbuf
, 
size_t
 
nbyãs
, size_à
off
) {

41 
size_t
 
ƒód
 = 0;

42 * 
buf
 = (*)
tbuf
;

43 
ƒód
<
nbyãs
) {

44 
ssize_t
 
a
 = 
	`¥ód
(
f
, 
buf
, 
nbyãs
 - 
ƒód
, 
off
 +Çread);

45 i‡(
a
 == (-1)) {

46 
°d
::
cout
 << "Eº‹, couldÇŸÑód: " << 
	`°ªº‹
(
î∫o
Ë<< "; fûe-desc: " << 
f
 << std::
ídl
;

47 
°d
::
cout
 << "Pªadárgumíts: " << 
f
 << "Åbuf: " << 
tbuf
 << "Çbyãs: " << 
nbyãs
 << " off: " << 
off
 << std::
ídl
;

48 
	`as£π
(
a
 != (-1));

50 
	`as£π
(
a
>0);

51 
buf
 +
a
;

52 
ƒód
 +
a
;

54 
	`as£π
(
ƒód
 <
nbyãs
);

55 
	}
}

57 
	gãm∂©e
 <
ty≥«me
 
	gT
>

58 
	$¥óda_åunc
(
f
, 
T
 * 
tbuf
, 
size_t
 
nbyãs
, size_à
off
) {

59 
size_t
 
ƒód
 = 0;

60 * 
buf
 = (*)
tbuf
;

61 
ƒód
<
nbyãs
) {

62 
size_t
 
a
 = 
	`¥ód
(
f
, 
buf
, 
nbyãs
-
ƒód
, 
off
+nread);

63 i‡(
a
 == 0) {

66 
	`mem£t
(
buf
, 0, 
nbyãs
-
ƒód
);

69 
buf
 +
a
;

70 
ƒód
 +
a
;

73 
	}
}

75 
	gãm∂©e
 <
ty≥«me
 
	gT
>

76 
size_t
 
	$ªadfuŒ
(
f
, 
T
 ** 
buf
) {

77 
off_t
 
sz
 = 
	`l£ek
(
f
, 0, 
SEEK_END
);

78 
	`l£ek
(
f
, 0, 
SEEK_SET
);

79 *
buf
 = (
T
*)
	`mÆloc
(
sz
);

80 
	`¥óda
(
f
, *
buf
, 
sz
, 0);

81  
sz
;

82 
	}
}

84 
	gãm∂©e
 <
ty≥«me
 
	gT
>

85 
	$pwrôó
(
f
, 
T
 * 
tbuf
, 
size_t
 
nbyãs
, size_à
off
) {

86 
size_t
 
nwrôãn
 = 0;

87 
	`as£π
(
f
>0);

88 * 
buf
 = (*)
tbuf
;

89 
nwrôãn
<
nbyãs
) {

90 
size_t
 
a
 = 
	`pwrôe
(
f
, 
buf
, 
nbyãs
-
nwrôãn
, 
off
+nwritten);

91 i‡(
a
 =
	`size_t
(-1)) {

92 
	`log°ªam
(
LOG_ERROR
Ë<< "f:" << 
f
 << "Çbyãs: " << 
nbyãs
 << " wrôãn: " << 
nwrôãn
 << " off:" <<

93 
off
 << " f: " << 
f
 << "Éº‹:" << 
	`°ªº‹
(
î∫o
Ë<< 
°d
::
ídl
;

94 
	`as£π
(
Ál£
);

96 
	`as£π
(
a
>0);

97 
buf
 +
a
;

98 
nwrôãn
 +
a
;

100 
	}
}

105 
	gãm∂©e
 <
ty≥«me
 
	gT
>

106 
check¨øy_fûesize
(
°d
::
°rög
 
‚ame
, 
size_t
 
√Àmíts
) {

108 
	gf
 = 
›í
(
‚ame
.
c_°r
(), 
O_RDWR
 | 
O_CREAT
, 
S_IROTH
 | 
S_IWOTH
 | 
S_IWUSR
 | 
S_IRUSR
);

109 i‡(
	gf
 < 1) {

110 
log°ªam
(
LOG_ERROR
Ë<< "Eº‹ inôülizögÅhêd©a-fûe: " << 
	g‚ame
 << "Éº‹:" << 
°ªº‹
(
î∫o
Ë<< 
	g°d
::
ídl
; }

111 
as£π
(
f
>0);

112 
	gîr
 = 
·runˇã
(
f
, 
√Àmíts
 * (
T
));

113 i‡(
	gîr
 != 0) {

114 
log°ªam
(
LOG_ERROR
Ë<< "Eº‹ i¿adju°ög fûêsize: " << 
‚ame
 << "Åÿsize: " << 
√Àmíts
 * (
T
)

115 << "Éº‹:" << 
°ªº‹
(
î∫o
Ë<< 
°d
::
ídl
;

117 
as£π
(
îr
 == 0);

118 
˛o£
(
f
);

121 
	gãm∂©e
 <
ty≥«me
 
	gT
>

122 
	$wrôó
(
f
, 
T
 * 
tbuf
, 
size_t
 
nbyãs
) {

123 
size_t
 
nwrôãn
 = 0;

124 * 
buf
 = (*)
tbuf
;

125 
nwrôãn
<
nbyãs
) {

126 
size_t
 
a
 = 
	`wrôe
(
f
, 
buf
, 
nbyãs
-
nwrôãn
);

127 
	`as£π
(
a
>0);

128 i‡(
a
 =
	`size_t
(-1)) {

129 
	`log°ªam
(
LOG_ERROR
Ë<< "CouldÇŸ wrôê" << (
nbyãs
-
nwrôãn
Ë<< " byãs!" << "Éº‹:" << 
	`°ªº‹
(
î∫o
Ë<< 
°d
::
ídl
;

130 
	`as£π
(
Ál£
);

132 
buf
 +
a
;

133 
nwrôãn
 +
a
;

136 
	}
}

144 
	gãm∂©e
 <
ty≥«me
 
	gT
>

145 
size_t
 
	$wrôe_com¥es£d
(
f
, 
T
 * 
tbuf
, 
size_t
 
nbyãs
) {

147 #i‚de‡
GRAPHCHI_DISABLE_COMPRESSION


148 * 
buf
 = (*)
tbuf
;

149 
ªt
;

150 
have
;

151 
z_°ªam
 
°rm
;

152 
CHUNK
 = (Ë
°d
::
	`max
((
size_t
)1024 * 1024, 
nbyãs
);

153 * 
out
 = (*Ë
	`mÆloc
(
CHUNK
);

154 
	`l£ek
(
f
, 0, 
SEEK_SET
);

157 
°rm
.
zÆloc
 = 
Z_NULL
;

158 
°rm
.
z‰ì
 = 
Z_NULL
;

159 
°rm
.
›aque
 = 
Z_NULL
;

160 
ªt
 = 
	`deÊ©eInô
(&
°rm
, 
Z_BEST_SPEED
);

161 i‡(
ªt
 !
Z_OK
)

162 
	`as£π
(
Ál£
);

165 
°rm
.
avaû_ö
 = (Ë
nbyãs
;

166 
°rm
.
√xt_ö
 = 
buf
;

168 
åîr
 = 
	`·runˇã
(
f
, 0);

169 
	`as£π
 (
åîr
 == 0);

170 
size_t
 
tŸwrôãn
 = 0;

175 
°rm
.
avaû_out
 = 
CHUNK
;

176 
°rm
.
√xt_out
 = 
out
;

177 
ªt
 = 
	`deÊ©e
(&
°rm
, 
Z_FINISH
);

178 
	`as£π
(
ªt
 !
Z_STREAM_ERROR
);

179 
have
 = 
CHUNK
 - 
°rm
.
avaû_out
;

180 i‡(
	`wrôe
(
f
, 
out
, 
have
) != have) {

181 ()
	`deÊ©eEnd
(&
°rm
);

182 
	`as£π
(
Ál£
);

184 
tŸwrôãn
 +
have
;

185 } 
°rm
.
avaû_out
 == 0);

186 
	`as£π
(
°rm
.
avaû_ö
 == 0);

188 
	`as£π
(
ªt
 =
Z_STREAM_END
);

191 ()
	`deÊ©eEnd
(&
°rm
);

192 
	`‰ì
(
out
);

193  
tŸwrôãn
;

195 
	`wrôó
(
f
, 
tbuf
, 
nbyãs
);

196  
nbyãs
;

199 
	}
}

202 
	gãm∂©e
 <
ty≥«me
 
	gT
>

203 
	$ªad_com¥es£d
(
f
, 
T
 * 
tbuf
, 
size_t
 
nbyãs
) {

204 #i‚de‡
GRAPHCHI_DISABLE_COMPRESSION


205 * 
buf
 = (*)
tbuf
;

206 
ªt
;

207 
have
;

208 
z_°ªam
 
°rm
;

209 
CHUNK
 = (Ë
°d
::
	`max
((
size_t
)1024 * 1024, 
nbyãs
);

211 
size_t
 
fsize
 = 
	`l£ek
(
f
, 0, 
SEEK_END
);

213 * 
ö
 = (*Ë
	`mÆloc
(
fsize
);

214 
	`l£ek
(
f
, 0, 
SEEK_SET
);

217 
°rm
.
zÆloc
 = 
Z_NULL
;

218 
°rm
.
z‰ì
 = 
Z_NULL
;

219 
°rm
.
›aque
 = 
Z_NULL
;

220 
°rm
.
avaû_ö
 = 0;

221 
°rm
.
√xt_ö
 = 
Z_NULL
;

222 
ªt
 = 
	`öÊ©eInô
(&
°rm
);

223 i‡(
ªt
 !
Z_OK
)

224 
	`as£π
(
Ál£
);

228 
ssize_t
 
a
 = 0;

230 
a
 = 
	`ªad
(
f
, 
ö
 + 
°rm
.
avaû_ö
, 
fsize
 - strm.avail_in);

231 
°rm
.
avaû_ö
 +(Ë
a
;

232 
	`as£π
(
a
 !(
ssize_t
)(-1));

233 } 
a
 > 0);

235 i‡(
°rm
.
avaû_ö
 == 0)

237 
°rm
.
√xt_ö
 = 
ö
;

241 
°rm
.
avaû_out
 = 
CHUNK
;

242 
°rm
.
√xt_out
 = 
buf
;

243 
ªt
 = 
	`öÊ©e
(&
°rm
, 
Z_NO_FLUSH
);

244 
	`as£π
(
ªt
 !
Z_STREAM_ERROR
);

245 
ªt
) {

246 
Z_NEED_DICT
:

247 
ªt
 = 
Z_DATA_ERROR
;

248 
Z_DATA_ERROR
:

249 
Z_MEM_ERROR
:

250 
	`as£π
(
Ál£
);

252 
have
 = 
CHUNK
 - 
°rm
.
avaû_out
;

253 
buf
 +
have
;

254 } 
°rm
.
avaû_out
 == 0);

257 } 
ªt
 !
Z_STREAM_END
);

260 ()
	`öÊ©eEnd
(&
°rm
);

261 
	`‰ì
(
ö
);

263 
	`¥óda
(
f
, 
tbuf
, 
nbyãs
, 0);

265 
	}
}

	@util/kwaymerge.hpp

30 #i‚de‡
DEF_KWAYMERGE_GRAPHCHI


31 
	#DEF_KWAYMERGE_GRAPHCHI


	)

33 
	~<as£π.h
>

34 
	~<°dlib.h
>

36 
	~<ve˘‹
>

37 
	~"bö¨y_möhóp.hµ
"

40 
	gãm∂©e
 <
ty≥«me
 
	gT
>

41 ˛as†
	cmîge_sour˚
 {

42 
	mpublic
:

43 
vútuÆ
 
boﬁ
 
has_m‹e
() = 0;

44 
vútuÆ
 
T
 
√xt
() = 0;

46 
	gãm∂©e
 <
ty≥«me
 
	gT
>

47 ˛as†
	cmîge_sök
 {

48 
	mpublic
:

49 
vútuÆ
 
add
(
T
 
vÆ
) = 0;

50 
vútuÆ
 
d⁄e
() = 0;

53 
	gãm∂©e
 <
ty≥«me
 
	gT
>

54 
	svÆue_sour˚
 {

55 
	msour˚idx
;

56 
T
 
	mvÆue
;

57 
vÆue_sour˚
(
sour˚idx
, 
T
 
vÆue
) : sourceidx(sourceidx), value(value) {}

59 
boﬁ
 
	m›î©‹
< (
	mvÆue_sour˚
 &
	mx2
)

61  
	mvÆue
 < 
	mx2
.value;

66 
	gãm∂©e
 <
ty≥«me
 
	gT
>

67 ˛as†
	ckway_mîge
 {

68 
	m°d
::
ve˘‹
<
mîge_sour˚
<
T
> *> 
sour˚s
;

69 
	mmîge_sök
<
	mT
> * 
	msök
;

70 
	mK
;

71 
	mbö¨y_möhóp
<
	mvÆue_sour˚
<
	mT
> > 
	mtù
;

73 
	mpublic
:

74 
kway_mîge
(
°d
::
ve˘‹
<
mîge_sour˚
<
T
> *> 
sour˚s
, 
mîge_sök
<T> * 
sök
): sour˚s(sour˚s), sök(sök), 
tù
(()sour˚s.
	$size
()) {

75 
K
 = (Ë
sour˚s
.
	`size
();

78 ~
	$kway_mîge
() {

79 
sök
 = 
NULL
;

80 
	}
}

82 
	$mîge
() {

83 
a˘ive_sour˚s
 =()
sour˚s
.
	`size
();

85 
i
=0; i<
a˘ive_sour˚s
; i++) {

86 
tù
.
	`ö£π
(
vÆue_sour˚
<
T
>(
i
, 
sour˚s
[i]->
	`√xt
()));

89 
a˘ive_sour˚s
 > 0 || !
tù
.
	`em±y
()) {

90 
vÆue_sour˚
<
T
> 
vv
 = 
tù
.
	`mö
();

91 
tù
.
	`exåa˘Mö
();

92 i‡(
sour˚s
[
vv
.
sour˚idx
]->
	`has_m‹e
()) {

93 
tù
.
	`ö£π
(
vÆue_sour˚
<
T
>(
vv
.
sour˚idx
, 
sour˚s
[vv.sour˚idx]->
	`√xt
()));

95 
a˘ive_sour˚s
--;

97 
sök
->
	`add
(
vv
.
vÆue
);

99 
sök
->
	`d⁄e
();

100 
	}
}

	@util/labelanalysis.hpp

33 
	~<ve˘‹
>

34 
	~<Æg‹ôhm
>

35 
	~<î∫o.h
>

36 
	~<as£π.h
>

37 
	~<f°ªam
>

39 
	~"io/°rùedio.hµ
"

40 
	~"loggî/loggî.hµ
"

41 
	~"utû/mîge.hµ
"

42 
	~"utû/ioutû.hµ
"

43 
	~"utû/qs‹t.hµ
"

44 
	~"≠i/chifûíames.hµ
"

45 
	~"ígöe/auxd©a/vîãx_d©a.hµ
"

48 #i‚de‡
DEF_GRAPHCHI_LABELANALYSIS


49 
	#DEF_GRAPHCHI_LABELANALYSIS


	)

51 
usög
 
«me•a˚
 
	ggøphchi
;

53 
	gãm∂©e
 <
ty≥«me
 
	gLabñTy≥
>

54 
	sœbñcou¡_â
 {

55 
LabñTy≥
 
	mœbñ
;

56 
	mcou¡
;

57 
œbñcou¡_â
(
LabñTy≥
 
l
, 
c
Ë: 
œbñ
÷), 
cou¡
(c) {}

58 
œbñcou¡_â
() {}

61 
	gãm∂©e
 <
ty≥«me
 
	gLabñTy≥
>

62 
boﬁ
 
œbñ_cou¡_gª©î
(c⁄° 
œbñcou¡_â
<
LabñTy≥
> &
a
, c⁄°Üabñcou¡_â<LabñTy≥> &
b
) {

63  
	ga
.
	gcou¡
 > 
	gb
.count;

66 
	gãm∂©e
 <
ty≥«me
 
	gLabñTy≥
>

67 
™Æyze_œbñs
(
°d
::
°rög
 
ba£fûíame
, 
¥öâ›
 = 20) {

68 
œbñcou¡_â
<
	tLabñTy≥
> 
	tœbñcou¡_t
;

74 
mërics
 
m
("labelanalysis");

75 
°rùedio
 * 
	giomgr
 = 
√w
 såùedio(
m
);

78 
vid_t
 
	gªadwödow
 = 1024 * 1024;

79 
vid_t
 
	gnumvîti˚s
 = (vid_tË
gë_num_vîti˚s
(
ba£fûíame
);

80 
	gvîãx_d©a_°‹e
<
	gLabñTy≥
> * 
	gvîãxd©a
 =

81 
√w
 
vîãx_d©a_°‹e
<
LabñTy≥
>(
ba£fûíame
, 
	gnumvîti˚s
, 
	giomgr
);

83 
	g°d
::
ve˘‹
<
œbñcou¡_t
> 
cuæabñs
;

84 
boﬁ
 
	gfú°
 = 
åue
;

85 
vid_t
 
	gcurvid
 = 0;

86 
LabñTy≥
 * 
	gbuf„r
 = (LabñTy≥*Ë
ˇŒoc
(
ªadwödow
, (LabelType));

89 
vid_t
 
	g°
 = 0;

90 
vid_t
 
	gí
 = 
numvîti˚s
 - 1;

92 
	g°
 <
numvîti˚s
 - 1) {

93 
í
 = 
°
 + 
ªadwödow
 - 1;

94 i‡(
	gí
 >
numvîti˚s
 - 1Ë
í
 =Çumvertices - 1;

97 
	gvîãxd©a
->
lﬂd
(
°
, 
í
);

99 
	g¡
 = 
í
 - 
°
 + 1;

102 
	gi
=0; i < 
	g¡
; i++) {

103 
LabñTy≥
 
	gl
 = *
vîãxd©a
->
vîãx_d©a_±r
(
i
 + 
°
);

104 i‡(
	gl
 =
curvid
Ë
buf„r
[
i
] = 0xffffffff;

105 
	gbuf„r
[
i
] = 
l
;

106 
	gcurvid
++;

110 
quickS‹t
(
buf„r
, 
¡
, 
°d
::
Àss
<
LabñTy≥
>());

113 
	g°d
::
ve˘‹
<
œbñcou¡_t
> 
√wœbñs
;

114 
	g√wœbñs
.
ª£rve
(
¡
);

115 
LabñTy≥
 
	gœ°œbñ
 = LabelType(0xffffffff);

116 
	gi
=0; i < 
	g¡
; i++) {

117 i‡(
	gbuf„r
[
i
] !
LabñTy≥
(0xffffffff)) {

118 i‡(
buf„r
[
i
] !
œ°œbñ
) {

119 
√wœbñs
.
push_back
(
œbñcou¡_t
(
buf„r
[
i
], 1));

121 
	g√wœbñs
[
√wœbñs
.
size
(Ë- 1].
	gcou¡
 ++;

123 
	gœ°œbñ
 = 
buf„r
[
i
];

127 i‡(
	gfú°
) {

128 
	gi
=0; i < ()
	g√wœbñs
.
size
(); i++) {

129 
	gcuæabñs
.
push_back
(
√wœbñs
[
i
]);

134 
	g˛
 = 0;

135 
	g∆
 = 0;

136 
	g°d
::
ve˘‹
< 
œbñcou¡_t
 > 
mîged
;

137 
	gmîged
.
ª£rve
(
cuæabñs
.
size
(Ë+ 
√wœbñs
.size());

138 
	g˛
 < ()
	gcuæabñs
.
size
(Ë&& 
	g∆
 < ()
	g√wœbñs
.size()) {

139 i‡(
	g√wœbñs
[
∆
].
	gœbñ
 =
cuæabñs
[
˛
].
œbñ
) {

140 
mîged
.
push_back
(
œbñcou¡_t
(
√wœbñs
[
∆
].
œbñ
,Çewœbñs[∆].
cou¡
 + 
cuæabñs
[
˛
].count));

141 
	g∆
++; 
	g˛
++;

143 i‡(
	g√wœbñs
[
∆
].
	gœbñ
 < 
	gcuæabñs
[
˛
].label) {

144 
	gmîged
.
push_back
(
√wœbñs
[
∆
]);

145 
	g∆
++;

147 
	gmîged
.
push_back
(
cuæabñs
[
˛
]);

148 
	g˛
++;

152 
	g˛
 < ()
	gcuæabñs
.
size
()Ë
	gmîged
.
push_back
(
cuæabñs
[
˛
++]);

153 
	g∆
 < ()
	g√wœbñs
.
size
()Ë
	gmîged
.
push_back
(
√wœbñs
[
∆
++]);

155 
	gcuæabñs
 = 
mîged
;

158 
	gfú°
 = 
Ál£
;

159 
	g°
 +
ªadwödow
;

163 
	g°d
::
s‹t
(
cuæabñs
.
begö
(), cuæabñs.
íd
(), 
œbñ_cou¡_gª©î
<
LabñTy≥
>);

166 
	g°d
::
°rög
 
ouäame
 = 
ba£fûíame
 + ".components";

167 
	g°d
::
of°ªam
 
ªsf
;

168 
	gªsf
.
›í
(
ouäame
.
c_°r
());

169 i‡(
	gªsf
 =
NULL
) {

170 
log°ªam
(
LOG_ERROR
Ë<< "CouldÇŸ wrôêœbñ ouçutfûê: " << 
ouäame
 << 
°d
::
ídl
;

173 
	gi
=0; i < (Ë
	gcuæabñs
.
size
(); i++) {

174 
	gªsf
 << 
	gcuæabñs
[
i
].
	gœbñ
 << "," << cuæabñs[i].
	gcou¡
 + 1 << 
	g°d
::
ídl
;

176 
	gªsf
.
˛o£
();

178 
	g°d
::
cout
 << "TŸÆÇumbî o‡dif„ª¡Üabñ†(comp⁄íts/communôõs): " << 
cuæabñs
.
size
(Ë<< 
°d
::
ídl
;

179 
	g°d
::
cout
 << "Li° o‡œbñ†wa†wrôã¿tÿfûe: " << 
ouäame
 << 
°d
::
ídl
;

181 
	gi
=0; i < ()
	g°d
::
mö
((
size_t
)
¥öâ›
, 
cuæabñs
.
size
()); i++) {

182 
	g°d
::
cout
 << (
i
+1Ë<< ".Üabñ: " << 
cuæabñs
[i].
œbñ
 << ", size: " << cuæabñs[i].
cou¡
 + 1 << 
°d
::
ídl
;

185 
‰ì
(
buf„r
);

187 
dñëe
 
	gvîãxd©a
;

188 
dñëe
 
	giomgr
;

	@util/merge.hpp

25 #i‚de‡
DEF_MERGE


26 
	#DEF_MERGE


	)

28 
	gãm∂©e
 <
˛ass
 
	gET
, cœs†
	gF
>

29 
	$mîge
(
ET
* 
S1
, 
l1
, ET* 
S2
, 
l2
, ET* 
R
, 
F
 
f
) {

30 
ET
* 
pR
 = 
R
;

31 
ET
* 
pS1
 = 
S1
;

32 
ET
* 
pS2
 = 
S2
;

33 
ET
* 
eS1
 = 
S1
+
l1
;

34 
ET
* 
eS2
 = 
S2
+
l2
;

35 
åue
) {

36 *
pR
++ = 
	`f
(*
pS2
,*
pS1
) ? *pS2++ : *pS1++;

37 i‡(
pS1
==
eS1
Ë{
°d
::
	`c›y
(
pS2
,
eS2
,
pR
); ;}

38 i‡(
pS2
==
eS2
Ë{
°d
::
	`c›y
(
pS1
,
eS1
,
pR
); ;}

40 
	}
}

	@util/pthread_tools.hpp

1 #i‚de‡
DEF_PTHREAD_TOOLS_HPP


2 
	#DEF_PTHREAD_TOOLS_HPP


	)

6 
	~<c°dlib
>

7 
	~<mem‹y.h
>

8 
	~<±hªad.h
>

9 
	~<£m≠h‹e.h
>

10 
	~<sched.h
>

11 
	~<sig«l.h
>

12 
	~<sys/time.h
>

13 
	~<ve˘‹
>

14 
	~<ˇs£π
>

15 
	~<li°
>

16 
	~<io°ªam
>

18 #unde‡
_POSIX_SPIN_LOCKS


19 
	#_POSIX_SPIN_LOCKS
 -1

	)

27 
«me•a˚
 
	ggøphchi
 {

37 ˛as†
	cmuãx
 {

38 
	g¥iv©e
:

40 
muèbÀ
 
±hªad_muãx_t
 
m_mut
;

41 
	gpublic
:

42 
muãx
() {

43 
îr‹
 = 
±hªad_muãx_öô
(&
m_mut
, 
NULL
);

44 
as£π
(!
îr‹
);

46 
ölöe
 
lock
() const {

47 
	gîr‹
 = 
±hªad_muãx_lock
–&
m_mut
 );

48 
as£π
(!
îr‹
);

50 
ölöe
 
u∆ock
() const {

51 
	gîr‹
 = 
±hªad_muãx_u∆ock
–&
m_mut
 );

52 
as£π
(!
îr‹
);

54 
ölöe
 
boﬁ
 
åy_lock
() const {

55  
±hªad_muãx_åylock
–&
m_mut
 ) == 0;

57 ~
muãx
(){

58 
	gîr‹
 = 
±hªad_muãx_de°roy
–&
m_mut
 );

59 i‡(
	gîr‹
)

60 
≥º‹
("Error: failedÅo destroy mutex");

61 
as£π
(!
îr‹
);

63 
‰õnd
 
˛ass
 
	gc⁄dôi⁄Æ
;

66 #i‡
_POSIX_SPIN_LOCKS
 >= 0

78 ˛as†
	c•ölock
 {

79 
	g¥iv©e
:

81 
muèbÀ
 
±hªad_•ölock_t
 
m_•ö
;

82 
	gpublic
:

83 
•ölock
 () {

84 
îr‹
 = 
±hªad_•ö_öô
(&
m_•ö
, 
PTHREAD_PROCESS_PRIVATE
);

85 
as£π
(!
îr‹
);

88 
ölöe
 
lock
() const {

89 
	gîr‹
 = 
±hªad_•ö_lock
–&
m_•ö
 );

90 
as£π
(!
îr‹
);

92 
ölöe
 
u∆ock
() const {

93 
	gîr‹
 = 
±hªad_•ö_u∆ock
–&
m_•ö
 );

94 
as£π
(!
îr‹
);

96 
ölöe
 
boﬁ
 
åy_lock
() const {

97  
±hªad_•ö_åylock
–&
m_•ö
 ) == 0;

99 ~
•ölock
(){

100 
	gîr‹
 = 
±hªad_•ö_de°roy
–&
m_•ö
 );

101 
as£π
(!
îr‹
);

103 
‰õnd
 
˛ass
 
	gc⁄dôi⁄Æ
;

105 
	#SPINLOCK_SUPPORTED
 1

	)

108 
muãx
 
	t•ölock
;

109 
	#SPINLOCK_SUPPORTED
 0

	)

117 ˛as†
	cc⁄dôi⁄Æ
 {

118 
	g¥iv©e
:

119 
muèbÀ
 
±hªad_c⁄d_t
 
m_c⁄d
;

120 
	gpublic
:

121 
c⁄dôi⁄Æ
() {

122 
îr‹
 = 
±hªad_c⁄d_öô
(&
m_c⁄d
, 
NULL
);

123 
as£π
(!
îr‹
);

125 
ölöe
 
waô
(c⁄° 
muãx
& 
mut
) const {

126 
	gîr‹
 = 
±hªad_c⁄d_waô
(&
m_c⁄d
, &
mut
.
m_mut
);

127 
as£π
(!
îr‹
);

129 
ölöe
 
timedwaô
(c⁄° 
muãx
& 
mut
, 
£c
) const {

130 
time•ec
 
	gtimeout
;

131 
timevÆ
 
	gtv
;

132 
timez⁄e
 
	gtz
;

133 
gëtimeofday
(&
tv
, &
tz
);

134 
	gtimeout
.
	gtv_n£c
 = 0;

135 
	gtimeout
.
	gtv_£c
 = 
tv
.
tv_£c
 + 
£c
;

136  
±hªad_c⁄d_timedwaô
(&
m_c⁄d
, &
mut
.
m_mut
, &
timeout
);

138 
ölöe
 
sig«l
() const {

139 
	gîr‹
 = 
±hªad_c⁄d_sig«l
(&
m_c⁄d
);

140 
as£π
(!
îr‹
);

142 
ölöe
 
brﬂdˇ°
() const {

143 
	gîr‹
 = 
±hªad_c⁄d_brﬂdˇ°
(&
m_c⁄d
);

144 
as£π
(!
îr‹
);

146 ~
c⁄dôi⁄Æ
() {

147 
	gîr‹
 = 
±hªad_c⁄d_de°roy
(&
m_c⁄d
);

148 
as£π
(!
îr‹
);

156 ˛as†
	c£m≠h‹e
 {

157 
	g¥iv©e
:

158 
muèbÀ
 
£m_t
 
m_£m
;

159 
	gpublic
:

160 
£m≠h‹e
() {

161 
îr‹
 = 
£m_öô
(&
m_£m
, 0,0);

162 
as£π
(!
îr‹
);

164 
ölöe
 
po°
() const {

165 
	gîr‹
 = 
£m_po°
(&
m_£m
);

166 
as£π
(!
îr‹
);

168 
ölöe
 
waô
() const {

169 
	gîr‹
 = 
£m_waô
(&
m_£m
);

170 
as£π
(!
îr‹
);

172 ~
£m≠h‹e
() {

173 
	gîr‹
 = 
£m_de°roy
(&
m_£m
);

174 
as£π
(!
îr‹
);

181 
	#©omic_xadd
(
P
, 
V
Ë
	`__sync_„tch_™d_add
((P), (V))

	)

182 
	#cmpxchg
(
P
, 
O
, 
N
Ë
	`__sync_vÆ_com∑ª_™d_sw≠
((P), (O), (N))

	)

183 
	#©omic_öc
(
P
Ë
	`__sync_add_™d_„tch
((P), 1)

	)

192 ˛as†
	c•örwlock
 {

194 
	urwtickë
 {

195 
	gu
;

196 
	gus
;

197 
__exãnsi⁄__
 struct {

198 
	gwrôe
;

199 
	gªad
;

200 
	gu£rs
;

201 } 
	gs
;

203 
muèbÀ
 
boﬁ
 
	gwrôög
;

204 
muèbÀ
 vﬁ©ûê
rwtickë
 
	gl
;

205 
	gpublic
:

206 
•örwlock
() {

207 
mem£t
(
c⁄°_ˇ°
<
rwtickë
*>(&
l
), 0, (rwticket));

209 
ölöe
 
wrôñock
() const {

210 
	gme
 = 
©omic_xadd
(&
l
.
u
, (1<<16));

211 
	gvÆ
 = 
me
 >> 16;

213 
	gvÆ
 !
l
.
s
.
wrôe
Ë
sched_yõld
();

214 
	gwrôög
 = 
åue
;

217 
ölöe
 
wru∆ock
() const{

218 
rwtickë
 
	gt
 = *
c⁄°_ˇ°
<rwtickë*>(&
l
);

220 
	gt
.
	gs
.
	gwrôe
++;

221 
	gt
.
	gs
.
	gªad
++;

223 *(vﬁ©ûê*Ë(&
	gl
Ë
t
.
us
;

224 
	gwrôög
 = 
Ál£
;

225 
__asm
("mfence");

228 
ölöe
 
ªadlock
() const {

229 
	gme
 = 
©omic_xadd
(&
l
.
u
, (1<<16));

230 
	gvÆ
 = 
me
 >> 16;

232 
	gvÆ
 !
l
.
s
.
ªad
Ë
sched_yõld
();

233 
	gl
.
	gs
.
	gªad
++;

236 
ölöe
 
rdu∆ock
() const {

237 
©omic_öc
(&
l
.
s
.
wrôe
);

240 
ölöe
 
u∆ock
() const {

241 i‡(!
	gwrôög
Ë
rdu∆ock
();

242 
wru∆ock
();

246 #unde‡
©omic_xadd


247 #unde‡
cmpxchg


248 #unde‡
©omic_öc


255 ˛as†
	crwlock
 {

256 
	g¥iv©e
:

257 
muèbÀ
 
±hªad_rwlock_t
 
m_rwlock
;

258 
	gpublic
:

259 
rwlock
() {

260 
îr‹
 = 
±hªad_rwlock_öô
(&
m_rwlock
, 
NULL
);

261 
as£π
(!
îr‹
);

263 ~
rwlock
() {

264 
	gîr‹
 = 
±hªad_rwlock_de°roy
(&
m_rwlock
);

265 
as£π
(!
îr‹
);

267 
ölöe
 
ªadlock
() const {

268 
±hªad_rwlock_rdlock
(&
m_rwlock
);

271 
ölöe
 
wrôñock
() const {

272 
±hªad_rwlock_wæock
(&
m_rwlock
);

275 
ölöe
 
u∆ock
() const {

276 
±hªad_rwlock_u∆ock
(&
m_rwlock
);

279 
ölöe
 
rdu∆ock
() const {

280 
u∆ock
();

282 
ölöe
 
wru∆ock
() const {

283 
u∆ock
();

291 #ifde‡
__löux__


296 ˛as†
	cb¨rõr
 {

297 
	g¥iv©e
:

298 
muèbÀ
 
±hªad_b¨rõr_t
 
m_b¨rõr
;

299 
	gpublic
:

300 
b¨rõr
(
size_t
 
numthªads
Ë{ 
±hªad_b¨rõr_öô
(&
m_b¨rõr
, 
NULL
,Çumthreads); }

301 ~
b¨rõr
(Ë{ 
±hªad_b¨rõr_de°roy
(&
m_b¨rõr
); }

302 
ölöe
 
waô
(Ëc⁄° { 
±hªad_b¨rõr_waô
(&
m_b¨rõr
); }

310 ˛as†
	cb¨rõr
 {

311 
	g¥iv©e
:

312 
muãx
 
m
;

313 
	g√eded
;

314 
	gˇŒed
;

315 
c⁄dôi⁄Æ
 
	gc
;

318 
	g°d
::
ve˘‹
<> 
waôög
;

319 
	gpublic
:

321 
b¨rõr
(
size_t
 
numthªads
) {

322 
√eded
 = ()
numthªads
;

323 
	gˇŒed
 = 0;

324 
	gwaôög
.
ªsize
(
numthªads
);

325 
	g°d
::
fûl
(
waôög
.
begö
(), waôög.
íd
(), 0);

328 ~
b¨rõr
() {}

331 
ölöe
 
waô
() {

332 
	gm
.
lock
();

334 
size_t
 
	gmyid
 = 
ˇŒed
;

335 
	gwaôög
[
myid
] = 1;

336 
	gˇŒed
++;

338 i‡(
	gˇŒed
 =
√eded
) {

342 
ˇŒed
 = 0;

344 
	g°d
::
fûl
(
waôög
.
begö
(), waôög.
íd
(), 0);

345 
	gc
.
brﬂdˇ°
();

349 
	gwaôög
[
myid
]Ë
	gc
.
waô
(
m
);

351 
	gm
.
u∆ock
();

358 
ölöe
 
	$¥e„tch_ønge
(*
addr
, 
size_t
 
Àn
) {

359 *
˝
;

360 *
íd
 = (*)(
addr
Ë+ 
Àn
;

362 
˝
 = (*)(
addr
); c∞< 
íd
; c∞+64Ë
	`__buûtö_¥e„tch
(cp, 0);

363 
	}
}

364 
ölöe
 
	$¥e„tch_ønge_wrôe
(*
addr
, 
size_t
 
Àn
) {

365 *
˝
;

366 *
íd
 = (*)(
addr
Ë+ 
Àn
;

368 
˝
 = (*)(
addr
); c∞< 
íd
; c∞+64Ë
	`__buûtö_¥e„tch
(cp, 1);

369 
	}
}

	@util/qsort.hpp

24 #i‚de‡
GRAPHCHI_QSORT_INCLUDED


25 
	#GRAPHCHI_QSORT_INCLUDED


	)

27 
	~<Æg‹ôhm
>

28 
	~<ve˘‹
>

30 
	gãm∂©e
 <
˛ass
 
	gE
, cœs†
	gBöPªd
>

31 
	$ö£πi⁄S‹t
(
E
* 
A
, 
n
, 
BöPªd
 
f
) {

32 
i
=0; i < 
n
; i++) {

33 
E
 
v
 = 
A
[
i
];

34 
E
* 
B
 = 
A
 + 
i
;

35 --
B
 >
A
 && 
	`f
(
v
,*B)) *(B+1) = *B;

36 *(
B
+1Ë
v
;

38 
	}
}

41 
	#ISORT
 25

	)

43 
	gãm∂©e
 <
˛ass
 
	gE
, cœs†
	gBöPªd
>

44 
E
 
	$medün
(
E
 
a
, E 
b
, E 
c
, 
BöPªd
 
f
) {

45  
	`f
(
a
,
b
Ë? (f(b,
c
) ? b : (f(a,c) ? c :á))

46 : (
	`f
(
a
,
c
Ë?á : (f(
b
,c) ? c : b));

47 
	}
}

50 
	gãm∂©e
 <
˛ass
 
	gE
, cœs†
	gBöPªd
>

51 
	$quickS‹t
(
E
* 
A
, 
n
, 
BöPªd
 
f
) {

52 i‡(
n
 < 
ISORT
Ë
	`ö£πi⁄S‹t
(
A
,Ç, 
f
);

54 
E
 
p
 = 
A
[
	`ønd
(Ë% 
n
];

55 
E
* 
L
 = 
A
;

56 
E
* 
M
 = 
A
;

57 
E
* 
R
 = 
A
+
n
-1;

59 !
	`f
(
p
,*
M
)) {

60 i‡(
	`f
(*
M
,
p
)Ë
°d
::
	`sw≠
(*M,*(
L
++));

61 i‡(
M
 >
R
) ;

62 
M
++;

64 
	`f
(
p
,*
R
)) R--;

65 i‡(
M
 >
R
) ;

66 
°d
::
	`sw≠
(*
M
,*
R
--);

67 i‡(
	`f
(*
M
,
p
)Ë
°d
::
	`sw≠
(*M,*(
L
++));

68 
M
++;

70 
	`quickS‹t
(
A
, (Ë(
L
-A), 
f
);

71 
	`quickS‹t
(
M
, (Ë(
A
+
n
-M), 
f
);

73 
	}
}

	@util/radixSort.hpp

23 #i‚de‡
_S_RADIX_INCLUDED


24 
	#_S_RADIX_INCLUDED


	)

26 
	~<io°ªam
>

27 
	~<Æg‹ôhm
>

28 
	~<m©h.h
>

29 
	~"gøphchi_ty≥s.hµ
"

35 
«me•a˚
 
	ggøphchi
 {

41 
	#MAX_RADIX
 8

	)

42 
	#BUCKETS
 (1 << 
MAX_RADIX
)

	)

45 
	tbIndexT
;

46 
	tötT
;

49 
	gãm∂©e
 <
˛ass
 
	gE
, cœs†
	gF
>

50 
ødixSãp
(
E
* 
A
, E* 
B
, 
bIndexT
 *
Tmp
, 
ötT
* 
cou¡s
,

51 
ötT
 
n
, i¡T 
m
, 
F
 
exåa˘
) {

52 
ötT
 
	gi
 = 0; i < 
	gm
; i++Ë
	gcou¡s
[
i
] = 0;

53 
ötT
 
	gj
 = 0; j < 
	gn
; j++) {

54 
ötT
 
	gk
 = 
Tmp
[
j
] = 
exåa˘
(
A
[j]);

55 
	gcou¡s
[
k
]++;

57 
ötT
 
	gs
 = 0;

58 
ötT
 
	gi
 = 0; i < 
	gm
; i++) {

59 
	gs
 +
cou¡s
[
i
];

60 
	gcou¡s
[
i
] = 
s
;

62 
ötT
 
	gj
 = 
n
-1; j >= 0; j--) {

63 
ötT
 
	gx
 = --
cou¡s
[
Tmp
[
j
]];

64 
	gB
[
x
] = 
A
[
j
];

69 
	gãm∂©e
 <
˛ass
 
	gE
, cœs†
	gF
>

70 
	seBôs
 {

71 
ötT
 
	g_mask
; i¡T 
	g_off£t
; 
F
 
	g_f
;

72 
eBôs
(
bôs
, 
ötT
 
off£t
, 
F
 
f
): 
_mask
((1<<bits)-1),

73 
_off£t
(
off£t
), 
_f
(
f
) {}

74 
ötT
 
›î©‹
(Ë(
E
 
	gp
Ë{ 
	g_mask
&(
_f
(
p
)>>
	g_off£t
);}

77 
	gãm∂©e
 <
˛ass
 
	gT
>

78 
ötT
 
log2Up
(
T
 
i
) {

79 
ötT
 
	ga
=0;

80 (1L << 
	ga
Ë<
i
Ë
a
++;

81  
	ga
;

85 
	gãm∂©e
 <
˛ass
 
	gE
, cœs†
	gF
>

86 
iS‹t
(
E
 *
A
, 
ötT
 
n
, i¡T 
m
, 
F
 
f
) {

87 
ötT
 
	gbôs
 = 
log2Up
(
m
);

90 
E
* 
	gB
 = (E*Ë
mÆloc
((E)*
n
);

91 
bIndexT
* 
	gTmp
 = (bIndexT*Ë
mÆloc
((bIndexT)*
n
);

92 
ötT
* 
	gcou¡s
 = (ötT*Ë
mÆloc
((ötT)*
BUCKETS
);

94 
ötT
 
	grounds
 = 1+(
bôs
-1)/
MAX_RADIX
;

95 
ötT
 
	grbôs
 = 1+(
bôs
-1)/
rounds
;

96 
ötT
 
	gbôOff£t
 = 0;

97 
boﬁ
 
	gÊù≥d
 = 0;

99 
	gbôOff£t
 < 
	gbôs
) {

100 i‡(
	gbôOff£t
+
	grbôs
 > 
	gbôs
Ërbô†
bôs
-
bôOff£t
;

101 i‡(
	gÊù≥d
)

102 
ødixSãp
(
B
, 
A
, 
Tmp
, 
cou¡s
, 
n
, 1L << 
rbôs
,

103 
eBôs
<
E
,
F
>(
rbôs
,
bôOff£t
,
f
));

105 
ødixSãp
(
A
, 
B
, 
Tmp
, 
cou¡s
, 
n
, 1L << 
rbôs
,

106 
eBôs
<
E
,
F
>(
rbôs
,
bôOff£t
,
f
));

107 
	gbôOff£t
 +
rbôs
;

108 
	gÊù≥d
 = !
Êù≥d
;

111 i‡(
	gÊù≥d
)

112 
ötT
 
	gi
=0; i < 
	gn
; i++)

113 
	gA
[
i
] = 
B
[i];

115 
‰ì
(
B
); fªe(
Tmp
); fªe(
cou¡s
);

	@util/randomweightinject.cpp

11 
	~<c°dlib
>

12 
	~<io°ªam
>

13 
	~<as£π.h
>

15 
	tvid_t
;

18 
ölöe
 
	$FIXLINE
(* 
s
) {

19 
Àn
 = (Ë
	`°æí
(
s
)-1;

20 if(
s
[
Àn
] == '\n') s[len] = 0;

21 
	}
}

23 
	$maö
(
¨gc
, c⁄° ** 
¨gv
) {

24 
FILE
 * 
öf
 = 
	`f›í
(
¨gv
[1], "r");

25 
°d
::
°rög
 
	`ty≥
(
¨gv
[2]);

27 
ouäame
[1024];

28 
	`•rötf
(
ouäame
, "%s_weighãd", 
¨gv
[1]);

29 
°d
::
cout
 << "Ouçut: " << 
ouäame
 << std::
ídl
;

31 
FILE
 * 
outf
 = 
	`f›í
(
ouäame
, "w");

33 i‡(
ty≥
 == "edgelist" ) {

34 
size_t
 
byã§ód
 = 0;

35 
size_t
 
löíum
 = 0;

37 
	`as£π
(
öf
 !
NULL
);

39 
s
[1024];

40 
	`fgës
(
s
, 1024, 
öf
Ë!
NULL
) {

41 
löíum
++;

42 i‡(
löíum
 % 10000000 == 0) {

43 
°d
::
cout
 << "Ród " << 
löíum
 << "Üöes, " << 
byã§ód
 / 1024 / 1024. << " MB" << std::
ídl
;

45 
	`FIXLINE
(
s
);

46 
byã§ód
 +
	`°æí
(
s
);

47 i‡(
s
[0] == '#') ;

48 i‡(
s
[0] == '%') ;

50 
dñims
[] = "\t, ";

51 * 
t
;

53 
t
 = 
	`°πok
(
s
, 
dñims
);

54 
vid_t
 
‰om
 = 
	`©oi
(
t
);

55 
t
 = 
	`°πok
(
NULL
, 
dñims
);

56 
vid_t
 
to
 = 
	`©oi
(
t
);

57 
	`Ârötf
(
outf
,"%d %d %d\n", 
‰om
, 
to
, 
	`øndom
() % 100000000);

59 } i‡(
ty≥
 == "adjlist") {

60 
maxÀn
 = 100000000;

61 * 
s
 = (*Ë
	`mÆloc
(
maxÀn
);

63 
size_t
 
byã§ód
 = 0;

65 
dñims
[] = " \t";

66 
size_t
 
löíum
 = 0;

67 
size_t
 
œ°log
 = 0;

69 
	`fgës
(
s
, 
maxÀn
, 
öf
Ë!
NULL
) {

70 
löíum
++;

71 i‡(
byã§ód
 - 
œ°log
 >= 500000000) {

72 
°d
::
cout
 << "Ród " << 
löíum
 << "Üöes, " << 
byã§ód
 / 1024 / 1024. << " MB" << std::
ídl
;

73 
œ°log
 = 
byã§ód
;

75 
	`FIXLINE
(
s
);

76 
byã§ód
 +
	`°æí
(
s
);

78 i‡(
s
[0] == '#') ;

79 i‡(
s
[0] == '%') ;

80 * 
t
 = 
	`°πok
(
s
, 
dñims
);

81 
vid_t
 
‰om
 = 
	`©oi
(
t
);

82 
t
 = 
	`°πok
(
NULL
,
dñims
);

83 i‡(
t
 !
NULL
) {

84 
vid_t
 
num
 = 
	`©oi
(
t
);

85 
vid_t
 
i
 = 0;

86 (
t
 = 
	`°πok
(
NULL
,
dñims
)) != NULL) {

87 
vid_t
 
to
 = 
	`©oi
(
t
);

88 i‡(
‰om
 !
to
)

89 
	`Ârötf
(
outf
,"%d %d %d\n", 
‰om
, 
to
, 
	`øndom
() % 100000000);

90 
i
++;

92 i‡(
num
 !
i
) {

93 
°d
::
˚º
 << "Mism©ch whíÑódögádja˚ncyÜi°: " << 
num
 << " !" << 
i
 << " s: " << std::
	`°rög
(
s
)

94 << " o¿löe: " << 
löíum
 << 
°d
::
ídl
;

99 
	`‰ì
(
s
);

103 
	`f˛o£
(
outf
);

104 
	}
}

	@util/readdeg.cpp

9 
	~<io°ªam
>

10 
	~<f°ªam
>

12 
	sdegªe
 {

13 
	mödegªe
;

14 
	moutdegªe
;

17 
	$maö
(
¨gc
, c⁄° ** 
¨gv
) {

18 
FILE
 * 
f
 = 
	`f›í
(
¨gv
[1], "r");

20 
w™ãd
 = 
	`©oi
(
¨gv
[2]);

21 
size_t
 
nout
 = 0;

22 
size_t
 
nö
 = 0;

23 
size_t
 
n⁄z
 = 0;

24 
size_t
 
tŸ
 = 0;

25 
degªe
 
d
;

26 
j
 = 0;

27 !
	`„of
(
f
)) {

28 
	`‰ód
(&
d
, (
degªe
), 1, 
f
);

29 
nout
 +
d
.
outdegªe
;

30 
nö
 +
d
.
ödegªe
;

31 i‡(
w™ãd
 =
j
) {

32 
°d
::
cout
 << 
w™ãd
 << " indeg: " << 
d
.
ödegªe
 << " outdeg: " << d.
outdegªe
 << std::
ídl
;

35 
j
++;

37 
°d
::
cout
 << "TŸÆ in: " << 
nö
 << "ÅŸÆ out: " << 
nout
 << std::
ídl
;

38 
°d
::
cout
 << "N⁄-sögÀt⁄ vîti˚s: " << 
n⁄z
 << std::
ídl
;

39 
°d
::
cout
 << "TŸÆ vîti˚s: " << 
tŸ
 << std::
ídl
;

41 
	}
}

	@util/synchronized_queue.hpp

1 #i‚de‡
SYNCHRONIZED_QUEUE_HPP


2 
	#SYNCHRONIZED_QUEUE_HPP


	)

4 
	~<queue
>

5 
	~"±hªad_toﬁs.hµ
"

9 
«me•a˚
 
	ggøphchi
 {

12 
	gãm∂©e
 <
ty≥«me
 
	gT
>

13 ˛as†
	csynchr⁄ized_queue
 {

15 
	gpublic
:

16 
synchr⁄ized_queue
() { };

17 ~
synchr⁄ized_queue
() { };

19 
push
(c⁄° 
T
 &
ôem
) {

20 
	g_queuñock
.
lock
();

21 
	g_queue
.
push
(
ôem
);

22 
	g_queuñock
.
u∆ock
();

25 
boﬁ
 
ß„p›
(
T
 * 
ªt
) {

26 
	g_queuñock
.
lock
();

27 i‡(
	g_queue
.
size
() == 0) {

28 
_queuñock
.
u∆ock
();

30  
	gÁl£
;

32 *
	gªt
 = 
_queue
.
‰⁄t
();

33 
	g_queue
.
p›
();

34 
	g_queuñock
.
u∆ock
();

35  
	gåue
;

38 
T
 
p›
() {

39 
	g_queuñock
.
lock
();

40 
T
 
	gt
 = 
_queue
.
‰⁄t
();

41 
	g_queue
.
p›
();

42 
	g_queuñock
.
u∆ock
();

43  
	gt
;

46 
size_t
 
size
() const{

47  
	g_queue
.
size
();

49 
	g¥iv©e
:

50 
°d
::
queue
<
T
> 
_queue
;

51 
•ölock
 
	g_queuñock
;

	@util/toplist.hpp

29 #i‚de‡
DEF_GRAPHCHI_TOPLIST


30 
	#DEF_GRAPHCHI_TOPLIST


	)

32 
	~<ve˘‹
>

33 
	~<Æg‹ôhm
>

34 
	~<î∫o.h
>

35 
	~<as£π.h
>

37 
	~"io/°rùedio.hµ
"

38 
	~"loggî/loggî.hµ
"

39 
	~"utû/mîge.hµ
"

40 
	~"utû/ioutû.hµ
"

41 
	~"utû/qs‹t.hµ
"

42 
	~"≠i/chifûíames.hµ
"

43 
	~"ígöe/auxd©a/vîãx_d©a.hµ
"

45 
«me•a˚
 
	ggøphchi
 {

47 
	gãm∂©e
 <
ty≥«me
 
	gVîãxD©aTy≥
>

48 
	svîãx_vÆue
 {

49 
vid_t
 
	gvîãx
;

50 
VîãxD©aTy≥
 
	gvÆue
;

51 
vîãx_vÆue
() {}

52 
vîãx_vÆue
(
vid_t
 
v
, 
VîãxD©aTy≥
 
x
Ë: 
vîãx
(v), 
vÆue
(x) {}

55 
	gãm∂©e
 <
ty≥«me
 
	gVîãxD©aTy≥
>

56 
boﬁ
 
vîãx_vÆue_gª©î
(c⁄° 
vîãx_vÆue
<
VîãxD©aTy≥
> &
a
, c⁄° vîãx_vÆue<VîãxD©aTy≥> &
b
) {

57  
	ga
.
	gvÆue
 > 
	gb
.value;

71 
	gãm∂©e
 <
ty≥«me
 
	gVîãxD©aTy≥
>

72 
	g°d
::
ve˘‹
<
vîãx_vÆue
<
VîãxD©aTy≥
> > 
gë_t›_vîti˚s
(
°d
::
°rög
 
ba£fûíame
, 
¡›
, 
vid_t
 
‰om
=0, vid_à
to
=0) {

73 
vîãx_vÆue
<
	tVîãxD©aTy≥
> 
	tvv_t
;

76 
mërics
 
m
("toplist");

77 
°rùedio
 * 
	giomgr
 = 
√w
 såùedio(
m
);

80 
vid_t
 
	gªadwödow
 = 1024 * 1024;

81 
size_t
 
	gnumvîti˚s
 = 
gë_num_vîti˚s
(
ba£fûíame
);

82 
	gvîãx_d©a_°‹e
<
	gVîãxD©aTy≥
> * 
	gvîãxd©a
 =

83 
√w
 
vîãx_d©a_°‹e
<
VîãxD©aTy≥
>(
ba£fûíame
, 
	gnumvîti˚s
, 
	giomgr
);

85 i‡((
	gsize_t
)
	g¡›
 > 
	gnumvîti˚s
) {

86 
	g¡›
 = ()
numvîti˚s
;

90 
vv_t
 * 
	gbuf„r_idxs
 = (vv_t*Ë
ˇŒoc
(
ªadwödow
, (vv_t));

91 
vv_t
 * 
	gt›buf
 = (vv_t*Ë
ˇŒoc
(
¡›
, (vv_t));

92 
vv_t
 * 
	gmîgóº
 = (vv_t*Ë
ˇŒoc
(
¡›
 * 2, (vv_t));

95 
size_t
 
	gidx
 = 0;

96 
vid_t
 
	g°
 = 0;

97 
vid_t
 
	gí
 = 
numvîti˚s
 - 1;

99 
	gcou¡
 = 0;

100 
	g°
 <
numvîti˚s
 - 1) {

101 
í
 = 
°
 + 
ªadwödow
 - 1;

102 i‡(
	gí
 >
numvîti˚s
 - 1Ë
í
 =Çumvertices - 1;

105 
	gvîãxd©a
->
lﬂd
(
°
, 
í
);

107 
	g¡
 = 
í
 - 
°
 + 1;

108 
	gk
 = 0;

109 
VîãxD©aTy≥
 
	gmöima
 = VertexDataType();

110 i‡(
	gcou¡
 > 0) {

111 
	gmöima
 = 
t›buf
[
¡›
 - 1].
vÆue
;

113 
	gj
=0; j < 
	g¡
; j++) {

114 
	gVîãxD©aTy≥
& 
	gvÆ
 = *
vîãxd©a
->
vîãx_d©a_±r
(
j
 + 
°
);

115 i‡(
	gcou¡
 =0 || (
vÆ
 > 
möima
)) {

116 
buf„r_idxs
[
k
] = 
vv_t
((
vid_t
)
idx
 + 
‰om
, 
vÆ
);

117 
	gk
++;

119 
	gidx
++;

121 
	g¡
 = 
k
;

124 
quickS‹t
(
buf„r_idxs
, 
¡
, 
vîãx_vÆue_gª©î
<
VîãxD©aTy≥
>);

127 i‡(
	gcou¡
 == 0) {

129 
mem˝y
(
t›buf
, 
buf„r_idxs
, 
¡›
 * (
vv_t
));

132 
	gmîge
<
	gvv_t
>(
	gt›buf
, 
	g¡›
, 
	gbuf„r_idxs
, 
	g°d
::
mö
(
¡›
, 
¡
), 
	gmîgóº
, 
	gvîãx_vÆue_gª©î
<
	gVîãxD©aTy≥
>);

133 
mem˝y
(
t›buf
, 
mîgóº
, 
¡›
 * (
vv_t
));

136 
	gcou¡
++;

137 
	g°
 +
ªadwödow
;

141 
	g°d
::
ve˘‹
< 
vv_t
 > 
ªt
;

142 
	gi
=0; i < 
	g¡›
; i++) {

143 
	gªt
.
push_back
(
t›buf
[
i
]);

145 
‰ì
(
buf„r_idxs
);

146 
‰ì
(
mîgóº
);

147 
‰ì
(
t›buf
);

149 
dñëe
 
	gvîãxd©a
;

150 
dñëe
 
	giomgr
;

152  
	gªt
;

	@
1
.
0
80
2375
api/chifilenames.hpp
api/dynamicdata/chivector.hpp
api/functional/functional_api.hpp
api/functional/functional_bulksync.hpp
api/functional/functional_defs.hpp
api/functional/functional_semisync.hpp
api/graph_objects.hpp
api/graphchi_context.hpp
api/graphchi_program.hpp
api/graphlab2_1_GAS_api/assertions.hpp
api/graphlab2_1_GAS_api/graphchi_graphlabv2_1.hpp
api/graphlab2_1_GAS_api/graphlab.hpp
api/graphlab2_1_GAS_api/random.cpp
api/graphlab2_1_GAS_api/random.hpp
api/ischeduler.hpp
api/vertex_aggregator.hpp
engine/auxdata/degree_data.hpp
engine/auxdata/dynamicdata/vertex_data_dynamic.hpp
engine/auxdata/vertex_data.hpp
engine/bitset_scheduler.hpp
engine/dynamic_graphs/edgebuffers.hpp
engine/dynamic_graphs/graphchi_dynamicgraph_engine.hpp
engine/functional/functional_engine.hpp
engine/graphchi_engine.hpp
external/vpiotr-mongoose-cpp/examples/chat.c
external/vpiotr-mongoose-cpp/main.c
external/vpiotr-mongoose-cpp/mongcpp.cpp
external/vpiotr-mongoose-cpp/mongcpp.h
external/vpiotr-mongoose-cpp/mongoose.c
external/vpiotr-mongoose-cpp/mongoose.h
external/vpiotr-mongoose-cpp/test/embed.c
external/vpiotr-mongoose-cpp/test/mongotest.cpp
graphchi_basic_includes.hpp
graphchi_types.hpp
httpadmin/chi_httpadmin.hpp
httpadmin/plotter.hpp
io/stripedio.hpp
logger/logger.hpp
metrics/imetrics_reporter.hpp
metrics/metrics.hpp
metrics/reps/basic_reporter.hpp
metrics/reps/file_reporter.hpp
metrics/reps/html_reporter.hpp
metrics/reps/null_reporter.hpp
output/output.hpp
preprocessing/blocksplitter.cpp
preprocessing/conversions.hpp
preprocessing/sharder.hpp
preprocessing/sharder_basic.cpp
preprocessing/util/orderbydegree.hpp
shards/dynamicdata/dynamicblock.hpp
shards/dynamicdata/memoryshard.hpp
shards/dynamicdata/slidingshard.hpp
shards/memoryshard.hpp
shards/slidingshard.hpp
tests/basic_dynamicengine_smoketest.cpp
tests/basic_dynamicengine_smoketest2.cpp
tests/basic_smoketest.cpp
tests/bulksync_functional_test.cpp
tests/dynamicdata_smoketest.cpp
tests/test_dynamicedata_loader.cpp
util/atomic.hpp
util/binary_minheap.hpp
util/cmdopts.hpp
util/configfile.hpp
util/dense_bitset.hpp
util/erdosrenyi.cpp
util/graphgenerators.cpp
util/graphgenerators.h
util/ioutil.hpp
util/kwaymerge.hpp
util/labelanalysis.hpp
util/merge.hpp
util/pthread_tools.hpp
util/qsort.hpp
util/radixSort.hpp
util/randomweightinject.cpp
util/readdeg.cpp
util/synchronized_queue.hpp
util/toplist.hpp
